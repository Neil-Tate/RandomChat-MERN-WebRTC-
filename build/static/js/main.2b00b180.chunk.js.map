{"version":3,"sources":["utils/storage.js","pages/HomePage/HomePage.js","config/config.js","pages/Signup/Signup.js","pages/Login/Login.js","pages/UserSign/UserSign.js","config/country.js","pages/GuestSign/GuestSign.js","components/NavBar.js","components/ChatBox.js","components/OnTyping/OnTyping.js","components/ProfileBox/ProfileBox.js","components/FullScreenImage/FullScreenImage.js","components/SearchSettingBox/SearchSettingBox.js","components/ErrorModal.js","components/LoadingModal.js","dataservice/request.js","pages/Chat/socket.js","pages/Chat/Emitter.js","pages/Chat/MediaDevice.js","pages/Chat/PeerConnection.js","components/CallWindow/CallWindow.js","components/CallModal/CallModal.js","pages/Chat/Chat.js","App/Routes.js","App/App.js","registerServiceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","FullPageIntroWithFixedTransparentNavbar","props","state","collapse","isWideEnough","onClick","bind","this","setState","color","fixed","dark","expand","scrolling","transparent","size","href","className","isOpen","navbar","right","to","src","overlay","icon","align","React","Component","RESTAPIUrl","SignUp","context","handleChange","handleChangeEmail","handleChangeConfirm","handleChangeName","handleDismiss","handleShow","signUpClicked","displayAlert","password","email","confPass","name","signInLoading","show","signupStatus","signUpMessage","length","test","String","toLowerCase","e","target","value","Alert","bsStyle","onDismiss","id","newUser","fetch","method","headers","body","then","res","json","log","message","FormGroup","controlId","FormControl","type","placeholder","onChange","validationState","validateEmail","Feedback","getValidationState","HelpBlock","getValidationStateConf","Button","block","disabled","LogIn","logInClicked","logInLoading","signInError","logInStatus","success","token","stateChanger","loggedIn","loggedInName","logOutButtonStatus","UserSign","logOutClicked","logOutLoadingMessage","logOutLoading","newState","Grid","Row","Col","md","xs","Tabs","defaultActiveKey","Tab","eventKey","title","countries","GuestSign","handleChangeLocation","handleChangeAge","handleChangeGender","handleSubmit","userName","location","age","gender","loginLoading","event","preventDefault","status","history","push","alert","sm","lg","xl","onSubmit","label","group","validate","required","map","object","i","getValue","min","max","checked","htmlFor","outline","ChatBox","onEditorStateChange","editorState","showEmojiPicker","toolbar_show","messageText","EditorState","createEmpty","onAttachFile","onSendClicked","draftToHtml","convertToRaw","getCurrentContent","emoji","convertHtml","subHtml","substring","totalHtml","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","editorStateChange","createWithContent","onTyping","KeyBindingUtil","hasCommandModifier","ctrlKey","getDefaultKeyBinding","findTargetUser","data","FormData","append","attachFile","files","fileContainer","fileName","video","config","audio","startCall","targetUser","left","mdHidden","lgHidden","signedInUser","profile_image","alt","center","callWithVideo","caret","basic","onSearchSettingModalShow","onProfileModalShow","divider","lockable","toBottomHeight","dataSource","messages","downButton","style","width","position","toggleEmojiPicker","toggle_toolbar","wrapperClassName","toolbarClassName","editorClassName","keyBindingFn","keyBindingFunction","onEditorChange","toolbar","options","inline","inDropdown","image","uploadEnabled","inputAccept","autoFocus","ref","accept","class","focusable","viewBox","aria-hidden","role","fill","d","bottom","opacity","zIndex","onSelect","addEmoji","emojiTooltip","closeEmojiPicker","OnTyping","imageURL","profileInfo","handleUploadImage","handleChangeProfile","ev","uploadInput","jwt_decode","user","onChangeProfile","profileContainer","FullScreenImage","downloadPath","imageUrl","split","onShowImageFullScreen","download","Range","createSliderWithTooltip","Slider","SearchSettingBox","temp","searchSetting","ageMin","ageMax","searchContainer","handleChangeSearchSetting","defaultValue","tipFormatter","ErrorModal","Header","Title","Body","glyph","errorMessage","LoadingModal","API_ROOT","process","REACT_APP_SERVER_URI","axios","defaults","baseURL","socket","io","connect","Emitter","events","args","forEach","fn","_","isFunction","listeners","index","findIndex","_fn","splice","MediaDevice","navigator","mediaDevices","getUserMedia","facingMode","height","ideal","stream","emit","catch","DOMException","on","len","arguments","track","enabled","set","getTracks","stop","PC_CONFIG","iceServers","url","credential","username","PeerConnection","friendID","pc","RTCPeerConnection","onicecandidate","candidate","ontrack","streams","mediaDevice","isCaller","addTrack","createOffer","start","isStarter","close","off","getDescription","createAnswer","desc","setLocalDescription","sdp","rtcSdp","RTCSessionDescription","setRemoteDescription","iceCandidate","RTCIceCandidate","addIceCandidate","getButtonClass","classnames","disable","CallWindow","peerSrc","localSrc","endCall","peerVideo","useRef","localVideo","useState","setVideo","setAudio","useEffect","current","srcObject","toggle","toggleMediaDevice","deviceType","autoPlay","muted","CallModal","callFrom","rejectCall","acceptWithVideo","App","signInModalShow","users","userChatData","selectedUserIndex","_id","startCallHandler","endCallHandler","rejectCallHandler","initAxios","initSocketConnection","createSocketRoom","setupSocketListeners","imgObj","document","getElementsByTagName","that","addEventListener","hasAttribute","attributes","getNamedItem","showImageFullScreen","attachFileUrl","interceptors","request","use","loading","Promise","reject","response","NotificationManager","blackUsersList","findTargetQuery","prevTargetUser","onMessageRecieved","onReconnection","onClientDisconnected","onFindTargetUser","onIgnore","onTargetUserTyping","from","callModal","messageData","messageDataText","text","str","array","matchAll","emojiHtml","querySelector","join","innerHTML","replace","renderAddCmp","renderHtml","avatar","pop","prevMessageData","date","element","scrollTop","scrollHeight","filter","u","unread","Date","userInfo","profileModalShow","searchModalShow","turnOffRedTimeout","setTimeout","targetUserID","callWindow","clientId","createMessage","changeProfile","isEmpty","fakeAuth","PrivateRoute","component","rest","render","PrivateChatRoute","Routes","exact","path","HomePage","Chat","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","URL","origin","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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A,QACA,WACA,SACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,oBACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,SACA,aACA,UACA,SACA,WACA,aACA,UACA,aACA,kBACA,UACA,QACA,QACA,cACA,cACA,YACA,QACA,UACA,cACA,SACA,OACA,WACA,QACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,SACA,SACA,wBACA,cACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,kBACA,UACA,eACA,cACA,cACA,QACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,cACA,OACA,QACA,sBACA,UACA,SACA,eACA,SACA,SACA,UACA,6BACA,sBACA,iCACA,UACA,aACA,UACA,0BACA,YACA,UACA,QACA,SACA,YC1DWC,G,yDAhIb,WAAY7G,EAAO6B,GAAU,IAAD,8BAC1B,cAAM7B,EAAO6B,IACRI,iBAAmB,EAAKA,iBAAiB5B,KAAtB,gBACxB,EAAKyG,qBAAuB,EAAKA,qBAAqBzG,KAA1B,gBAC5B,EAAK0G,gBAAkB,EAAKA,gBAAgB1G,KAArB,gBACvB,EAAK2G,mBAAqB,EAAKA,mBAAmB3G,KAAxB,gBAC1B,EAAK4G,aAAe,EAAKA,aAAa5G,KAAlB,gBAEpB,EAAKJ,MAAQ,CACXiH,SAAU,GACVC,SAAU,SACVC,IAAK,GACLC,OAAQ,OACRC,cAAc,GAbU,E,6DAiBXpE,GACf5C,KAAKC,SAAS,CAAE2G,SAAUhE,EAAEC,OAAOC,U,2CAGhBF,GACnB5C,KAAKC,SAAS,CAAE4G,SAAUjE,EAAEC,OAAOC,U,sCAGrBA,GACd9C,KAAKC,SAAS,CAAE6G,IAAKhE,M,yCAGJF,GACjB5C,KAAKC,SAAS,CAAE8G,OAAQnE,EAAEC,OAAOC,U,4CAIjCzD,QAAQsE,IAAI3D,KAAKL,S,mCAGNsH,GAAQ,IAAD,OAClBA,EAAMC,iBACN7H,QAAQsE,IAAI,kBAFM,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","file":"static/js/main.2b00b180.chunk.js","sourcesContent":["export function getFromStorage(key) {\r\n    if (!key) {\r\n        return null;\r\n    }\r\n    try {\r\n        const valueStr = localStorage.getItem(key);\r\n        if (valueStr) {\r\n            return JSON.parse(valueStr);\r\n        }\r\n        return null;\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n}\r\nexport function setInStorage(key, obj) {\r\n    if (!key) {\r\n        console.error('Error: Key is missing');\r\n    }\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}","import React from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './HomePage.css';\r\n\r\nclass FullPageIntroWithFixedTransparentNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      isWideEnough: false,\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n      collapse: !this.state.collapse,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <Router>\r\n            <MDBNavbar color=\"bg-primary\" fixed=\"top\" dark expand=\"md\" scrolling transparent>\r\n              <MDBContainer size=\"md\">            \r\n                <MDBNavbarBrand href=\"/\">\r\n                  <strong className=\"navbar-title\">Chat With Stranger</strong>\r\n                </MDBNavbarBrand>\r\n                {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\r\n                <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                  <MDBNavbarNav right>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink to=\"/guest\">GUEST</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink to=\"/login\">SIGN IN</MDBNavLink>\r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink to=\"/register\">SIGN UP</MDBNavLink>\r\n                    </MDBNavItem>                    \r\n                  </MDBNavbarNav>\r\n                </MDBCollapse>\r\n              </MDBContainer>\r\n            </MDBNavbar>\r\n          </Router>\r\n\r\n          <MDBView src={process.env.PUBLIC_URL + '/background.jpg'}>\r\n            <MDBMask overlay=\"purple-light\" className=\"flex-center flex-column text-white text-center\">\r\n              <strong><h2>Random Video, Text & Audio Chat with Strangers</h2></strong><br></br>\r\n              <h5>It provides free random chat with cool people in private chat rooms.</h5>\r\n              <p>Chat with strangers & send pictures, videos in private free chat rooms. Meet & talk to strangers from all over the world.</p><br />      \r\n              <div className=\"btn-group\">\r\n                <MDBNavLink to=\"/guest\">\r\n                  <MDBBtn color=\"secondary\" size=\"lg\">\r\n                    <MDBIcon icon=\"user-shield\" className=\"mr-1\" size=\"lg\" /> Chat as a guest\r\n                  </MDBBtn>\r\n                </MDBNavLink>\r\n                <MDBNavLink to=\"/usersign\">\r\n                  <MDBBtn color=\"primary\" size=\"lg\">\r\n                    <MDBIcon icon=\"user\" className=\"mr-1\" size=\"lg\" /> Login as a user\r\n                  </MDBBtn>\r\n                </MDBNavLink>            \r\n              </div>              \r\n            </MDBMask>\r\n          </MDBView>\r\n        </header>\r\n\r\n        <main>\r\n          <MDBContainer className=\"text-center my-5\">\r\n            <p align=\"justify\">Texting strangers might come naturally to some but others may have goose bumps when they are trying to text strangers. When you text strangers you are opening a window into a great text chat with strangers. The first few texts are the most difficult ones, once you have started texting and managed to move past opening texts the rest is easy peasy lemon squeezy. Sending a text to strangers is just like letter writing which was back then known as making pen pals. However, these days text to strangers chat room is a modern way of connecting with strangers. When you text strangers you are at the first step of a great conversation that could blossom into a good friendship or even a relationship. There are many examples in the world where people have found their soulmates when they were random texting strangers online. Many people online text with strangers in order to find some company and to talk to someone. When you send a text to strangers what happens next is a total mystery. It might end abruptly a couple of times whereas other times it might turn into a beautiful conversation and a pleasant experience.</p>\r\n          </MDBContainer>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullPageIntroWithFixedTransparentNavbar;","// export const RESTAPIUrl = 'http://192.168.100.118:5000';\r\n// export const SOCKET_URI = 'http://192.168.100.118:5000';\r\n\r\nexport const RESTAPIUrl = 'https://anonymous-video-chat.herokuapp.com';\r\nexport const SOCKET_URI = 'https://anonymous-video-chat.herokuapp.com';","import React, { Component } from 'react';\r\nimport './Signup.css';\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    HelpBlock,  \r\n    Button,\r\n    Alert,\r\n} from 'react-bootstrap';\r\nimport 'whatwg-fetch';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\nclass SignUp extends Component {\r\n    \r\n    constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n        \r\n    this.handleChangeConfirm = this.handleChangeConfirm.bind(this);\r\n        \r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n        \r\n    this.handleDismiss = this.handleDismiss.bind(this);\r\n        \r\n    this.handleShow = this.handleShow.bind(this);\r\n        \r\n        \r\n    this.signUpClicked = this.signUpClicked.bind(this);\r\n        \r\n    this.displayAlert = this.displayAlert.bind(this);\r\n\r\n    this.state = {\r\n      password: '',\r\n      email: '',\r\n      confPass: '',\r\n      name: '',\r\n      signInLoading: false,\r\n      show: false,\r\n      signupStatus: 'success',\r\n      signUpMessage: 'You have signed up successfully. Proceed to login.',\r\n        \r\n    };\r\n  }\r\n    \r\n  validateEmail() {\r\n    if(this.state.email.length ===0) return null;\r\n      // eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(String(this.state.email).toLowerCase())?'success':'error';\r\n  }\r\n\r\n  getValidationState() {\r\n    const length = this.state.password.length;\r\n    if (length > 8) return 'success';\r\n    else if (length > 5) return 'warning';\r\n    else if (length > 0) return 'error';\r\n    return null;\r\n  }\r\n    \r\n  getValidationStateConf() {\r\n    const length = this.state.confPass.length;\r\n    if(length === 0 ) return null;\r\n      \r\n    else if( this.state.password === this.state.confPass ) return 'success';\r\n    \r\n    else return 'error';\r\n      \r\n    \r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n    \r\n  handleChangeEmail(e) {\r\n    this.setState({ email: e.target.value });\r\n  }\r\n\r\n  handleChangeConfirm(e) {\r\n    this.setState({ confPass: e.target.value });\r\n  }\r\n\r\n  handleChangeName(e) {\r\n    this.setState({ name: e.target.value });\r\n  }\r\n    \r\n  handleDismiss() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n    \r\n  displayAlert() {\r\n      return (\r\n          <Alert bsStyle={this.state.signupStatus} onDismiss={this.handleDismiss} id=\"alertBox\">\r\n              \r\n              <p>\r\n                { this.state.signUpMessage }\r\n              </p>\r\n              \r\n            </Alert>\r\n\r\n      );\r\n  }\r\n\r\n    \r\n  signUpClicked(e) {\r\n      this.setState({ signInLoading : true });\r\n      //console.log(e);\r\n      const newUser = {\r\n        password: this.state.password,\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n      };\r\n      \r\n      fetch( RESTAPIUrl+\"/api/account/signup\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newUser),\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            console.log('json', json);\r\n        \r\n        if(json.message === \"Signed Up\") {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'success',\r\n                signUpMessage: 'You have signed up successfully. Proceed to login.',\r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n                \r\n            });\r\n        } else if ( json.message === 'Error: Account Already Exists') {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'warning',\r\n                signUpMessage: 'Account already Exists. Procced to login',  \r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n            });\r\n        } else if( json.message === 'Error: Server Error') {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'danger',\r\n                signUpMessage: 'Unexpected error. Please try again later.',\r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n                \r\n            });\r\n        }\r\n        \r\n            \r\n        })\r\n      \r\n  }\r\n\r\n    \r\n  \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              <form>\r\n                <FormGroup\r\n                    controlId=\"signUpName\">\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        placeholder=\"Name\"\r\n                        onChange={this.handleChangeName}\r\n\r\n                        />\r\n\r\n                    </FormGroup>\r\n\r\n\r\n                <FormGroup\r\n                    controlId=\"signUpEmail\"\r\n                    validationState={this.validateEmail()}\r\n                    >\r\n\r\n                    <FormControl\r\n                        type=\"email\"\r\n                        value={this.state.email}\r\n                        placeholder=\"Email\"\r\n                        onChange={this.handleChangeEmail}\r\n                        />\r\n                    <FormControl.Feedback />    \r\n\r\n                </FormGroup>    \r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicTextSignupPass\"\r\n                  validationState={this.getValidationState()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <FormControl.Feedback />\r\n                  <HelpBlock id=\"passwordHelp\">Password must be minimum 8 characters long</HelpBlock>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicTextSignupConfPass\"\r\n                  validationState={this.getValidationStateConf()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.confPass}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChangeConfirm}\r\n                  />\r\n                  <FormControl.Feedback />\r\n\r\n                </FormGroup>\r\n\r\n                <Button\r\n                  block\r\n                  bsStyle=\"warning\"\r\n                  disabled = {this.state.signInLoading}\r\n                  onClick = {this.state.signInLoading ? null : this.signUpClicked}\r\n                  >\r\n                    {this.state.signInLoading ? 'Processing...' : 'Sign Up'}\r\n              </Button>\r\n\r\n\r\n              </form>\r\n                \r\n              { this.state.show ? this.displayAlert() : null}\r\n\r\n\r\n              \r\n        </div>\r\n          \r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n\r\n","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    Button,\r\n    Alert,\r\n} from 'react-bootstrap';\r\nimport 'whatwg-fetch';\r\nimport {\r\n  setInStorage,\r\n} from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\n\r\nclass LogIn extends Component {\r\n    \r\n    constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n    \r\n    this.logInClicked = this.logInClicked.bind(this);\r\n        \r\n    this.handleDismiss = this.handleDismiss.bind(this);\r\n        \r\n    this.handleShow = this.handleShow.bind(this); \r\n    \r\n        \r\n    this.displayAlert = this.displayAlert.bind(this);\r\n\r\n    this.state = {\r\n      password: '',\r\n      email: '',\r\n      logInLoading: false,\r\n      signInError: '',\r\n      show: false,\r\n      logInStatus: 'danger',\r\n        \r\n    };\r\n  }\r\n    \r\n  validateEmail() {\r\n    if(this.state.email.length ===0) return null;\r\n      // eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(String(this.state.email).toLowerCase())?'success':'error';\r\n  }\r\n\r\n  getValidationState() {\r\n    const length = this.state.password.length;\r\n    if (length > 8) return 'success';\r\n    else if (length > 5) return 'warning';\r\n    else if (length > 0) return 'error';\r\n    return null;\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n    \r\n  handleChangeEmail(e) {\r\n    this.setState({ email: e.target.value });\r\n  }\r\n    \r\n  logInClicked() {\r\n      const {\r\n          email, \r\n          password,\r\n      } = this.state;\r\n      \r\n      this.setState({\r\n          logInLoading: true,\r\n      });\r\n      \r\n      fetch( RESTAPIUrl + '/api/account/signin', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email,\r\n            password,\r\n          }),\r\n        }).then(res => res.json())\r\n          .then(json => {\r\n            console.log('json', json);\r\n            if (json.success) {\r\n              setInStorage('the_login_n_signup', { token: json.token, name: json.name });\r\n              this.setState({\r\n                signInError: 'Welcome ' + json.name + '!',\r\n                logInLoading: false,\r\n                password: '',\r\n                email: '',\r\n                token: json.token,\r\n                show: true,\r\n                logInStatus: 'success',\r\n              });\r\n                \r\n              this.props.stateChanger({\r\n                  loggedIn: true,\r\n                  token: json.token,\r\n                  loggedInName: json.name,\r\n                  logOutButtonStatus: 'warning',\r\n              });\r\n            } else {\r\n              this.setState({\r\n                signInError: json.message,\r\n                logInLoading: false,\r\n                show: true,\r\n                logInStatus: 'danger',\r\n              });\r\n            }\r\n          \r\n          })\r\n      \r\n  }\r\n    \r\n\r\n  handleDismiss() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n    \r\n  displayAlert() {\r\n      return (\r\n          <Alert bsStyle={this.state.logInStatus} onDismiss={this.handleDismiss} id=\"alertBox\">\r\n              \r\n              <p>\r\n                { this.state.signInError }\r\n              </p>\r\n              \r\n            </Alert>\r\n\r\n      );\r\n  }\r\n    \r\n    \r\n    \r\n  \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              <form>\r\n                <FormGroup\r\n                    controlId=\"LogInEmail\"\r\n                    validationState={this.validateEmail()}\r\n                    >\r\n\r\n                    <FormControl\r\n                        type=\"email\"\r\n                        value = {this.state.email}\r\n                        placeholder=\"Email\"\r\n                        onChange={this.handleChangeEmail}\r\n                        />\r\n                    <FormControl.Feedback />    \r\n\r\n                </FormGroup>    \r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicText\"\r\n                  validationState={this.getValidationState()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <FormControl.Feedback />\r\n\r\n                </FormGroup>\r\n\r\n\r\n\r\n              </form>\r\n            \r\n          <Button\r\n                  block\r\n                  bsStyle=\"success\"\r\n                  disabled = {this.state.logInLoading}\r\n                  onClick = {this.state.logInLoading ? null : this.logInClicked}\r\n                  >\r\n                    {this.state.logInLoading ? 'Authenticating...' : 'Log In'}\r\n          </Button>\r\n        \r\n        { this.state.show ? this.displayAlert() : null}\r\n\r\n            \r\n        </div>\r\n            \r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default LogIn;\r\n\r\n","import React, { Component } from 'react';\r\nimport './UserSign.css';\r\nimport { \r\n     Grid, \r\n     Row,\r\n     Col,\r\n     Tabs,\r\n     Tab,\r\n     Button \r\n       } from 'react-bootstrap'; \r\nimport SignUp from '../Signup/Signup';\r\nimport LogIn from '../Login/Login';\r\nimport {\r\n  getFromStorage,\r\n} from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\nclass UserSign extends Component { \r\n    constructor( props, context) {\r\n        super(props, context);\r\n        \r\n        this.stateChanger = this.stateChanger.bind(this);\r\n        this.logOutClicked = this.logOutClicked.bind(this);\r\n        \r\n        this.state = {\r\n            loggedIn: false,\r\n            token: '',\r\n            loggedInName: 'Unnamed Ashok Kumar',\r\n            logOutButtonStatus: 'warning',\r\n            logOutLoadingMessage: 'Log Out',\r\n            logOutLoading: false,\r\n            \r\n            \r\n            \r\n        }\r\n    }\r\n    \r\n    stateChanger(newState) {\r\n        this.setState(newState);\r\n    }\r\n    \r\n    componentDidMount() {\r\n    const obj = getFromStorage('the_login_n_signup');\r\n    if (obj && obj.token) {\r\n      const { token } = obj;\r\n      const { name } = obj;\r\n      // Verify token\r\n      fetch( RESTAPIUrl + '/api/account/verify?token=' + token)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.success) {\r\n            this.setState({\r\n              token,\r\n              loggedInName: name,\r\n              logOutLoading: false,\r\n              loggedIn: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              logOutLoading: false,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        logOutLoading: false,\r\n      });\r\n    }\r\n  }\r\n    \r\n    logOutClicked() {\r\n        this.setState({\r\n          logOutLoading: true,\r\n          logOutLoadingMessage: 'Logging Out...',\r\n          logOutButtonStatus: 'info',\r\n        });\r\n        const obj = getFromStorage('the_login_n_signup');\r\n        if (obj && obj.token) {\r\n          const { token } = obj;\r\n          // Verify token\r\n          fetch(RESTAPIUrl + '/api/account/logout?token=' + token)\r\n            .then(res => {\r\n              //console.log(res);\r\n              return res.json();\r\n          })\r\n            .then(json => {\r\n              if (json.success) {\r\n                this.setState({\r\n                  token: '',\r\n                  logOutLoading: false,\r\n                  loggedIn: false,\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  logOutLoading: false,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          this.setState({\r\n            logOutLoading: false,\r\n          });\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n \r\n          <h1 className=\"App-title\">Login Or Sign-Up</h1>\r\n        </header>\r\n            <Grid>\r\n                <Row>\r\n                    <Col md={4}></Col>\r\n                    <Col xs={12} md={4}>\r\n                        {this.state.loggedIn ? \r\n                            <div><h1>Welcome {this.state.loggedInName}!</h1> \r\n                            <Button\r\n                                  block\r\n                                  bsStyle= {this.state.logOutButtonStatus}\r\n                                  disabled = {this.state.logOutLoading}\r\n                                  onClick = {this.state.logOutLoading ? null : this.logOutClicked}\r\n                                  >\r\n                                    {this.state.logOutButtonStatus ? 'Log Out' : 'Logging Out'}\r\n                            </Button>\r\n                            </div>\r\n                            : \r\n                            \r\n                            <div className = \"loginBoxContainer\">\r\n                            <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\r\n                                  <Tab eventKey={1} title=\"Login\" className=\"tabContent\">\r\n                                    <LogIn stateChanger = {this.stateChanger}/>\r\n                                  </Tab>\r\n                                  <Tab eventKey={2} title=\"Sign Up\" className=\"tabContent\">\r\n                                    <SignUp />\r\n                                  </Tab>\r\n                            </Tabs>\r\n                        </div>}\r\n                    \r\n                    </Col>\r\n                    <Col md={4}></Col>\r\n                </Row>\r\n            </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserSign;\r\n","export const countries = [\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"Algeria\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belarus\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Benin\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bosnia and Herzegovina\",\r\n    \"Botswana\",\r\n    \"Brazil\",\r\n    \"Brunei\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Burundi\",\r\n    \"Cabo Verde\",\r\n    \"Cambodia\",\r\n    \"Cameroon\",\r\n    \"Canada\",\r\n    \"Central African Republic (CAR)\",\r\n    \"Chad\",\r\n    \"Chile\",\r\n    \"China\",\r\n    \"Colombia\",\r\n    \"Comoros\",\r\n    \"Costa Rica\",\r\n    \"Cote d'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Djibouti\",\r\n    \"Dominica\",\r\n    \"Dominican Republic\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"El Salvador\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Estonia\",\r\n    \"Ethiopia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"Gabon\",\r\n    \"Gambia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Ghana\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guatemala\",\r\n    \"Guinea\",\r\n    \"Guinea-Bissau\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kenya\",\r\n    \"Kiribati\",\r\n    \"Kosovo\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"Laos\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Lesotho\",\r\n    \"Liberia\",\r\n    \"Libya\",\r\n    \"Liechtenstein\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macedonia (FYROM)\",\r\n    \"Madagascar\",\r\n    \"Malawi\",\r\n    \"Malaysia\",\r\n    \"Maldives\",\r\n    \"Mali\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Mauritania\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Monaco\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Morocco\",\r\n    \"Mozambique\",\r\n    \"Myanmar (Burma)\",\r\n    \"Namibia\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"New Zealand\",\r\n    \"Nicaragua\",\r\n    \"Niger\",\r\n    \"Nigeria\",\r\n    \"North Korea\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Palestine\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Qatar\",\r\n    \"Romania\",\r\n    \"Russia\",\r\n    \"Rwanda\",\r\n    \"Saint Kitts and Nevis\",\r\n    \"Saint Lucia\",\r\n    \"Saint Vincent and the Grenadines\",\r\n    \"Samoa\",\r\n    \"San Marino\",\r\n    \"Sao Tome and Principe\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Seychelles\",\r\n    \"Sierra Leone\",\r\n    \"Singapore\",\r\n    \"Slovakia\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"South Africa\",\r\n    \"South Korea\",\r\n    \"South Sudan\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"Sudan\",\r\n    \"Suriname\",\r\n    \"Swaziland\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Tanzania\",\r\n    \"Thailand\",\r\n    \"Timor-Leste\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Trinidad and Tobago\",\r\n    \"Tunisia\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Tuvalu\",\r\n    \"Uganda\",\r\n    \"Ukraine\",\r\n    \"United Arab Emirates (UAE)\",\r\n    \"United Kingdom (UK)\",\r\n    \"United States of America (USA)\",\r\n    \"Uruguay\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Vatican City (Holy See)\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Yemen\",\r\n    \"Zambia\",\r\n    \"Zimbabwe\"\r\n];","import React from 'react';\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter, MDBInputSelect } from 'mdbreact';\r\nimport 'whatwg-fetch';\r\nimport { setInStorage } from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport { countries } from \"../../config/country\";\r\nimport './GuestSign.css';\r\n\r\nclass GuestSign extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeLocation = this.handleChangeLocation.bind(this);\r\n    this.handleChangeAge = this.handleChangeAge.bind(this);\r\n    this.handleChangeGender = this.handleChangeGender.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      userName: '',\r\n      location: 'Canada',\r\n      age: 28,\r\n      gender: 'Male',\r\n      loginLoading: false,\r\n    }\r\n  }\r\n\r\n  handleChangeName(e) {\r\n    this.setState({ userName: e.target.value });\r\n  }\r\n\r\n  handleChangeLocation(e) {\r\n    this.setState({ location: e.target.value });\r\n  }\r\n\r\n  handleChangeAge(value) {\r\n    this.setState({ age: value });\r\n  }\r\n\r\n  handleChangeGender(e) {\r\n    this.setState({ gender: e.target.value });\r\n  }\r\n\r\n  componentWillUpdate(){\r\n    console.log(this.state);\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(\"form submitted\")\r\n    const { userName, location, age, gender } = this.state;\r\n    \r\n    this.setState ({ \r\n      loginLoading: true, \r\n    });\r\n\r\n    fetch(RESTAPIUrl + '/api/guest/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userName,\r\n        location,\r\n        age,\r\n        gender\r\n      }),\r\n    }).then(res =>res.json())\r\n      .then(json => {\r\n        console.log('this is json object', json);\r\n        if(json.status) {\r\n          setInStorage('guest_signin', {token:json.token});\r\n          this.props.history.push(\"/chat\");\r\n        } else {\r\n          alert(\"Server Error\");\r\n        }\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n        <MDBRow>\r\n          <MDBCol sm=\"10\" md=\"7\" lg=\"6\" xl=\"4\" className=\"mx-auto mt-3\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <MDBCard>\r\n              <div className=\"text-center sign-title\">\r\n                <h5 className=\"dark-grey-text mb-5\"><strong>Sign in</strong></h5>\r\n              </div>\r\n              <MDBCardBody className=\"mx-4\">\r\n                \r\n                <MDBInput label=\"Your Name\" group type=\"text\" onChange={this.handleChangeName} validate error=\"wrong\" success=\"right\" required/>\r\n                \r\n                <select className=\"browser-default custom-select\" id=\"location\" name=\"location\" value={this.state.location} onChange={this.handleChangeLocation} >\r\n                  <option>Choose your location</option>\r\n                  {\r\n                    countries.map((object, i) => {\r\n                      return <option value={object} key={i}>{object}</option>\r\n                    })\r\n                  }\r\n                </select>\r\n\r\n                <label className=\"form-label\" >Your Age</label>\r\n                <MDBInputSelect  id=\"age\" name=\"age\" getValue={this.handleChangeAge} min={13} max={99} value={this.state.age} className='mb-2' />\r\n                \r\n                <label className=\"form-label\">Your Gender</label>\r\n                <div className=\"radio-group\">\r\n                  <div className=\"radio\">\r\n                    <input id=\"radio-1\" name=\"radio\" type=\"radio\" value=\"Male\" onChange={this.handleChangeGender} checked={this.state.gender === 'Male'} />\r\n                    <label htmlFor=\"radio-1\" className=\"radio-label\">Male</label>\r\n                  </div>\r\n\r\n                  <div className=\"radio\">\r\n                    <input id=\"radio-2\" name=\"radio\" type=\"radio\" value=\"Female\" onChange={this.handleChangeGender} checked={this.state.gender === 'Female'} />\r\n                    <label  htmlFor=\"radio-2\" className=\"radio-label\">Female</label>\r\n                  </div>  \r\n                </div>\r\n\r\n                <div className=\"text-center pt-3 mb-3\">\r\n                  <MDBBtn \r\n                    type=\"submit\" \r\n                    className=\"btn-block z-depth-1a\" \r\n                    outline color=\"info\"\r\n                    >\r\n                      {this.state.logInLoading ? 'Authenticating...' : 'Start Chat'}\r\n                  </MDBBtn>\r\n                </div>\r\n\r\n              </MDBCardBody>\r\n              <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\r\n                \r\n              </MDBModalFooter>\r\n            </MDBCard>\r\n            </form>\r\n          </MDBCol>\r\n        </MDBRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GuestSign;","import React, { Component } from \"react\";\r\nimport Navbar from \"react-bootstrap/lib/Navbar\";\r\n\r\n/**\r\n *\r\n * Renders top navbar and shows the current signed in user.\r\n */\r\nexport default class NavBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Navbar inverse>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>Cool Chat</Navbar.Brand>\r\n          <Navbar.Toggle />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <Navbar.Text pullRight>\r\n            Signed in as:&nbsp;\r\n            <span className=\"signed-in-user\">{(this.props.signedInUser || {}).name}</span>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport InputGroup from \"react-bootstrap/lib/InputGroup\";\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport FormGroup from \"react-bootstrap/lib/FormGroup\";\r\nimport Col from \"react-bootstrap/lib/Col\";\r\nimport Jumbotron from \"react-bootstrap/lib/Jumbotron\";\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  MessageList,\r\n  Navbar as NavbarComponent,\r\n  Avatar \r\n} from \"react-chat-elements\";\r\nimport { MDBBtn ,MDBIcon, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from 'mdbreact';\r\n\r\n// Emoji icon module\r\nimport { Smile } from 'react-feather';\r\nimport { Picker, emojiIndex } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\n// Font Selector module- draft.js\r\nimport { EditorState, convertToRaw, ContentState, RichUtils, getDefaultKeyBinding, KeyBindingUtil } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport { RESTAPIUrl } from '../config/config';\r\n/**\r\n *\r\n * ChatBox Component\r\n *\r\n * displays all the messages from chat history.\r\n * renders message text box for input.\r\n */\r\n\r\n\r\nexport default class ChatBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showEmojiPicker: false,\r\n      toolbar_show : false,\r\n      messageText: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    }\r\n\r\n    this.onAttachFile = this.onAttachFile.bind(this);\r\n  }\r\n  /**\r\n   *\r\n   * Sends a message only if it is not falsy.\r\n   */\r\n  \r\n  onSendClicked() {\r\n    // if (!this.state.messageText) {\r\n    //   return;\r\n    // }\r\n    // this.props.onSendClicked(this.state.messageText);\r\n    // this.setState({ messageText: \"\" });\r\n    this.props.onSendClicked(draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())));\r\n    this.setState({editorState:EditorState.createEmpty()});\r\n  }\r\n  onMessageInputChange(e) {\r\n    this.setState({ messageText: e.target.value });\r\n  }\r\n  /**\r\n   *\r\n   * @param {KeyboardEvent} e\r\n   *\r\n   * listen for enter pressed and sends the message.\r\n   */\r\n  onMessageKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.onSendClicked();\r\n    }\r\n  }\r\n\r\n  toggleEmojiPicker() {\r\n    this.setState({\r\n      showEmojiPicker: !this.state.showEmojiPicker,\r\n    });\r\n  }\r\n  \r\n  addEmoji(emoji) {\r\n    // if(this.state.messageText) {\r\n    //   var { messageText } = this.state;\r\n    // } else {\r\n    //   var messageText = '';\r\n    // }\r\n    // const text = `${messageText}${emoji.native}`;\r\n  \r\n    // this.setState({\r\n    //   messageText: text,\r\n    // });\r\n    // const selectEmoji = document.querySelector('[title=' + emoji.id +']');\r\n\r\n    const { editorState } = this.state;\r\n    const convertHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    const subHtml = convertHtml.substring(0,(convertHtml.length-5));\r\n    // const totalHtml = `${subHtml}${emoji.native}</p>`;\r\n    const totalHtml = `${subHtml} :${emoji.id}: </p>`;\r\n    \r\n    const blocksFromHtml = htmlToDraft(totalHtml);\r\n    const { contentBlocks, entityMap } = blocksFromHtml;\r\n    const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n    const editorStateChange = EditorState.createWithContent(contentState);\r\n    this.setState({editorState: editorStateChange});\r\n  }\r\n\r\n  closeEmojiPicker() {\r\n    this.setState({showEmojiPicker: false});\r\n  }\r\n\r\n  onEditorStateChange =  (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  onEditorChange() {\r\n    this.props.onTyping();\r\n  }\r\n\r\n  toggle_toolbar() {   \r\n    this.setState({toolbar_show: !this.state.toolbar_show});\r\n  }\r\n\r\n  keyBindingFunction(event) {\r\n\r\n    if (KeyBindingUtil.hasCommandModifier(event) && event.ctrlKey && event.key === 'Enter') {\r\n      return getDefaultKeyBinding(event);\r\n    }\r\n  \r\n    if (event.key === 'Enter') {\r\n      this.onSendClicked();\r\n      return;\r\n    }\r\n    return getDefaultKeyBinding(event);\r\n  }\r\n\r\n  findTargetUser() {\r\n    this.props.findTargetUser();\r\n  }\r\n\r\n  onAttachFile(e) {\r\n    e.preventDefault();\r\n\r\n    // this.props.onAttachFile();\r\n    const data = new FormData();\r\n    data.append('attachFile', this.attachFile.files[0]);\r\n    fetch(`${RESTAPIUrl}/api/attach-file`, {\r\n      method: 'POST',\r\n      body: data,\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.status) {\r\n        const { editorState } = this.state;\r\n        const convertHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n        var subHtml = '';\r\n        console.log(\"this is convert html\",convertHtml);\r\n        console.log(\"last index charactor\", convertHtml.substring(convertHtml.length-5));\r\n        // if(convertHtml.substring(convertHtml.length-5) == '</p>')\r\n        //   subHtml = convertHtml.substring(0,(convertHtml.length-5));\r\n        // else \r\n          subHtml = convertHtml.substring(0,(convertHtml.length));\r\n        console.log(\"Index and subhtml\", subHtml, convertHtml.length);\r\n        const fileContainer = `<img src=\"${RESTAPIUrl}/public/uploads/${json.fileName}\" alt=\"${RESTAPIUrl}/public/uploads/${json.fileName}\">`;\r\n        const totalHtml = `${subHtml}${fileContainer}`;\r\n\r\n        const blocksFromHtml = htmlToDraft(totalHtml);\r\n        const { contentBlocks, entityMap } = blocksFromHtml;\r\n        const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n        const editorStateChange = EditorState.createWithContent(contentState);\r\n        this.setState({editorState: editorStateChange});\r\n\r\n        console.log('this is total html',totalHtml);\r\n\r\n      }\r\n    })\r\n  }\r\n  image_thumbs() {\r\n    console.log(\"image thumbs start\");\r\n  }\r\n\r\n  callWithVideo (video) {\r\n    const config = { audio: true, video };\r\n    // return () => this.props.targetUser.id && this.props.startCall(true, this.props.targetUser.id, config);\r\n    this.props.startCall(true, this.props.targetUser.id, config);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>        \r\n          <div>\r\n            <NavbarComponent\r\n              left={\r\n                <div>\r\n                  <Col mdHidden lgHidden>\r\n                    <p className=\"navBarText\">\r\n                    </p>\r\n                  </Col>\r\n                  <Avatar\r\n                    src={`${RESTAPIUrl}/public/profile/${this.props.signedInUser.profile_image}`}\r\n                    alt={\"logo\"}\r\n                    size=\"large\"\r\n                    type=\"circle flexible\"\r\n                  />\r\n                  <div className=\"user-info\">\r\n                    <p className=\"navBarText user-name\">{this.props.signedInUser.userName}</p>\r\n                    <p className=\"navBarText user-title\">{this.props.signedInUser.gender}   {this.props.signedInUser.age} {this.props.signedInUser.location}</p>\r\n                  </div>\r\n                </div>\r\n              }\r\n              center={\r\n                <div>\r\n                  <MDBBtn \r\n                    className=\"action-btn next-user\" \r\n                    color=\"primary\"\r\n                    onClick={this.findTargetUser.bind(this)}\r\n                  >\r\n                    <img alt=\"Arrow, person, profile, right, user icon\" className=\"n3VNCb\" src=\"https://cdn3.iconfinder.com/data/icons/user-icons-7/100/31-1User-512.png\" />\r\n                  </MDBBtn>\r\n                </div>\r\n                \r\n                \r\n              }\r\n              right={\r\n                <div>\r\n                  <div className=\"navbar-right\">                    \r\n                    <MDBBtn \r\n                      className=\"action-btn phone\" \r\n                      color=\"primary\"\r\n                      onClick={this.callWithVideo.bind(this, false)}\r\n                    >\r\n                      <MDBIcon icon=\"phone-alt\" className=\"mr-1\" size=\"lg\" />\r\n                    </MDBBtn>\r\n                    \r\n                    <MDBBtn \r\n                      className=\"action-btn video\" \r\n                      color=\"primary\"\r\n                      onClick={this.callWithVideo.bind(this, true)}\r\n                    >\r\n                      <MDBIcon icon=\"video\" className=\"mr-1\" size=\"lg\" />\r\n                    </MDBBtn>\r\n                    \r\n                    <MDBDropdown>\r\n                      <MDBDropdownToggle caret color=\"primary\">\r\n                        <MDBIcon icon=\"ellipsis-v\" className=\"mr-1\" size=\"lg\" />\r\n                      </MDBDropdownToggle>\r\n                      <MDBDropdownMenu basic>\r\n                        <MDBDropdownItem\r\n                          onClick={()=> {this.props.onSearchSettingModalShow(true)}}\r\n                        >\r\n                          Search Setting\r\n                        </MDBDropdownItem>\r\n\r\n                        <MDBDropdownItem>Report</MDBDropdownItem>\r\n                        \r\n                        <MDBDropdownItem\r\n                          onClick={()=> {this.props.onProfileModalShow(true)}}\r\n                        >\r\n                          Your Profile\r\n                        </MDBDropdownItem>\r\n                        <MDBDropdownItem divider />\r\n                        \r\n                        <MDBDropdownItem>\r\n                          Log Out\r\n                        </MDBDropdownItem> \r\n\r\n                      </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                    \r\n                  </div>\r\n                </div>\r\n              }\r\n            />\r\n            {this.props.targetUser.id ? (\r\n              <div> \r\n                <MessageList\r\n                  className=\"message-list\"\r\n                  lockable={true}\r\n                  toBottomHeight={\"300\"}\r\n                  dataSource={this.props.targetUser.messages}\r\n                  downButton={true}\r\n                />\r\n                <FormGroup className=\"send-message-form\">\r\n                  <Row style={{width:\"100%\", position:\"relative\"}}>\r\n                      {/* <button\r\n                        type=\"button\"\r\n                        className=\"toggle-emoji\"\r\n                        onClick={this.toggleEmojiPicker.bind(this)}\r\n                      >\r\n                        <i class=\"far fa-smile\"></i>\r\n                      </button> */}\r\n                      <i \r\n                        className=\"toggle-emoji far fa-smile toggle-icon\"\r\n                        onClick={this.toggleEmojiPicker.bind(this)} \r\n                      ></i>\r\n                      {/* <button \r\n                        onClick={this.toggle_toolbar.bind(this)}\r\n                        className=\"font-selector\"\r\n                      >\r\n                        <MDBIcon icon=\"font\" className=\"mr-1\" size=\"lg\" />\r\n                      </button> */}\r\n                      <MDBIcon \r\n                        icon=\"palette\" \r\n                        size=\"lg\"\r\n                        onClick={this.toggle_toolbar.bind(this)}\r\n                        className=\"font-selector mr-1 toggle-icon\"\r\n                      />\r\n                      \r\n                      <Editor\r\n                        editorState={this.state.editorState}\r\n                        wrapperClassName=\"demo-wrapper\"\r\n                        toolbarClassName={this.state.toolbar_show ? '' : 'toggle-toolbar'}\r\n                        editorClassName=\"demo-editor\"\r\n                        keyBindingFn={this.keyBindingFunction.bind(this)}\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                        onChange={this.onEditorChange.bind(this)}\r\n                        toolbar={{\r\n                          options: ['inline', 'image', 'colorPicker', 'fontSize', 'fontFamily', 'emoji', 'history'],\r\n                          inline: { inDropdown: true },\r\n                          image: { uploadEnabled: true},\r\n                          inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n                        }}\r\n                        autoFocus\r\n                      />\r\n                      \r\n                      <label htmlFor=\"attachFile\" className=\"attach-file\">\r\n                        <i \r\n                          className=\"fas fa-paperclip toggle-icon \"                   \r\n                        ></i>\r\n                      </label>\r\n                      \r\n                      <input \r\n                          ref={(ref) => { this.attachFile = ref; }} \r\n                          onChange={this.onAttachFile.bind(this)} \r\n                          type=\"file\"\r\n                          id=\"attachFile\" \r\n                          accept=\".png, .jpg, .jpeg\"\r\n                      />\r\n\r\n                      <InputGroup.Button>\r\n                        <div\r\n                          disabled={!this.state.messageText}\r\n                          className=\"sendButton\"\r\n                          onClick={this.onSendClicked.bind(this)}\r\n                        >\r\n                          {/* <FontAwesomeIcon icon={faPaperPlane} color=\"white\" /> */}\r\n                          {/* <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"paper-plane\" class=\"svg-inline--fa fa-paper-plane fa-w-16 \" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" color=\"white\"><path fill=\"currentColor\" d=\"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z\"></path></svg> */}\r\n                          <svg class=\"jss4\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\"><path fill=\"#fff\" d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"></path><path fill=\"none\" d=\"M0 0h24v24H0z\"></path></svg>\r\n                        </div>\r\n                      </InputGroup.Button>\r\n\r\n                  </Row>\r\n                </FormGroup>\r\n              </div>\r\n            ) : (\r\n              <div className=\"waiting-container\">\r\n                <div className=\"title-box\">\r\n                  <h1>Hello, {this.props.signedInUser.userName}!</h1><br></br>\r\n                </div>\r\n                <div className=\"body-box\">\r\n                  <p>Select a friend to start a chat.</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        \r\n          <Picker \r\n            style={this.state.showEmojiPicker? { position: 'absolute', bottom: '90px', right: '10px', opacity: '1' } : { position: 'absolute', bottom: '90px', right: '10px', opacity: '0', zIndex:'-3' }} \r\n            onSelect={this.addEmoji.bind(this)} \r\n            emojiTooltip={true}\r\n          />\r\n\r\n        { this.state.showEmojiPicker ? (\r\n          <div>            \r\n            <div className=\"emoji-back\" onClick={this.closeEmojiPicker.bind(this)}></div>\r\n          </div>\r\n        ): null }       \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./OnTyping.css\";\r\n\r\nconst OnTyping = () => {\r\n    return (\r\n        <div className=\"message-text message-text-left on-typing\">\r\n            <div id=\"circleG\">\r\n                <div id=\"circleG_1\" class=\"circleG\"></div>\r\n                <div id=\"circleG_2\" class=\"circleG\"></div>\r\n                <div id=\"circleG_3\" class=\"circleG\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OnTyping;","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardTitle,\r\n    MDBIcon,\r\n    MDBNavLink,\r\n    MDBNav,\r\n    MDBCardImage,\r\n    MDBCardBody,\r\n    MDBCardText,\r\n    MDBInput,\r\n    MDBInputSelect,\r\n    MDBCloseIcon\r\n  } from 'mdbreact';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport { setInStorage } from \"../../utils/storage\";\r\nimport { countries } from \"../../config/country\";\r\n\r\nimport \"./ProfileBox.css\";\r\n\r\n\r\n\r\n\r\nexport default class ChatBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            imageURL: `${RESTAPIUrl}/public/profile/${this.props.profileInfo.profile_image}`,\r\n        }\r\n\r\n        this.handleUploadImage = this.handleUploadImage.bind(this);\r\n        this.handleChangeProfile = this.handleChangeProfile.bind(this);\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.setState({\r\n            imageURL: `${RESTAPIUrl}/public/profile/${this.props.profileInfo.profile_image}`\r\n        });\r\n    }\r\n    handleUploadImage(ev) {\r\n        ev.preventDefault();\r\n    \r\n        const data = new FormData();\r\n        data.append('file', this.uploadInput.files[0]);\r\n        data.append('fileName', this.fileName.value);\r\n        console.log(\"upload file name\", this.fileName.value);\r\n        fetch(`${RESTAPIUrl}/api/profile`, {\r\n          method: 'POST',\r\n          body: data,\r\n        })\r\n        .then(res =>res.json())\r\n        .then(json => {\r\n            console.log('this is json object', json);\r\n            if(json.status) {\r\n                setInStorage('guest_signin', {token:json.token});\r\n                let decoded_token = jwt_decode(json.token);\r\n                let signedInUser = decoded_token.user;\r\n                this.props.onChangeProfile(signedInUser);       \r\n            } else {\r\n                alert(\"Server Error\");\r\n            }\r\n        })\r\n        \r\n        \r\n        // .then((response) => {\r\n        //   response.json().then((body) => {\r\n        //     this.setState({ imageURL: `http://localhost:5000/${body.file}` });\r\n        //   });\r\n        // });\r\n    }\r\n\r\n    handleChangeProfile() {\r\n        console.log(\"bind this\");\r\n    }\r\n\r\n    onProfileModalShow() {\r\n        this.props.onProfileModalShow(false);\r\n    }\r\n    \r\n    handleChangeLocation() {\r\n    }\r\n    \r\n    handleChangeGender() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBRow className='mt-5' className={this.props.profileContainer}>\r\n                    <MDBCol>\r\n                        <MDBCloseIcon onClick={this.onProfileModalShow.bind(this)}/>\r\n                        <MDBJumbotron className='text-center'>                          \r\n                            \r\n                            <MDBCardBody>\r\n\r\n                                <form onSubmit={this.handleChangeProfile}>\r\n                                    <div className=\"profile-image\">\r\n                                        <img\r\n                                            src={`${RESTAPIUrl}/public/profile/${this.props.profileInfo.profile_image}`}\r\n                                            className='img-fluid'\r\n                                        />\r\n                                        <div className=\"upload-button\">\r\n                                            <label htmlFor=\"imageUpload\"></label>\r\n                                            <input \r\n                                                ref={(ref) => { this.uploadInput = ref; }} \r\n                                                onChange={this.handleUploadImage.bind(this)} \r\n                                                type=\"file\"\r\n                                                id=\"imageUpload\" \r\n                                                accept=\".png, .jpg, .jpeg\"\r\n                                            />\r\n                                            <input ref={(ref) => { this.fileName = ref; }}\r\n                                                value={this.props.profileInfo.profile_image}\r\n                                                type=\"hidden\"\r\n                                            />\r\n                                        </div>\r\n                                        <h4 className=\"userName\">{this.props.profileInfo.userName}</h4>\r\n                                        <h6 className=\"userInfo\">\r\n                                            {`${this.props.profileInfo.gender}  ${this.props.profileInfo.age}  ${this.props.profileInfo.location}`}\r\n                                        </h6>\r\n                                        <hr></hr>\r\n                                    </div>\r\n                                    <div>\r\n                    \r\n                                        <MDBInput \r\n                                            label=\"Your Name\" \r\n                                            ref={(ref) => { this.userName = ref; }}\r\n                                            group type=\"text\" \r\n                                            onChange={this.handleChangeName} \r\n                                            validate error=\"wrong\" \r\n                                            success=\"right\"\r\n                                            value={this.props.profileInfo.userName}\r\n                                            required\r\n                                        />\r\n                                        \r\n                                        <label className=\"form-label\" >Your Location</label>\r\n                                        <select \r\n                                            className=\"browser-default custom-select\" \r\n                                            id=\"location\" \r\n                                            name=\"location\" \r\n                                            value={this.props.profileInfo.location} \r\n                                            onChange={this.handleChangeLocation.bind(this)} \r\n                                        >\r\n                                            <option>Choose your location</option>\r\n                                            {\r\n                                                countries.map((object, i) => {\r\n                                                return <option value={object} key={i}>{object}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n\r\n                                        <label className=\"form-label\" >Your Age</label>\r\n                                        <MDBInputSelect  \r\n                                            id=\"age\" \r\n                                            name=\"age\" \r\n                                            getValue={this.handleChangeAge} \r\n                                            min={13} \r\n                                            max={99} \r\n                                            value={this.props.profileInfo.age} \r\n                                            className='mb-2' \r\n                                        />\r\n                                        \r\n                                        <label className=\"form-label\">Your Gender</label>\r\n                                        <div className=\"radio-group\">\r\n                                            <div className=\"radio\">\r\n                                                <input id=\"radio-1\" name=\"radio\" type=\"radio\" value=\"Male\" onChange={this.handleChangeGender.bind(this)} checked={this.state.gender === 'Male'} />\r\n                                                <label htmlFor=\"radio-1\" className=\"radio-label\">Male</label>\r\n                                            </div>\r\n\r\n                                            <div className=\"radio\">\r\n                                                <input id=\"radio-2\" name=\"radio\" type=\"radio\" value=\"Female\" onChange={this.handleChangeGender.bind(this)} checked={this.state.gender === 'Female'} />\r\n                                                <label  htmlFor=\"radio-2\" className=\"radio-label\">Female</label>\r\n                                            </div>  \r\n                                        </div>\r\n\r\n                                        <div className=\"text-center pt-3 mb-3\">\r\n                                        <MDBBtn \r\n                                            type=\"submit\"\r\n                                            color=\"primary\"\r\n                                            size=\"sm\"\r\n                                            >\r\n                                            Apply\r\n                                        </MDBBtn>\r\n\r\n                                        <MDBBtn color=\"cyan\" size=\"sm\"\r\n                                            onClick={this.onProfileModalShow.bind(this)}\r\n                                        >\r\n                                            Close\r\n                                        </MDBBtn>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </MDBCardBody>\r\n                        </MDBJumbotron>\r\n                    </MDBCol>\r\n                    </MDBRow>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardTitle,\r\n    MDBCardBody,\r\n    MDBCloseIcon\r\n  } from 'mdbreact';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport \"./FullScreenImage.css\";\r\n\r\nexport default class FullScreenImage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let imageUrl = this.props.imageUrl;\r\n        let downloadPath = imageUrl.split(\"public/\")[1];\r\n        this.state = {\r\n            downloadPath: downloadPath\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"this is fullscreen image's path\", this.state);\r\n    }\r\n    onShowImageFullScreen() {\r\n        this.props.onShowImageFullScreen();\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                <div className=\"full-image\">\r\n                    <span \r\n                        onClick={this.onShowImageFullScreen.bind(this)}\r\n                        className=\"close-btn\"    \r\n                    >\r\n                        X\r\n                    </span>\r\n                    <a href={this.state.downloadPath} download=\"image-file\" className=\"download-btn\">\r\n                        <i class=\"fa fa-download\"></i>\r\n                    </a>\r\n                    <img src={this.props.imageUrl} alt=\"\"></img>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardTitle,\r\n    MDBCardBody,\r\n    MDBCloseIcon\r\n} from 'mdbreact';\r\nimport Slider from 'rc-slider';\r\nimport Tooltip from 'rc-tooltip';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport { countries } from \"../../config/country\";\r\nimport \"./SearchSettingBox.css\";\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nexport default class SearchSettingBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const temp = this.props.searchSetting\r\n        this.state = {\r\n            searchSetting: temp,\r\n        }\r\n\r\n        this.handleChangeGender = this.handleChangeGender.bind(this);\r\n    }\r\n\r\n    handleChangeSearchSetting(e) {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    handleChangeGender(e) {\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.gender = e.target.value;\r\n        this.setState({ searchSetting });\r\n    }\r\n\r\n    handleChangeLocation(e) {\r\n        console.log(e.target.value)\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.location = e.target.value;\r\n        this.setState({ searchSetting });\r\n    }\r\n\r\n    handleChangeAge(value) {\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.ageMin = value[0];\r\n        searchSetting.ageMax = value[1];\r\n        this.setState({ searchSetting });\r\n\r\n        // this.setState({\r\n        //     ageMin: value[0],\r\n        //     ageMax: value[1],\r\n        // })\r\n    }\r\n    onSearchSettingModalShow() {\r\n        this.props.onSearchSettingModalShow(false);\r\n    }\r\n\r\n    render() {\r\n        return ( <\r\n                div >\r\n                <\r\n                MDBRow className = 'mt-5'\r\n                className = { this.props.searchContainer } >\r\n                <\r\n                MDBCol >\r\n                <\r\n                MDBCloseIcon onClick = { this.onSearchSettingModalShow.bind(this) }\r\n                />\r\n\r\n                <\r\n                MDBJumbotron className = 'text-center' >\r\n                <\r\n                MDBCardTitle className = \"card-title h4 pb-2\" >\r\n                <\r\n                strong > Search Filter Setting < /strong> < /\r\n                MDBCardTitle > <\r\n                MDBCardBody >\r\n\r\n                <\r\n                form onSubmit = { this.handleChangeSearchSetting.bind(this) } >\r\n                <\r\n                div >\r\n\r\n                <\r\n                div className = \"form-group\" >\r\n                <\r\n                label className = \"form-label\" > Location < /label> <\r\n                select className = \"browser-default custom-select\"\r\n                id = \"location1\"\r\n                name = \"location1\"\r\n                value = { this.props.searchSetting.location }\r\n                onChange = { this.handleChangeLocation.bind(this) } >\r\n                <\r\n                option value = \"\" > All < /option> {\r\n                countries.map((object, i) => {\r\n                    return <option value = { object }\r\n                    key = { i } > { object } < /option>\r\n                })\r\n            } <\r\n            /select> < /\r\n        div >\r\n\r\n            <\r\n            div className = \"form-group\" >\r\n            <\r\n            label className = \"form-label\" > Age Range < /label>                                         <\r\n        Range min = { 13 }\r\n        max = { 99 }\r\n        defaultValue = {\r\n            [this.props.searchSetting.ageMin, this.props.searchSetting.ageMax]\r\n        }\r\n        tipFormatter = { value => `${value}` }\r\n        onChange = { this.handleChangeAge.bind(this) }\r\n        /> < /\r\n        div >\r\n\r\n            <\r\n            div className = \"form-group\" >\r\n            <\r\n            label className = \"form-label\" > Gender < /label> <\r\n        div className = \"radio-group\" >\r\n            <\r\n            div className = \"radio\" >\r\n            <\r\n            input id = \"radio1\"\r\n        name = \"radio1\"\r\n        type = \"radio\"\r\n        value = \"\"\r\n        onChange = { this.handleChangeGender.bind(this) }\r\n        checked = { this.state.searchSetting.gender === '' }\r\n        /> <\r\n        label htmlFor = \"radio1\"\r\n        className = \"radio-label\" > All < /label> < /\r\n        div >\r\n\r\n            <\r\n            div className = \"radio\" >\r\n            <\r\n            input id = \"radio2\"\r\n        name = \"radio1\"\r\n        type = \"radio\"\r\n        value = \"Male\"\r\n        onChange = { this.handleChangeGender.bind(this) }\r\n        checked = { this.state.searchSetting.gender === 'Male' }\r\n        /> <\r\n        label htmlFor = \"radio2\"\r\n        className = \"radio-label\" > Male < /label> < /\r\n        div >\r\n\r\n            <\r\n            div className = \"radio\" >\r\n            <\r\n            input id = \"radio3\"\r\n        name = \"radio1\"\r\n        type = \"radio\"\r\n        value = \"Female\"\r\n        onChange = { this.handleChangeGender.bind(this) }\r\n        checked = { this.state.searchSetting.gender === 'Female' }\r\n        /> <\r\n        label htmlFor = \"radio3\"\r\n        className = \"radio-label\" > Female < /label> < /\r\n        div > <\r\n            /div> < /\r\n        div >\r\n\r\n            <\r\n            div className = \"text-center pt-3 mb-3\" > {\r\n                /* <MDBBtn \r\n                                                        type=\"submit\"\r\n                                                        color=\"primary\"\r\n                                                        size=\"sm\"\r\n                                                        >\r\n                                                        Apply\r\n                                                    </MDBBtn> */\r\n            }\r\n\r\n        <\r\n        MDBBtn color = \"cyan\"\r\n        size = \"sm\"\r\n        onClick = { this.onSearchSettingModalShow.bind(this) } >\r\n            Close <\r\n            /MDBBtn> < /\r\n        div >\r\n\r\n            <\r\n            /div> < /\r\n        form >\r\n\r\n            <\r\n            /MDBCardBody> < /\r\n        MDBJumbotron > <\r\n            /MDBCol> < /\r\n        MDBRow > <\r\n            /div>\r\n    );\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport Glyphicon from \"react-bootstrap/lib/Glyphicon\";\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\n\r\n/**\r\n *\r\n * Renders a Error modal if app encounter any error.\r\n */\r\n\r\nexport default class ErrorModal extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show}>\r\n        <Modal.Header>\r\n          <Modal.Title>Error</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <h1 className=\"text-center\">\r\n            <Glyphicon glyph=\"alert\" />\r\n          </h1>\r\n          <h5 className=\"text-center\">{this.props.errorMessage}</h5>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Glyphicon from \"react-bootstrap/lib/Glyphicon\";\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\n\r\n/**\r\n *\r\n * Renders a loader modal.\r\n */\r\n\r\nexport default class LoadingModal extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show}>\r\n        <Modal.Body>\r\n          <h1 className=\"text-center\">\r\n            <Glyphicon glyph=\"refresh\" />\r\n          </h1>\r\n          <h5 className=\"text-center\">Loading...</h5>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst API_ROOT = process.env.REACT_APP_SERVER_URI\r\n\r\naxios.defaults.baseURL = API_ROOT;\r\n\r\nexport const fetchUsers = () => {\r\n    return axios.get(`/users`)\r\n        .then(res => res.data.data)\r\n}","import io from 'socket.io-client';\r\nimport { RESTAPIUrl } from \"../../config/config\"\r\n\r\nconst socket = io.connect(`${RESTAPIUrl}`);\r\n\r\nexport default socket;","import _ from 'lodash';\r\n\r\nclass Emitter {\r\n  constructor() {\r\n    this.events = {};\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    if (this.events[event]) {\r\n      this.events[event].forEach((fn) => fn(...args));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  on(event, fn) {\r\n    if (this.events[event]) this.events[event].push(fn);\r\n    else this.events[event] = [fn];\r\n    return this;\r\n  }\r\n\r\n  off(event, fn) {\r\n    if (event && _.isFunction(fn)) {\r\n      const listeners = this.events[event];\r\n      const index = listeners.findIndex((_fn) => _fn === fn);\r\n      listeners.splice(index, 1);\r\n    } else this.events[event] = [];\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Emitter;\r\n","import _ from 'lodash';\r\nimport Emitter from './Emitter';\r\n\r\n/**\r\n * Manage all media devices\r\n */\r\nclass MediaDevice extends Emitter {\r\n  /**\r\n   * Start media devices and send stream\r\n   */\r\n  start() {\r\n    const constraints = {\r\n      video: {\r\n        facingMode: 'user',\r\n        height: { min: 360, ideal: 720, max: 1080 }\r\n      },\r\n      audio: true\r\n    };\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia(constraints)\r\n      .then((stream) => {\r\n        this.stream = stream;\r\n        this.emit('stream', stream);\r\n      })\r\n      .catch((err) => {\r\n        if (err instanceof DOMException) {\r\n          alert('Cannot open webcam and/or microphone');\r\n        } else {\r\n          console.log(err);\r\n        }\r\n      });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Turn on/off a device\r\n   * @param {String} type - Type of the device\r\n   * @param {Boolean} [on] - State of the device\r\n   */\r\n  toggle(type, on) {\r\n    const len = arguments.length;\r\n    if (this.stream) {\r\n      this.stream[`get${type}Tracks`]().forEach((track) => {\r\n        const state = len === 2 ? on : !track.enabled;\r\n        _.set(track, 'enabled', state);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Stop all media track of devices\r\n   */\r\n  stop() {\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach((track) => track.stop());\r\n    }\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default MediaDevice;\r\n","import MediaDevice from './MediaDevice';\r\nimport Emitter from './Emitter';\r\nimport socket from './socket';\r\n\r\n// const PC_CONFIG = { iceServers: [{ urls: ['stun:stun.l.google.com:19302'] }] };\r\nconst PC_CONFIG = {\r\n    iceServers: [{\r\n        url: 'turn:numb.viagenie.ca',\r\n        credential: 'nothingbutthebest',\r\n        username: 'bluesky410219@gmail.com'\r\n    }]\r\n};\r\n\r\nclass PeerConnection extends Emitter {\r\n    /**\r\n     * Create a PeerConnection.\r\n     * @param {String} friendID - ID of the friend you want to call.\r\n     */\r\n    constructor(friendID) {\r\n        super();\r\n        this.pc = new RTCPeerConnection(PC_CONFIG);\r\n        this.pc.onicecandidate = (event) => socket.emit('call', {\r\n            to: this.friendID,\r\n            candidate: event.candidate\r\n        });\r\n        this.pc.ontrack = (event) => this.emit('peerStream', event.streams[0]);\r\n\r\n        this.mediaDevice = new MediaDevice();\r\n        this.friendID = friendID;\r\n    }\r\n\r\n    /**\r\n     * Starting the call\r\n     * @param {Boolean} isCaller\r\n     * @param {Object} config - configuration for the call {audio: boolean, video: boolean}\r\n     */\r\n    start(isCaller, config) {\r\n        this.mediaDevice\r\n            .on('stream', (stream) => {\r\n                stream.getTracks().forEach((track) => {\r\n                    this.pc.addTrack(track, stream);\r\n                });\r\n                this.emit('localStream', stream);\r\n                if (isCaller) socket.emit('request', { to: this.friendID });\r\n                else this.createOffer();\r\n            })\r\n            .start(config);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Stop the call\r\n     * @param {Boolean} isStarter\r\n     */\r\n    stop(isStarter) {\r\n        if (isStarter) {\r\n            socket.emit('end', { to: this.friendID });\r\n        }\r\n        this.mediaDevice.stop();\r\n        this.pc.close();\r\n        this.pc = null;\r\n        this.off();\r\n        return this;\r\n    }\r\n\r\n    createOffer() {\r\n        this.pc.createOffer()\r\n            .then(this.getDescription.bind(this))\r\n            .catch((err) => console.log(err));\r\n        return this;\r\n    }\r\n\r\n    createAnswer() {\r\n        this.pc.createAnswer()\r\n            .then(this.getDescription.bind(this))\r\n            .catch((err) => console.log(err));\r\n        return this;\r\n    }\r\n\r\n    getDescription(desc) {\r\n        this.pc.setLocalDescription(desc);\r\n        socket.emit('call', { to: this.friendID, sdp: desc });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} sdp - Session description\r\n     */\r\n    setRemoteDescription(sdp) {\r\n        const rtcSdp = new RTCSessionDescription(sdp);\r\n        this.pc.setRemoteDescription(rtcSdp);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} candidate - ICE Candidate\r\n     */\r\n    addIceCandidate(candidate) {\r\n        if (candidate) {\r\n            const iceCandidate = new RTCIceCandidate(candidate);\r\n            this.pc.addIceCandidate(iceCandidate);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default PeerConnection;","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport \"./CallWindow.css\";\r\n\r\nconst getButtonClass = (icon, enabled) => classnames(`btn-action fa ${icon}`, { disable: !enabled });\r\n\r\nfunction CallWindow({ peerSrc, localSrc, config, mediaDevice, status, endCall }) {\r\n  const peerVideo = useRef(null);\r\n  const localVideo = useRef(null);\r\n  const [video, setVideo] = useState(config.video);\r\n  const [audio, setAudio] = useState(config.audio);\r\n\r\n  useEffect(() => {\r\n    if (peerVideo.current && peerSrc) peerVideo.current.srcObject = peerSrc;\r\n    if (localVideo.current && localSrc) localVideo.current.srcObject = localSrc;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (mediaDevice) {\r\n      mediaDevice.toggle('Video', video);\r\n      mediaDevice.toggle('Audio', audio);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\r\n  const toggleMediaDevice = (deviceType) => {\r\n    if (deviceType === 'video') {\r\n      setVideo(!video);\r\n      mediaDevice.toggle('Video');\r\n    }\r\n    if (deviceType === 'audio') {\r\n      setAudio(!audio);\r\n      mediaDevice.toggle('Audio');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classnames('call-window', status)}>\r\n      <div className=\"video-contact\">\r\n        <video id=\"peerVideo\" ref={peerVideo} autoPlay />\r\n      </div>\r\n\r\n      <div className=\"video-user\">\r\n        <video id=\"localVideo\" ref={localVideo} autoPlay muted />  \r\n      </div>      \r\n      \r\n      <div className=\"video-control\">\r\n        <button\r\n          key=\"btnVideo\"\r\n          type=\"button\"\r\n          className={getButtonClass('fa-video-camera', video)}\r\n          onClick={() => toggleMediaDevice('video')}\r\n        />\r\n        <button\r\n          key=\"btnAudio\"\r\n          type=\"button\"\r\n          className={getButtonClass('fa-microphone', audio)}\r\n          onClick={() => toggleMediaDevice('audio')}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-action hangup fa fa-phone\"\r\n          onClick={() => endCall(true)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCallWindow.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  localSrc: PropTypes.object, // eslint-disable-line\r\n  peerSrc: PropTypes.object, // eslint-disable-line\r\n  config: PropTypes.shape({\r\n    audio: PropTypes.bool.isRequired,\r\n    video: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  mediaDevice: PropTypes.object, // eslint-disable-line\r\n  endCall: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CallWindow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport './CallModal.css';\r\n\r\n\r\nfunction CallModal({ status, callFrom, startCall, rejectCall }) {\r\n  const acceptWithVideo = (video) => {\r\n    const config = { audio: true, video };\r\n    return () => startCall(false, callFrom, config);\r\n  };\r\n\r\n  return (\r\n    <div className={classnames('call-modal', status)}>\r\n      <p>\r\n        <span className=\"caller\">{`${callFrom} is calling`}</span>\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action fa fa-video-camera\"\r\n        onClick={acceptWithVideo(true)}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action fa fa-phone\"\r\n        onClick={acceptWithVideo(false)}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action hangup fa fa-phone\"\r\n        onClick={rejectCall}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nCallModal.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  callFrom: PropTypes.string.isRequired,\r\n  startCall: PropTypes.func.isRequired,\r\n  rejectCall: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CallModal;","import React, { Component } from \"react\";\r\nimport NavBar from \"../../components/NavBar\";\r\nimport Grid from \"react-bootstrap/lib/Grid\";\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport Col from \"react-bootstrap/lib/Col\";\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\nimport ChatBox from \"../../components/ChatBox\";\r\nimport OnTyping from \"../../components/OnTyping/OnTyping\";\r\nimport ProfileBox from \"../../components/ProfileBox/ProfileBox\";\r\nimport FullScreenImage from \"../../components/FullScreenImage/FullScreenImage\";\r\nimport SearchSettingBox from \"../../components/SearchSettingBox/SearchSettingBox\";\r\nimport ErrorModal from \"../../components/ErrorModal\";\r\nimport LoadingModal from \"../../components/LoadingModal\";\r\nimport \"react-chat-elements/dist/main.css\";\r\nimport io from \"socket.io-client\";\r\nimport { fetchUsers } from \"../../dataservice/request\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport axios from \"axios\";\r\nimport { SOCKET_URI } from '../../config/config';\r\nimport { getFromStorage } from '../../utils/storage';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport renderHtml from 'react-render-html';\r\nimport { RESTAPIUrl } from \"../../config/config\";\r\nimport \"./Chat.css\";\r\n/**\r\n * Fetches socket server URL from env\r\n */\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nimport _ from 'lodash';\r\nimport socket from './socket';\r\nimport PeerConnection from './PeerConnection';\r\n// import MainWindow from './MainWindow';\r\n// import CallWindow from './CallWindow';\r\n// import CallModal from './CallModal';\r\nimport CallWindow from '../../components/CallWindow/CallWindow';\r\nimport CallModal from '../../components/CallModal/CallModal';\r\n/**\r\n * App Component\r\n *\r\n * initiaites Socket connection and handle all cases like disconnected,\r\n * reconnected again so that user can send messages when he is back online\r\n *\r\n * handles Error scenarios if requests from Axios fails.\r\n *\r\n */\r\n\r\n//  Get the token information from local storage and get user's information using decode\r\nconst obj = getFromStorage('guest_signin');\r\nif(obj && obj.token) {\r\n    var decoded_token = jwt_decode(obj.token);\r\n    var signedInUser = decoded_token.user;\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  socket = null;\r\n  constructor() {\r\n    super();\r\n\r\n    const obj = getFromStorage('guest_signin');\r\n    if(obj && obj.token) {\r\n        var decoded_token = jwt_decode(obj.token);\r\n        var signedInUser = decoded_token.user;\r\n    }\r\n\r\n    this.state = {\r\n      signInModalShow: false,\r\n      users: [], // Avaiable users for signing-in\r\n      userChatData: '', // this contains users from which signed-in user can chat and its message data.\r\n      user: null, // Signed-In User\r\n      selectedUserIndex: 1,\r\n      signInModalShow: false,\r\n      profileModalShow: false,\r\n      searchModalShow: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n      targetUser: '',\r\n      blackUsersList: [signedInUser._id],\r\n      signedInUser: signedInUser,\r\n      searchSetting: {\r\n        location: '',\r\n        gender: '',\r\n        ageMin: 13,\r\n        ageMax: 99,\r\n      },\r\n      onTyping: false,\r\n      showImageFullScreen: false,\r\n\r\n      // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n      // clientId: '',\r\n      callWindow: '',\r\n      callModal: '',\r\n      callFrom: '',\r\n      localSrc: null,\r\n      peerSrc: null\r\n    \r\n    };\r\n\r\n\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    this.pc = {};\r\n    this.config = null;\r\n    this.startCallHandler = this.startCall.bind(this);\r\n    this.endCallHandler = this.endCall.bind(this);\r\n    this.rejectCallHandler = this.rejectCall.bind(this);\r\n  }\r\n  \r\n  \r\n  /**\r\n   *\r\n   * Setups Axios to monitor XHR errors.\r\n   * Initiates and listen to socket.\r\n   * fetches User's list from backend to populate.\r\n   */\r\n\r\n  componentDidMount() {\r\n    this.initAxios();\r\n    this.initSocketConnection();\r\n    this.createSocketRoom();\r\n    this.setupSocketListeners();\r\n    // this.findTargetUser();\r\n    console.log(\"This is signed in user:\", this.state.signedInUser);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var imgObj = document.getElementsByTagName(\"img\");\r\n    let that = this;\r\n    for (var i = 0 ; i < imgObj.length; i++) {\r\n      imgObj[i].addEventListener('click' , function() {\r\n        if(this.hasAttribute('data_group')) {\r\n          console.log(\"this is attach file property\", this.attributes.getNamedItem(\"src\").value)\r\n          \r\n          that.setState({\r\n            showImageFullScreen: true,\r\n            attachFileUrl: this.attributes.getNamedItem(\"src\").value\r\n          });\r\n        }\r\n\r\n      }) ; \r\n    }\r\n\r\n    // imgObj.addEventListener(\"click\", function(){\r\n    //   alert(\"Sdfsdf\");\r\n    // });\r\n  }\r\n\r\n  initSocketConnection() {\r\n    // this.socket = io.connect(SOCKET_URI);\r\n    this.socket = socket;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Checks if request from axios fails\r\n   * and if it does then shows error modal.\r\n   */\r\n  initAxios() {\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        this.setState({ loading: true });\r\n        return config;\r\n      },\r\n      error => {\r\n        this.setState({ loading: false });\r\n        this.setState({\r\n          errorMessage: `Couldn't connect to server. try refreshing the page.`,\r\n          error: true\r\n        });\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    axios.interceptors.response.use(\r\n      response => {\r\n        this.setState({ loading: false });\r\n        return response;\r\n      },\r\n      error => {\r\n        this.setState({ loading: false });\r\n        this.setState({\r\n          errorMessage: `Some error occured. try after sometime`,\r\n          error: true\r\n        });\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Shows error if client gets disconnected.\r\n   */\r\n  onClientDisconnected() {\r\n    NotificationManager.error(\r\n      \"Connection Lost from server please check your connection.\",\r\n      \"Error!\"\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Established new connection if reconnected.\r\n   */\r\n  onReconnection() {\r\n    if (this.state.user) {\r\n      this.socket.emit(\"sign-in\", this.state.user);\r\n      NotificationManager.success(\"Connection Established.\", \"Reconnected!\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Create room when user enter chat router\r\n   */\r\n  createSocketRoom() {\r\n    this.socket.emit(\"create_room\", this.state.signedInUser);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Get target user to chat\r\n   */\r\n  findTargetUser() {\r\n    if(this.state.targetUser) {\r\n        let blackUsersList = this.state.blackUsersList;\r\n        blackUsersList.push(this.state.targetUser._id);\r\n        this.setState({blackUsersList});\r\n    }\r\n    let findTargetQuery = {\r\n        blackUsersList: this.state.blackUsersList,\r\n        searchSetting: this.state.searchSetting,\r\n        signedInUser: this.state.signedInUser,\r\n        prevTargetUser: this.state.targetUser,\r\n    };\r\n    this.socket.emit(\"find_target\", findTargetQuery);\r\n  }\r\n\r\n  onFindTargetUser(targetUser) {\r\n    console.log(\"this is target user\",targetUser);    \r\n    let userChatData = {\r\n        id: targetUser._id,\r\n        name: targetUser.userName,\r\n        profile_image: targetUser.profile_image,\r\n        gender: targetUser.gender,\r\n        location: targetUser.location,\r\n        age: targetUser.age\r\n    }\r\n    this.setState({ targetUser });\r\n    this.setState({userChatData});\r\n  }\r\n  \r\n  onIgnore() {\r\n    // console.log(\"You are ignored from\", this.state.targetUser);\r\n    // Ignored Message handling\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}});\r\n  }\r\n  /**\r\n   *\r\n   * Setup all listeners\r\n   */\r\n\r\n  setupSocketListeners() {\r\n    this.socket.on(\"message\", this.onMessageRecieved.bind(this));\r\n    this.socket.on(\"reconnect\", this.onReconnection.bind(this));\r\n    this.socket.on(\"disconnect\", this.onClientDisconnected.bind(this));\r\n    //////\r\n    this.socket.on(\"find_target\", this.onFindTargetUser.bind(this));\r\n    this.socket.on(\"ignore\", this.onIgnore.bind(this));\r\n    this.socket.on(\"on-typing\", this.onTargetUserTyping.bind(this));\r\n\r\n\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    this.socket\r\n      // .on('init', ({ id: clientId }) => {\r\n      //   document.title = `${clientId} - VideoCall`;\r\n      //   this.setState({ clientId });\r\n      // })\r\n\r\n      //@@@@@@@@@@ Remove the callfrom. It's not needed\r\n      .on('request', ({ from: callFrom }) => {\r\n        this.setState({ callModal: 'active', callFrom });\r\n      })\r\n      .on('call', (data) => {\r\n        if (data.sdp) {\r\n          this.pc.setRemoteDescription(data.sdp);\r\n          if (data.sdp.type === 'offer') this.pc.createAnswer();\r\n        } else this.pc.addIceCandidate(data.candidate);\r\n      })\r\n      .on('end', this.endCall.bind(this, false))\r\n      .emit('init');\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {MessageRecievedFromSocket} message\r\n   *\r\n   * Triggered when message is received.\r\n   * It can be a message from user himself but on different session (Tab).\r\n   * so it decides which is the position of the message \"right\" or \"left\".\r\n   *\r\n   * increments unread count and appends in the messages array to maintain Chat History\r\n   */\r\n  customeRenderAddCamp() {\r\n      // console.log('param');\r\n  }\r\n\r\n  onMessageRecieved(message) {\r\n      // console.log(\"this is message response\", message);\r\n    let userChatData = this.state.userChatData;    \r\n    let messageData = message.message;\r\n    var messageDataText = messageData.text;\r\n    \r\n    if(messageDataText == '<p></p>\\n')\r\n      return false;\r\n      \r\n    // Handling emoji icon string\r\n    let regexp = /:[\\w]+[_]?[-]?[+]*[\\w]+:/g;\r\n    let str = messageData.text;\r\n\r\n    let array = [...str.matchAll(regexp)];\r\n\r\n    for(let i = 0 ; i < array.length ; i++)  {\r\n      let emojiComp = document.querySelector('[title=' + String(array[i]).split(\":\").join(\"\") +']');\r\n      let emojiHtml = emojiComp.innerHTML;\r\n      messageDataText = messageDataText.replace(String(array[i]), String(emojiHtml));\r\n    }\r\n\r\n    // Handling image case\r\n    messageDataText = messageDataText.split(\"<img\").join(\"<img data_group='attach-file'\");\r\n\r\n    let targetId;\r\n    if (message.from === this.state.signedInUser._id) {\r\n      messageData.position = \"right\";\r\n      messageData.renderAddCmp = () => { return renderHtml(`<div className=\"message-text message-text-right\">${messageDataText}</div>`)};\r\n      targetId = message.to;\r\n    //   messageData.avatar = `${process.env.REACT_APP_SERVER_URI}/avatar/${this.state.user.id}.jpg`;\r\n      messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.signedInUser.profile_image}`;\r\n    } else {\r\n      messageData.position = \"left\";      \r\n      messageData.renderAddCmp = () => { return renderHtml(`<div className=\"message-text message-text-left\">${messageDataText}</div>`)};\r\n      targetId = message.from;\r\n    //   messageData.avatar = `${process.env.REACT_APP_SERVER_URI}/avatar/${targetId}.jpg`;\r\n      messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.targetUser.profile_image}`;\r\n    }\r\n    // let targetIndex = userChatData.findIndex(u => u.id === targetId);\r\n    // messageData.renderAddCamp = this.customeRenderAddCamp;\r\n    messageData.alert = false;\r\n\r\n    if (!userChatData.messages) {\r\n      userChatData.messages = [];\r\n    } else {\r\n      if(userChatData.messages[userChatData.messages.length-1].alert == true ) {\r\n        userChatData.messages.pop();\r\n      }  \r\n    }\r\n    // console.log(this.state.userChatData.messages[this.state.userChatData.messages.length - 1]);\r\n    let messages = this.state.userChatData.messages;\r\n    if(typeof messages != 'undefined' && messages.length > 0) {\r\n      if(messages[messages.length-1].position == messageData.position) {\r\n        let prevMessageData = messages[messages.length-1];\r\n        prevMessageData.avatar = '';\r\n        prevMessageData.date = '';\r\n        userChatData.messages.pop();\r\n        userChatData.messages.push(prevMessageData);\r\n      }\r\n    }\r\n    userChatData.messages.push(messageData);\r\n    this.setState({ userChatData });\r\n    console.log(\"This is state for this component\",this.state);\r\n\r\n\r\n    // Scroll to bottom when receiving the new message\r\n    var element = document.querySelector('[class=\"rce-mlist\"]');\r\n    element.scrollTop = element.scrollHeight;\r\n  }\r\n  /**\r\n   *\r\n   * @param {User} e\r\n   *\r\n   * called when user clicks to sign-in\r\n   */\r\n  onUserClicked(e) {\r\n    let user = e.user;\r\n    this.socket.emit(\"sign-in\", user);\r\n    let userChatData = this.state.users.filter(u => u.id !== user.id);\r\n    this.setState({ user, signInModalShow: false, userChatData });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {ChatItem} e\r\n   *\r\n   * handles if user clickes on ChatItem on left.\r\n   */\r\n  onChatClicked(e) {\r\n    let users = this.state.userChatData;\r\n    for (let index = 0; index < users.length; index++) {\r\n      if (users[index].id === e.user.id) {\r\n        users[index].unread = 0;\r\n        this.setState({ selectedUserIndex: index, userChatData: users });\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {messageText} text\r\n   *\r\n   * creates message in a format in which messageList can render.\r\n   * position is purposely omitted and will be appended when message is received.\r\n   */\r\n  createMessage(text) {\r\n    let message = {\r\n      to: this.state.targetUser._id,\r\n      message: {\r\n        type: \"text\",\r\n        text: text,\r\n        date: +new Date(),\r\n        className: \"message\"\r\n      },\r\n      from: this.state.signedInUser._id\r\n    };\r\n    this.socket.emit(\"message\", message);\r\n  }\r\n\r\n  /**\r\n   * Toggles views from 'ChatList' to 'ChatBox'\r\n   *\r\n   * only on Phone\r\n   */\r\n\r\n  changeProfile(userInfo) {\r\n    this.setState({signedInUser: userInfo});\r\n  }\r\n\r\n  onProfileModalShow(status) {\r\n    this.setState({profileModalShow: status});\r\n  }\r\n\r\n  onSearchSettingModalShow(status) {\r\n    this.setState({searchModalShow: status});    \r\n  }\r\n  onShowImageFullScreen() {\r\n    this.setState({showImageFullScreen: false});\r\n  }\r\n  \r\n  onTyping() {\r\n    this.socket.emit(\"on-typing\", this.state.targetUser);\r\n  }\r\n\r\n  onTargetUserTyping() {\r\n    this.setState({onTyping: true});\r\n\r\n    let userChatData = this.state.userChatData;\r\n    let messages = userChatData.messages;\r\n    let messageData = {};\r\n    let targetId = this.state.targetUser._id;\r\n    if(typeof messages != 'undefined'){\r\n      if(messages[messages.length-1].alert != true || messages.length == 0) {\r\n        messageData.position = \"left\";      \r\n        messageData.renderAddCmp = () => { return <OnTyping/>};\r\n        messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.targetUser.profile_image}`;\r\n        messageData.className = \"message\";\r\n        messageData.alert = true;\r\n        \r\n        if (!userChatData.messages) {\r\n          userChatData.messages = [];\r\n        }\r\n        userChatData.messages.push(messageData);\r\n        this.setState({ userChatData });\r\n        \r\n        this.turnOffRedTimeout = setTimeout(() => {\r\n          userChatData = this.state.userChatData;\r\n          if(userChatData.messages[userChatData.messages.length-1].alert == true) {\r\n            userChatData.messages.pop();\r\n            this.setState({ userChatData });\r\n          }          \r\n        }, 2000);\r\n      } else {\r\n        console.log(\"@@@@@@@***********\")        \r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n  startCall(isCaller, targetUserID, config) {\r\n    console.log(\"call start now \", isCaller, targetUserID, config)\r\n    this.config = config;\r\n    this.pc = new PeerConnection(targetUserID)\r\n      .on('localStream', (src) => {\r\n        const newState = { callWindow: 'active', localSrc: src };\r\n        if (!isCaller) newState.callModal = '';\r\n        this.setState(newState);\r\n      })\r\n      .on('peerStream', (src) => this.setState({ peerSrc: src }))\r\n      .start(isCaller, config);\r\n  }\r\n\r\n  rejectCall() {\r\n    const { callFrom } = this.state;\r\n    this.socket.emit('end', { to: callFrom });\r\n    this.setState({ callModal: '' });\r\n  }\r\n\r\n  endCall(isStarter) {\r\n    if (_.isFunction(this.pc.stop)) {\r\n      this.pc.stop(isStarter);\r\n    }\r\n    this.pc = {};\r\n    this.config = null;\r\n    this.setState({\r\n      callWindow: '',\r\n      callModal: '',\r\n      localSrc: null,\r\n      peerSrc: null\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    let chatBoxProps =  {\r\n          xs: 12,\r\n          sm: 12\r\n        };\r\n    \r\n\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    const { clientId, callFrom, callModal, callWindow, localSrc, peerSrc } = this.state;\r\n    return (\r\n      <div>\r\n        {/* <button onClick={this.findTargetUser.bind(this)}>Next stranger</button> */}\r\n        \r\n        <ChatBox\r\n          signedInUser={this.state.signedInUser}\r\n          onSendClicked={this.createMessage.bind(this)}\r\n          targetUser={\r\n            this.state.userChatData\r\n          }\r\n          onProfileModalShow={this.onProfileModalShow.bind(this)}\r\n          onSearchSettingModalShow={this.onSearchSettingModalShow.bind(this)}\r\n          findTargetUser={this.findTargetUser.bind(this)}\r\n          onTyping={this.onTyping.bind(this)}\r\n          startCall={this.startCallHandler}\r\n        />\r\n        \r\n        <ErrorModal\r\n          show={this.state.error}\r\n          errorMessage={this.state.errorMessage}\r\n        />\r\n\r\n        <LoadingModal show={this.state.loading} />\r\n        <NotificationContainer />        \r\n        \r\n        <ProfileBox \r\n          profileInfo={this.state.signedInUser}\r\n          onChangeProfile={this.changeProfile.bind(this)}\r\n          onProfileModalShow={this.onProfileModalShow.bind(this)}\r\n          profileContainer={this.state.profileModalShow ? 'profile-container' : 'profile-container-hide' }         \r\n        />\r\n        <SearchSettingBox\r\n          searchContainer={this.state.searchModalShow ? 'search-container' : 'search-container-hide'}\r\n          searchSetting={this.state.searchSetting}\r\n          onSearchSettingModalShow={this.onSearchSettingModalShow.bind(this)}\r\n        />\r\n\r\n        {this.state.showImageFullScreen ? \r\n          <FullScreenImage \r\n            imageUrl={this.state.attachFileUrl}\r\n            onShowImageFullScreen={this.onShowImageFullScreen.bind(this)}\r\n          />\r\n          : null\r\n        }\r\n\r\n        {!_.isEmpty(this.config) && (\r\n          <CallWindow\r\n            status={callWindow}\r\n            localSrc={localSrc}\r\n            peerSrc={peerSrc}\r\n            config={this.config}\r\n            mediaDevice={this.pc.mediaDevice}\r\n            endCall={this.endCallHandler}\r\n          />\r\n        ) }\r\n        \r\n        <CallModal\r\n          status={callModal}\r\n          startCall={this.startCallHandler}\r\n          rejectCall={this.rejectCallHandler}\r\n          callFrom={this.state.targetUser._id}\r\n        />\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { getFromStorage } from '../utils/storage';\r\n\r\n// FREE\r\nimport HomePage from '../pages/HomePage/HomePage';\r\nimport UserSign from '../pages/UserSign/UserSign';\r\nimport GuestSign from '../pages/GuestSign/GuestSign';\r\nimport Chat from '../pages/Chat/Chat';\r\n\r\nconst fakeAuth = () => {\r\n  const obj = getFromStorage('guest_signin');\r\n  \r\n  if(obj && obj.token) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    fakeAuth()      \r\n      ? <Redirect to='/chat' /> \r\n      : <Component {...props} />\r\n  )} />\r\n)\r\n\r\nconst PrivateChatRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    fakeAuth()  \r\n      ? <Component {...props} />\r\n      : <Redirect to='/' /> \r\n  )} />\r\n)\r\n\r\nclass Routes extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <PrivateRoute exact path=\"/\" component={HomePage} />\r\n        <PrivateRoute path=\"/usersign\" component={ UserSign } />\r\n        <PrivateRoute path=\"/guest\" component={ GuestSign } />\r\n        <PrivateChatRoute path=\"/chat\" component={ Chat } />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Routes />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}