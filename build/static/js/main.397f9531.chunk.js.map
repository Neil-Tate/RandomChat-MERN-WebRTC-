{"version":3,"sources":["utils/storage.js","pages/HomePage/HomePage.js","config/config.js","pages/Signup/Signup.js","pages/Login/Login.js","pages/UserSign/UserSign.js","config/country.js","pages/GuestSign/GuestSign.js","components/ChatBox.js","components/OnTyping/OnTyping.js","components/ProfileBox/ProfileBox.js","components/FullScreenImage/FullScreenImage.js","components/SearchSettingBox/SearchSettingBox.js","components/ReportBox/ReportBox.js","components/ErrorModal.js","components/LoadingModal.js","pages/Chat/socket.js","pages/Chat/Emitter.js","pages/Chat/MediaDevice.js","pages/Chat/PeerConnection.js","components/CallWindow/CallWindow.js","components/CallModal/CallModal.js","pages/Chat/Chat.js","App/Routes.js","App/App.js","registerServiceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","FullPageIntroWithFixedTransparentNavbar","props","state","collapse","isWideEnough","onClick","bind","this","setState","color","fixed","dark","expand","scrolling","transparent","size","href","className","isOpen","navbar","right","to","src","overlay","icon","align","React","Component","RESTAPIUrl","SignUp","context","handleChange","handleChangeEmail","handleChangeConfirm","handleChangeName","handleDismiss","handleShow","signUpClicked","displayAlert","password","email","confPass","name","signInLoading","show","signupStatus","signUpMessage","length","test","String","toLowerCase","e","target","value","Alert","bsStyle","onDismiss","id","newUser","fetch","method","headers","body","then","res","json","log","message","FormGroup","controlId","FormControl","type","placeholder","onChange","validationState","validateEmail","Feedback","getValidationState","HelpBlock","getValidationStateConf","Button","block","disabled","LogIn","logInClicked","logInLoading","signInError","logInStatus","success","token","stateChanger","loggedIn","loggedInName","logOutButtonStatus","UserSign","logOutClicked","logOutLoadingMessage","logOutLoading","newState","Grid","Row","Col","md","xs","Tabs","defaultActiveKey","Tab","eventKey","title","countries","GuestSign","handleChangeLocation","handleChangeAge","handleChangeGender","handleSubmit","userName","location","age","gender","loginLoading","event","preventDefault","status","history","push","alert","sm","lg","xl","onSubmit","label","group","validate","required","map","object","i","getValue","min","max","checked","htmlFor","outline","ChatBox","onEditorStateChange","editorState","handleChangeComplete","rgbColor","rgb","r","g","b","pickerColor","showEmojiPicker","toolbar_show","showColorPicker","messageText","EditorState","createEmpty","onAttachFile","setDomEditorRef","ref","domEditor","onSendClicked","draftToHtml","convertToRaw","getCurrentContent","focusEditor","emoji","convertHtml","subHtml","substring","totalHtml","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","editorStateChange","createWithContent","onTyping","KeyBindingUtil","hasCommandModifier","ctrlKey","getDefaultKeyBinding","findTargetUser","data","FormData","append","attachFile","files","fileContainer","fileName","setTimeout","toggleCustomInlineStyle","video","config","audio","startCall","targetUser","left","signedInUser","profile_image","imageHash","alt","center","callWithVideo","path","mdiPhone","horizontal","vertical","rotate","mdiVideoOutline","caret","mdiDotsVertical","basic","onProfileModalShow","onSearchSettingModalShow","onReportModalShow","divider","logOut","lockable","toBottomHeight","dataSource","messages","downButton","style","width","position","toggleEmojiPicker","toggle_toolbar","wrapperClassName","toolbarClassName","editorClassName","keyBindingFn","keyBindingFunction","toolbar","options","inline","inDropdown","image","uploadEnabled","inputAccept","fontSize","onChangeComplete","onApplyColorPicker","hideColorPicker","toggleColorPicker","accept","focusable","viewBox","aria-hidden","role","fill","d","bottom","opacity","zIndex","onSelect","addEmoji","emojiTooltip","closeEmojiPicker","OnTyping","imageURL","profileInfo","handleUploadImage","handleChangeProfile","ev","uploadInput","updateProfile","Date","now","_id","profileContainer","FullScreenImage","downloadPath","imageUrl","split","onShowImageFullScreen","download","class","Range","createSliderWithTooltip","Slider","SearchSettingBox","temp","searchSetting","ageMin","ageMax","searchContainer","handleChangeSearchSetting","defaultValue","tipFormatter","ReportBox","reportList","reportReason","inputTextActive","NotificationManager","reportUser","reason","reportContainer","handleReport","handleChangeReportSetting","rows","handleOtherReason","ErrorModal","Header","Title","Body","glyph","errorMessage","LoadingModal","socket","io","connect","Emitter","events","args","forEach","fn","_","isFunction","listeners","index","findIndex","_fn","splice","MediaDevice","navigator","mediaDevices","getUserMedia","facingMode","height","ideal","stream","emit","catch","DOMException","on","len","arguments","track","enabled","set","getTracks","stop","PC_CONFIG","iceServers","url","credential","username","PeerConnection","friendID","pc","RTCPeerConnection","onicecandidate","candidate","ontrack","streams","mediaDevice","isCaller","addTrack","createOffer","start","isStarter","close","off","getDescription","createAnswer","desc","setLocalDescription","sdp","rtcSdp","RTCSessionDescription","setRemoteDescription","iceCandidate","RTCIceCandidate","addIceCandidate","getButtonClass","classnames","disable","CallWindow","peerSrc","localSrc","endCall","peerVideo","useRef","localVideo","useState","setVideo","setAudio","useEffect","current","srcObject","toggle","toggleMediaDevice","deviceType","autoPlay","muted","CallModal","callFrom","rejectCall","contactUser","userAvatar","acceptWithVideo","jwt_decode","user","App","signInModalShow","users","userChatData","selectedUserIndex","profileModalShow","searchModalShow","reportModalShow","blackUsersList","showImageFullScreen","callWindow","callModal","startCallHandler","endCallHandler","rejectCallHandler","initAxios","initSocketConnection","createSocketRoom","setupSocketListeners","imgObj","document","getElementsByTagName","that","addEventListener","hasAttribute","attributes","getNamedItem","attachFileUrl","axios","interceptors","request","use","loading","Promise","reject","response","findTargetQuery","prevTargetUser","text","from","onMessageRecieved","onReconnection","onClientDisconnected","onFindTargetUser","onSearchNone","onAvailableNone","onIgnore","onTargetUserTyping","onTargetDisconnect","onTargetLogout","onLogOut","messageData","messageDataText","str","array","matchAll","emojiHtml","querySelector","join","innerHTML","replace","renderAddCmp","renderHtml","avatar","pop","prevMessageData","date","element","scrollTop","scrollHeight","filter","u","unread","userInfo","turnOffRedTimeout","clear","targetUserID","createMessage","iamgeHash","onChangeProfile","changeProfile","closeSettingBox","isEmpty","fakeAuth","PrivateRoute","component","rest","render","PrivateChatRoute","Routes","exact","HomePage","Chat","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","URL","process","origin","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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AAI,GACZ/F,KAAKL,MAAMyF,SACR,6BAAK,uCAAapF,KAAKL,MAAM0F,aAAxB,KACL,kBAACZ,EAAA,EAAD,CACMC,OAAK,EACL1B,QAAUhD,KAAKL,MAAM2F,mBACrBX,SAAY3E,KAAKL,MAAM+F,cACvB5F,QAAWE,KAAKL,MAAM+F,cAAgB,KAAO1F,KAAKwF,eAE/CxF,KAAKL,MAAM2F,mBAAqB,UAAY,gBAKrD,yBAAK5E,UAAY,qBACjB,kBAACuF,EAAA,EAAD,CAAMC,iBAAkB,EAAGhD,GAAG,4BACxB,kBAACiD,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAM,QAAQ3F,UAAU,cACxC,kBAAC,EAAD,CAAOyE,aAAgBnF,KAAKmF,gBAE9B,kBAACgB,EAAA,EAAD,CAAKC,SAAU,EAAGC,MAAM,UAAU3F,UAAU,cAC1C,kBAAC,EAAD,UAMhB,kBAACoF,EAAA,EAAD,CAAKC,GAAI,W,GA9HN3E,aCjBVkF,EAAY,CACrB,cACA,UACA,UACA,UACA,SACA,sBACA,YACA,UACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,SACA,UACA,yBACA,WACA,SACA,SACA,WACA,eACA,UACA,aACA,WACA,WACA,SACA,iCACA,OACA,QACA,QACA,WACA,UACA,aACA,gBACA,UACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,WACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,WACA,SACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,oBACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,SACA,aACA,UACA,SACA,WACA,aACA,UACA,aACA,kBACA,UACA,QACA,QACA,cACA,cACA,YACA,QACA,UACA,cACA,SACA,OACA,WACA,QACA,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","file":"static/js/main.397f9531.chunk.js","sourcesContent":["export function getFromStorage(key) {\r\n    if (!key) {\r\n        return null;\r\n    }\r\n    try {\r\n        const valueStr = localStorage.getItem(key);\r\n        if (valueStr) {\r\n            return JSON.parse(valueStr);\r\n        }\r\n        return null;\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n}\r\nexport function setInStorage(key, obj) {\r\n    if (!key) {\r\n        console.error('Error: Key is missing');\r\n    }\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}","import React from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './HomePage.css';\r\n\r\nclass FullPageIntroWithFixedTransparentNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      isWideEnough: false,\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n      collapse: !this.state.collapse,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n            \r\n            <MDBNavbar color=\"bg-primary\" fixed=\"top\" dark expand=\"md\" scrolling transparent>\r\n              <MDBContainer size=\"md\">            \r\n                <MDBNavbarBrand href=\"/\">\r\n                  <strong className=\"navbar-title\">Chat With Stranger</strong>\r\n                </MDBNavbarBrand>\r\n                {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\r\n                <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                  <MDBNavbarNav right>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink to=\"/guest\">GUEST</MDBNavLink>\r\n                    </MDBNavItem>                   \r\n                  </MDBNavbarNav>\r\n                </MDBCollapse>\r\n              </MDBContainer>\r\n            </MDBNavbar>\r\n            \r\n\r\n          <MDBView src={process.env.PUBLIC_URL + '/background.jpg'}>\r\n            <MDBMask overlay=\"purple-light\" className=\"flex-center flex-column text-white text-center\">\r\n              <strong><h2>Random Video, Text & Audio Chat with Strangers</h2></strong><br></br>\r\n              <h5>It provides free random chat with cool people in private chat rooms.</h5>\r\n              <p>Chat with strangers & send pictures, videos in private free chat rooms. Meet & talk to strangers from all over the world.</p><br />      \r\n              <div className=\"btn-group\">\r\n                <MDBNavLink to=\"/guest\">\r\n                  <MDBBtn color=\"secondary\" size=\"lg\">\r\n                    <MDBIcon icon=\"user-shield\" className=\"mr-1\" size=\"lg\" /> Chat as a guest\r\n                  </MDBBtn>\r\n                </MDBNavLink>      \r\n              </div>              \r\n            </MDBMask>\r\n          </MDBView>\r\n        </header>\r\n\r\n        <main>\r\n          <MDBContainer className=\"text-center my-5\">\r\n            <p align=\"justify\">Texting strangers might come naturally to some but others may have goose bumps when they are trying to text strangers. When you text strangers you are opening a window into a great text chat with strangers. The first few texts are the most difficult ones, once you have started texting and managed to move past opening texts the rest is easy peasy lemon squeezy. Sending a text to strangers is just like letter writing which was back then known as making pen pals. However, these days text to strangers chat room is a modern way of connecting with strangers. When you text strangers you are at the first step of a great conversation that could blossom into a good friendship or even a relationship. There are many examples in the world where people have found their soulmates when they were random texting strangers online. Many people online text with strangers in order to find some company and to talk to someone. When you send a text to strangers what happens next is a total mystery. It might end abruptly a couple of times whereas other times it might turn into a beautiful conversation and a pleasant experience.</p>\r\n          </MDBContainer>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullPageIntroWithFixedTransparentNavbar;","// export const RESTAPIUrl = 'http://192.168.100.118:5000';\r\n// export const SOCKET_URI = 'http://192.168.100.118:5000';\r\n\r\nexport const RESTAPIUrl = 'https://anonymous-video-chat.herokuapp.com';\r\nexport const SOCKET_URI = 'https://anonymous-video-chat.herokuapp.com';","import React, { Component } from 'react';\r\nimport './Signup.css';\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    HelpBlock,  \r\n    Button,\r\n    Alert,\r\n} from 'react-bootstrap';\r\nimport 'whatwg-fetch';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\nclass SignUp extends Component {\r\n    \r\n    constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n        \r\n    this.handleChangeConfirm = this.handleChangeConfirm.bind(this);\r\n        \r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n        \r\n    this.handleDismiss = this.handleDismiss.bind(this);\r\n        \r\n    this.handleShow = this.handleShow.bind(this);\r\n        \r\n        \r\n    this.signUpClicked = this.signUpClicked.bind(this);\r\n        \r\n    this.displayAlert = this.displayAlert.bind(this);\r\n\r\n    this.state = {\r\n      password: '',\r\n      email: '',\r\n      confPass: '',\r\n      name: '',\r\n      signInLoading: false,\r\n      show: false,\r\n      signupStatus: 'success',\r\n      signUpMessage: 'You have signed up successfully. Proceed to login.',\r\n        \r\n    };\r\n  }\r\n    \r\n  validateEmail() {\r\n    if(this.state.email.length ===0) return null;\r\n      // eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(String(this.state.email).toLowerCase())?'success':'error';\r\n  }\r\n\r\n  getValidationState() {\r\n    const length = this.state.password.length;\r\n    if (length > 8) return 'success';\r\n    else if (length > 5) return 'warning';\r\n    else if (length > 0) return 'error';\r\n    return null;\r\n  }\r\n    \r\n  getValidationStateConf() {\r\n    const length = this.state.confPass.length;\r\n    if(length === 0 ) return null;\r\n      \r\n    else if( this.state.password === this.state.confPass ) return 'success';\r\n    \r\n    else return 'error';\r\n      \r\n    \r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n    \r\n  handleChangeEmail(e) {\r\n    this.setState({ email: e.target.value });\r\n  }\r\n\r\n  handleChangeConfirm(e) {\r\n    this.setState({ confPass: e.target.value });\r\n  }\r\n\r\n  handleChangeName(e) {\r\n    this.setState({ name: e.target.value });\r\n  }\r\n    \r\n  handleDismiss() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n    \r\n  displayAlert() {\r\n      return (\r\n          <Alert bsStyle={this.state.signupStatus} onDismiss={this.handleDismiss} id=\"alertBox\">\r\n              \r\n              <p>\r\n                { this.state.signUpMessage }\r\n              </p>\r\n              \r\n            </Alert>\r\n\r\n      );\r\n  }\r\n\r\n    \r\n  signUpClicked(e) {\r\n      this.setState({ signInLoading : true });\r\n      //console.log(e);\r\n      const newUser = {\r\n        password: this.state.password,\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n      };\r\n      \r\n      fetch( RESTAPIUrl+\"/api/account/signup\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newUser),\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            console.log('json', json);\r\n        \r\n        if(json.message === \"Signed Up\") {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'success',\r\n                signUpMessage: 'You have signed up successfully. Proceed to login.',\r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n                \r\n            });\r\n        } else if ( json.message === 'Error: Account Already Exists') {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'warning',\r\n                signUpMessage: 'Account already Exists. Procced to login',  \r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n            });\r\n        } else if( json.message === 'Error: Server Error') {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'danger',\r\n                signUpMessage: 'Unexpected error. Please try again later.',\r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n                \r\n            });\r\n        }\r\n        \r\n            \r\n        })\r\n      \r\n  }\r\n\r\n    \r\n  \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              <form>\r\n                <FormGroup\r\n                    controlId=\"signUpName\">\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        placeholder=\"Name\"\r\n                        onChange={this.handleChangeName}\r\n\r\n                        />\r\n\r\n                    </FormGroup>\r\n\r\n\r\n                <FormGroup\r\n                    controlId=\"signUpEmail\"\r\n                    validationState={this.validateEmail()}\r\n                    >\r\n\r\n                    <FormControl\r\n                        type=\"email\"\r\n                        value={this.state.email}\r\n                        placeholder=\"Email\"\r\n                        onChange={this.handleChangeEmail}\r\n                        />\r\n                    <FormControl.Feedback />    \r\n\r\n                </FormGroup>    \r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicTextSignupPass\"\r\n                  validationState={this.getValidationState()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <FormControl.Feedback />\r\n                  <HelpBlock id=\"passwordHelp\">Password must be minimum 8 characters long</HelpBlock>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicTextSignupConfPass\"\r\n                  validationState={this.getValidationStateConf()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.confPass}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChangeConfirm}\r\n                  />\r\n                  <FormControl.Feedback />\r\n\r\n                </FormGroup>\r\n\r\n                <Button\r\n                  block\r\n                  bsStyle=\"warning\"\r\n                  disabled = {this.state.signInLoading}\r\n                  onClick = {this.state.signInLoading ? null : this.signUpClicked}\r\n                  >\r\n                    {this.state.signInLoading ? 'Processing...' : 'Sign Up'}\r\n              </Button>\r\n\r\n\r\n              </form>\r\n                \r\n              { this.state.show ? this.displayAlert() : null}\r\n\r\n\r\n              \r\n        </div>\r\n          \r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n\r\n","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    Button,\r\n    Alert,\r\n} from 'react-bootstrap';\r\nimport 'whatwg-fetch';\r\nimport {\r\n  setInStorage,\r\n} from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\n\r\nclass LogIn extends Component {\r\n    \r\n    constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n    \r\n    this.logInClicked = this.logInClicked.bind(this);\r\n        \r\n    this.handleDismiss = this.handleDismiss.bind(this);\r\n        \r\n    this.handleShow = this.handleShow.bind(this); \r\n    \r\n        \r\n    this.displayAlert = this.displayAlert.bind(this);\r\n\r\n    this.state = {\r\n      password: '',\r\n      email: '',\r\n      logInLoading: false,\r\n      signInError: '',\r\n      show: false,\r\n      logInStatus: 'danger',\r\n        \r\n    };\r\n  }\r\n    \r\n  validateEmail() {\r\n    if(this.state.email.length ===0) return null;\r\n      // eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(String(this.state.email).toLowerCase())?'success':'error';\r\n  }\r\n\r\n  getValidationState() {\r\n    const length = this.state.password.length;\r\n    if (length > 8) return 'success';\r\n    else if (length > 5) return 'warning';\r\n    else if (length > 0) return 'error';\r\n    return null;\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n    \r\n  handleChangeEmail(e) {\r\n    this.setState({ email: e.target.value });\r\n  }\r\n    \r\n  logInClicked() {\r\n      const {\r\n          email, \r\n          password,\r\n      } = this.state;\r\n      \r\n      this.setState({\r\n          logInLoading: true,\r\n      });\r\n      \r\n      fetch( RESTAPIUrl + '/api/account/signin', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email,\r\n            password,\r\n          }),\r\n        }).then(res => res.json())\r\n          .then(json => {\r\n            console.log('json', json);\r\n            if (json.success) {\r\n              setInStorage('the_login_n_signup', { token: json.token, name: json.name });\r\n              this.setState({\r\n                signInError: 'Welcome ' + json.name + '!',\r\n                logInLoading: false,\r\n                password: '',\r\n                email: '',\r\n                token: json.token,\r\n                show: true,\r\n                logInStatus: 'success',\r\n              });\r\n                \r\n              this.props.stateChanger({\r\n                  loggedIn: true,\r\n                  token: json.token,\r\n                  loggedInName: json.name,\r\n                  logOutButtonStatus: 'warning',\r\n              });\r\n            } else {\r\n              this.setState({\r\n                signInError: json.message,\r\n                logInLoading: false,\r\n                show: true,\r\n                logInStatus: 'danger',\r\n              });\r\n            }\r\n          \r\n          })\r\n      \r\n  }\r\n    \r\n\r\n  handleDismiss() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n    \r\n  displayAlert() {\r\n      return (\r\n          <Alert bsStyle={this.state.logInStatus} onDismiss={this.handleDismiss} id=\"alertBox\">\r\n              \r\n              <p>\r\n                { this.state.signInError }\r\n              </p>\r\n              \r\n            </Alert>\r\n\r\n      );\r\n  }\r\n    \r\n    \r\n    \r\n  \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              <form>\r\n                <FormGroup\r\n                    controlId=\"LogInEmail\"\r\n                    validationState={this.validateEmail()}\r\n                    >\r\n\r\n                    <FormControl\r\n                        type=\"email\"\r\n                        value = {this.state.email}\r\n                        placeholder=\"Email\"\r\n                        onChange={this.handleChangeEmail}\r\n                        />\r\n                    <FormControl.Feedback />    \r\n\r\n                </FormGroup>    \r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicText\"\r\n                  validationState={this.getValidationState()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <FormControl.Feedback />\r\n\r\n                </FormGroup>\r\n\r\n\r\n\r\n              </form>\r\n            \r\n          <Button\r\n                  block\r\n                  bsStyle=\"success\"\r\n                  disabled = {this.state.logInLoading}\r\n                  onClick = {this.state.logInLoading ? null : this.logInClicked}\r\n                  >\r\n                    {this.state.logInLoading ? 'Authenticating...' : 'Log In'}\r\n          </Button>\r\n        \r\n        { this.state.show ? this.displayAlert() : null}\r\n\r\n            \r\n        </div>\r\n            \r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default LogIn;\r\n\r\n","import React, { Component } from 'react';\r\nimport './UserSign.css';\r\nimport { \r\n     Grid, \r\n     Row,\r\n     Col,\r\n     Tabs,\r\n     Tab,\r\n     Button \r\n       } from 'react-bootstrap'; \r\nimport SignUp from '../Signup/Signup';\r\nimport LogIn from '../Login/Login';\r\nimport {\r\n  getFromStorage,\r\n} from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\nclass UserSign extends Component { \r\n    constructor( props, context) {\r\n        super(props, context);\r\n        \r\n        this.stateChanger = this.stateChanger.bind(this);\r\n        this.logOutClicked = this.logOutClicked.bind(this);\r\n        \r\n        this.state = {\r\n            loggedIn: false,\r\n            token: '',\r\n            loggedInName: 'Unnamed Ashok Kumar',\r\n            logOutButtonStatus: 'warning',\r\n            logOutLoadingMessage: 'Log Out',\r\n            logOutLoading: false,\r\n            \r\n            \r\n            \r\n        }\r\n    }\r\n    \r\n    stateChanger(newState) {\r\n        this.setState(newState);\r\n    }\r\n    \r\n    componentDidMount() {\r\n    const obj = getFromStorage('the_login_n_signup');\r\n    if (obj && obj.token) {\r\n      const { token } = obj;\r\n      const { name } = obj;\r\n      // Verify token\r\n      fetch( RESTAPIUrl + '/api/account/verify?token=' + token)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.success) {\r\n            this.setState({\r\n              token,\r\n              loggedInName: name,\r\n              logOutLoading: false,\r\n              loggedIn: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              logOutLoading: false,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        logOutLoading: false,\r\n      });\r\n    }\r\n  }\r\n    \r\n    logOutClicked() {\r\n        this.setState({\r\n          logOutLoading: true,\r\n          logOutLoadingMessage: 'Logging Out...',\r\n          logOutButtonStatus: 'info',\r\n        });\r\n        const obj = getFromStorage('the_login_n_signup');\r\n        if (obj && obj.token) {\r\n          const { token } = obj;\r\n          // Verify token\r\n          fetch(RESTAPIUrl + '/api/account/logout?token=' + token)\r\n            .then(res => {\r\n              //console.log(res);\r\n              return res.json();\r\n          })\r\n            .then(json => {\r\n              if (json.success) {\r\n                this.setState({\r\n                  token: '',\r\n                  logOutLoading: false,\r\n                  loggedIn: false,\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  logOutLoading: false,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          this.setState({\r\n            logOutLoading: false,\r\n          });\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n \r\n          <h1 className=\"App-title\">Login Or Sign-Up</h1>\r\n        </header>\r\n            <Grid>\r\n                <Row>\r\n                    <Col md={4}></Col>\r\n                    <Col xs={12} md={4}>\r\n                        {this.state.loggedIn ? \r\n                            <div><h1>Welcome {this.state.loggedInName}!</h1> \r\n                            <Button\r\n                                  block\r\n                                  bsStyle= {this.state.logOutButtonStatus}\r\n                                  disabled = {this.state.logOutLoading}\r\n                                  onClick = {this.state.logOutLoading ? null : this.logOutClicked}\r\n                                  >\r\n                                    {this.state.logOutButtonStatus ? 'Log Out' : 'Logging Out'}\r\n                            </Button>\r\n                            </div>\r\n                            : \r\n                            \r\n                            <div className = \"loginBoxContainer\">\r\n                            <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\r\n                                  <Tab eventKey={1} title=\"Login\" className=\"tabContent\">\r\n                                    <LogIn stateChanger = {this.stateChanger}/>\r\n                                  </Tab>\r\n                                  <Tab eventKey={2} title=\"Sign Up\" className=\"tabContent\">\r\n                                    <SignUp />\r\n                                  </Tab>\r\n                            </Tabs>\r\n                        </div>}\r\n                    \r\n                    </Col>\r\n                    <Col md={4}></Col>\r\n                </Row>\r\n            </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserSign;\r\n","export const countries = [\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"Algeria\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belarus\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Benin\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bosnia and Herzegovina\",\r\n    \"Botswana\",\r\n    \"Brazil\",\r\n    \"Brunei\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Burundi\",\r\n    \"Cabo Verde\",\r\n    \"Cambodia\",\r\n    \"Cameroon\",\r\n    \"Canada\",\r\n    \"Central African Republic (CAR)\",\r\n    \"Chad\",\r\n    \"Chile\",\r\n    \"China\",\r\n    \"Colombia\",\r\n    \"Comoros\",\r\n    \"Costa Rica\",\r\n    \"Cote d'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Djibouti\",\r\n    \"Dominica\",\r\n    \"Dominican Republic\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"El Salvador\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Estonia\",\r\n    \"Ethiopia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"Gabon\",\r\n    \"Gambia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Ghana\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guatemala\",\r\n    \"Guinea\",\r\n    \"Guinea-Bissau\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kenya\",\r\n    \"Kiribati\",\r\n    \"Kosovo\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"Laos\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Lesotho\",\r\n    \"Liberia\",\r\n    \"Libya\",\r\n    \"Liechtenstein\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macedonia (FYROM)\",\r\n    \"Madagascar\",\r\n    \"Malawi\",\r\n    \"Malaysia\",\r\n    \"Maldives\",\r\n    \"Mali\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Mauritania\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Monaco\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Morocco\",\r\n    \"Mozambique\",\r\n    \"Myanmar (Burma)\",\r\n    \"Namibia\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"New Zealand\",\r\n    \"Nicaragua\",\r\n    \"Niger\",\r\n    \"Nigeria\",\r\n    \"North Korea\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Palestine\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Qatar\",\r\n    \"Romania\",\r\n    \"Russia\",\r\n    \"Rwanda\",\r\n    \"Saint Kitts and Nevis\",\r\n    \"Saint Lucia\",\r\n    \"Saint Vincent and the Grenadines\",\r\n    \"Samoa\",\r\n    \"San Marino\",\r\n    \"Sao Tome and Principe\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Seychelles\",\r\n    \"Sierra Leone\",\r\n    \"Singapore\",\r\n    \"Slovakia\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"South Africa\",\r\n    \"South Korea\",\r\n    \"South Sudan\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"Sudan\",\r\n    \"Suriname\",\r\n    \"Swaziland\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Tanzania\",\r\n    \"Thailand\",\r\n    \"Timor-Leste\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Trinidad and Tobago\",\r\n    \"Tunisia\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Tuvalu\",\r\n    \"Uganda\",\r\n    \"Ukraine\",\r\n    \"United Arab Emirates (UAE)\",\r\n    \"United Kingdom (UK)\",\r\n    \"United States of America (USA)\",\r\n    \"Uruguay\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Vatican City (Holy See)\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Yemen\",\r\n    \"Zambia\",\r\n    \"Zimbabwe\"\r\n];","import React from 'react';\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter, MDBInputSelect } from 'mdbreact';\r\nimport 'whatwg-fetch';\r\nimport { setInStorage } from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport { countries } from \"../../config/country\";\r\nimport './GuestSign.css';\r\n\r\nclass GuestSign extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeLocation = this.handleChangeLocation.bind(this);\r\n    this.handleChangeAge = this.handleChangeAge.bind(this);\r\n    this.handleChangeGender = this.handleChangeGender.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      userName: '',\r\n      location: 'Canada',\r\n      age: 28,\r\n      gender: 'Male',\r\n      loginLoading: false,\r\n    }\r\n  }\r\n\r\n  handleChangeName(e) {\r\n    this.setState({ userName: e.target.value });\r\n  }\r\n\r\n  handleChangeLocation(e) {\r\n    this.setState({ location: e.target.value });\r\n  }\r\n\r\n  handleChangeAge(value) {\r\n    this.setState({ age: value });\r\n  }\r\n\r\n  handleChangeGender(e) {\r\n    this.setState({ gender: e.target.value });\r\n  }\r\n\r\n  componentWillUpdate(){\r\n    console.log(this.state);\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(\"form submitted\")\r\n    const { userName, location, age, gender } = this.state;\r\n    \r\n    this.setState ({ \r\n      loginLoading: true, \r\n    });\r\n\r\n    fetch(RESTAPIUrl + '/api/guest/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userName,\r\n        location,\r\n        age,\r\n        gender\r\n      }),\r\n    }).then(res =>res.json())\r\n      .then(json => {\r\n        console.log('this is json object', json);\r\n        if(json.status) {\r\n          setInStorage('guest_signin', {token:json.token});\r\n          this.props.history.push(\"/chat\");\r\n        } else {\r\n          alert(\"Server Error\");\r\n        }\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n        <MDBRow>\r\n          <MDBCol sm=\"10\" md=\"7\" lg=\"6\" xl=\"4\" className=\"mx-auto mt-3 sign-container\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <MDBCard>\r\n              <div className=\"text-center sign-title\">\r\n                <h5 className=\"dark-grey-text mb-5\"><strong>Sign in</strong></h5>\r\n              </div>\r\n              <MDBCardBody className=\"mx-4\">\r\n                \r\n                <MDBInput label=\"Your Name\" group type=\"text\" onChange={this.handleChangeName} validate error=\"wrong\" success=\"right\" required/>\r\n                \r\n                <select className=\"browser-default custom-select\" id=\"location\" name=\"location\" value={this.state.location} onChange={this.handleChangeLocation} >\r\n                  <option>Choose your location</option>\r\n                  {\r\n                    countries.map((object, i) => {\r\n                      return <option value={object} key={i}>{object}</option>\r\n                    })\r\n                  }\r\n                </select>\r\n\r\n                <label className=\"form-label\" >Your Age</label>\r\n                <MDBInputSelect  id=\"age\" name=\"age\" getValue={this.handleChangeAge} min={13} max={99} value={this.state.age} className='mb-2' />\r\n                \r\n                <label className=\"form-label\">Your Gender</label>\r\n                <div className=\"radio-group\">\r\n                  <div className=\"radio\">\r\n                    <input id=\"radio-1\" name=\"radio\" type=\"radio\" value=\"Male\" onChange={this.handleChangeGender} checked={this.state.gender === 'Male'} />\r\n                    <label htmlFor=\"radio-1\" className=\"radio-label\">Male</label>\r\n                  </div>\r\n\r\n                  <div className=\"radio\">\r\n                    <input id=\"radio-2\" name=\"radio\" type=\"radio\" value=\"Female\" onChange={this.handleChangeGender} checked={this.state.gender === 'Female'} />\r\n                    <label  htmlFor=\"radio-2\" className=\"radio-label\">Female</label>\r\n                  </div>  \r\n                </div>\r\n\r\n                <div className=\"text-center pt-3 mb-3\">\r\n                  <MDBBtn \r\n                    type=\"submit\" \r\n                    className=\"btn-block z-depth-1a\" \r\n                    outline color=\"info\"\r\n                    >\r\n                      {this.state.logInLoading ? 'Authenticating...' : 'Start Chat'}\r\n                  </MDBBtn>\r\n                </div>\r\n\r\n              </MDBCardBody>\r\n              <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\r\n                \r\n              </MDBModalFooter>\r\n            </MDBCard>\r\n            </form>\r\n          </MDBCol>\r\n        </MDBRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GuestSign;","import React, { Component } from \"react\";\r\nimport InputGroup from \"react-bootstrap/lib/InputGroup\";\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport FormGroup from \"react-bootstrap/lib/FormGroup\";\r\nimport {\r\n  MessageList,\r\n  Navbar as NavbarComponent,\r\n  Avatar \r\n} from \"react-chat-elements\";\r\nimport { MDBBtn ,MDBIcon, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from 'mdbreact';\r\n\r\n// MDI icon import\r\nimport Icon from '@mdi/react'\r\nimport { mdiPhone, mdiVideoOutline, mdiDotsVertical } from '@mdi/js'\r\n\r\n// Emoji icon module\r\nimport { Picker } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\n// Font Selector module- draft.js\r\nimport { EditorState, convertToRaw, ContentState, getDefaultKeyBinding, KeyBindingUtil } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport { SketchPicker } from 'react-color';\r\nimport { toggleCustomInlineStyle } from 'draftjs-utils';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport { RESTAPIUrl } from '../config/config';\r\n/**\r\n *\r\n * ChatBox Component\r\n *\r\n * displays all the messages from chat history.\r\n * renders message text box for input.\r\n */\r\n\r\n\r\nexport default class ChatBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showEmojiPicker: false,\r\n      toolbar_show : false,\r\n      showColorPicker: false,\r\n      pickerColor: 'RGB(0,0,0)',\r\n      messageText: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    }\r\n\r\n    this.onAttachFile = this.onAttachFile.bind(this);\r\n    this.setDomEditorRef = ref => this.domEditor = ref;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    // this.domEditor.focusEditor();\r\n  }\r\n\r\n  onSendClicked() {\r\n    // if (!this.state.messageText) {\r\n    //   return;\r\n    // }\r\n    // this.props.onSendClicked(this.state.messageText);\r\n    // this.setState({ messageText: \"\" });\r\n    this.props.onSendClicked(draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())));\r\n    this.setState({editorState:EditorState.createEmpty()});\r\n    this.domEditor.focusEditor();\r\n  }\r\n  \r\n  onMessageInputChange(e) {\r\n    this.setState({ messageText: e.target.value });\r\n  }\r\n  /**\r\n   *\r\n   * @param {KeyboardEvent} e\r\n   *\r\n   * listen for enter pressed and sends the message.\r\n   */\r\n  onMessageKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.onSendClicked();\r\n    }\r\n  }\r\n\r\n  toggleEmojiPicker() {\r\n    this.setState({\r\n      showEmojiPicker: !this.state.showEmojiPicker,\r\n    });\r\n  }\r\n  \r\n  addEmoji(emoji) {\r\n    // if(this.state.messageText) {\r\n    //   var { messageText } = this.state;\r\n    // } else {\r\n    //   var messageText = '';\r\n    // }\r\n    // const text = `${messageText}${emoji.native}`;\r\n  \r\n    // this.setState({\r\n    //   messageText: text,\r\n    // });\r\n    // const selectEmoji = document.querySelector('[title=' + emoji.id +']');\r\n\r\n    const { editorState } = this.state;\r\n    const convertHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    const subHtml = convertHtml.substring(0,(convertHtml.length-5));\r\n    // const totalHtml = `${subHtml}${emoji.native}</p>`;\r\n    const totalHtml = `${subHtml} :${emoji.id}: </p>`;\r\n    \r\n    const blocksFromHtml = htmlToDraft(totalHtml);\r\n    const { contentBlocks, entityMap } = blocksFromHtml;\r\n    const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n    const editorStateChange = EditorState.createWithContent(contentState);\r\n    this.setState({editorState: editorStateChange});\r\n  }\r\n\r\n  closeEmojiPicker() {\r\n    this.setState({showEmojiPicker: false});\r\n  }\r\n\r\n  onEditorStateChange =  (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  // onEditorChange() {\r\n  //   this.props.onTyping();\r\n  // }\r\n\r\n  toggle_toolbar() {   \r\n    this.setState({toolbar_show: !this.state.toolbar_show});\r\n  }\r\n\r\n  keyBindingFunction(event) {\r\n\r\n    // Call onTyping function to let contact user typing status\r\n    this.props.onTyping();\r\n    if (KeyBindingUtil.hasCommandModifier(event) && event.ctrlKey && event.key === 'Enter') {\r\n      return getDefaultKeyBinding(event);\r\n    }\r\n  \r\n    if (event.key === 'Enter') {\r\n      this.onSendClicked();\r\n      return;\r\n    }\r\n    return getDefaultKeyBinding(event);\r\n  }\r\n\r\n  findTargetUser() {\r\n    this.props.findTargetUser();\r\n  }\r\n\r\n  onAttachFile(e) {\r\n    e.preventDefault();\r\n\r\n    // this.props.onAttachFile();\r\n    const data = new FormData();\r\n    data.append('attachFile', this.attachFile.files[0]);\r\n    fetch(`${RESTAPIUrl}/api/attach-file`, {\r\n      method: 'POST',\r\n      body: data,\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.status) {\r\n        const { editorState } = this.state;\r\n        const convertHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n        var subHtml = '';\r\n        console.log(\"this is convert html\",convertHtml);\r\n        console.log(\"last index charactor\", convertHtml.substring(convertHtml.length-5));\r\n        // if(convertHtml.substring(convertHtml.length-5) == '</p>')\r\n        //   subHtml = convertHtml.substring(0,(convertHtml.length-5));\r\n        // else \r\n          subHtml = convertHtml.substring(0,(convertHtml.length));\r\n        console.log(\"Index and subhtml\", subHtml, convertHtml.length);\r\n        const fileContainer = `<img src=\"${RESTAPIUrl}/public/uploads/${json.fileName}\" alt=\"${RESTAPIUrl}/public/uploads/${json.fileName}\">`;\r\n        const totalHtml = `${subHtml}${fileContainer}`;\r\n\r\n        const blocksFromHtml = htmlToDraft(totalHtml);\r\n        const { contentBlocks, entityMap } = blocksFromHtml;\r\n        const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n        const editorStateChange = EditorState.createWithContent(contentState);\r\n        this.setState({editorState: editorStateChange});\r\n\r\n        console.log('this is total html',totalHtml);\r\n        // Focus editor box after file select.\r\n        this.domEditor.focusEditor();\r\n\r\n      }\r\n    })\r\n  }\r\n  image_thumbs() {\r\n    console.log(\"image thumbs start\");\r\n  }\r\n\r\n  toggleColorPicker() {\r\n    this.setState({showColorPicker: !this.state.showColorPicker})\r\n  }\r\n  hideColorPicker() {\r\n    this.setState({showColorPicker: false});\r\n  }\r\n\r\n  onApplyColorPicker() {\r\n    // const newState = toggleCustomInlineStyle(this.state.editorState, 'color', rgbColor);\r\n    // this.setState({\r\n    //   editorState: newState, \r\n    //   pickerColor: color.hex\r\n    // });\r\n\r\n    this.domEditor.focusEditor();\r\n    setTimeout(\r\n      function() {\r\n        const newState = toggleCustomInlineStyle(this.state.editorState, 'color', this.state.pickerColor);\r\n        this.setState({\r\n          editorState: newState,\r\n          showColorPicker: false\r\n        });\r\n      }\r\n      .bind(this),\r\n      500\r\n    );\r\n  }\r\n  handleChangeComplete = (color) => {\r\n    const rgbColor=`RGB(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b})`;\r\n      this.setState({pickerColor: rgbColor});\r\n  }\r\n\r\n  callWithVideo (video) {\r\n    const config = { audio: true, video };\r\n    // return () => this.props.targetUser.id && this.props.startCall(true, this.props.targetUser.id, config);\r\n    this.props.startCall(true, this.props.targetUser.id, config);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>        \r\n          <div>\r\n            <NavbarComponent\r\n              left={\r\n                <div>\r\n                  <Avatar\r\n                    src={`${RESTAPIUrl}/public/profile/${this.props.signedInUser.profile_image}?${this.props.imageHash}`}\r\n                    alt={\"logo\"}\r\n                    size=\"large\"\r\n                    type=\"circle flexible\"\r\n                  />\r\n                  <div className=\"user-info\">\r\n                    <p className=\"navBarText user-name\">{this.props.signedInUser.userName}</p>\r\n                    <p className=\"navBarText user-title\">{this.props.signedInUser.gender}   {this.props.signedInUser.age} {this.props.signedInUser.location}</p>\r\n                  </div>\r\n                </div>\r\n              }\r\n              center={\r\n                <div>\r\n                  <MDBBtn \r\n                    className=\"action-btn next-user\" \r\n                    color=\"primary\"\r\n                    onClick={this.findTargetUser.bind(this)}\r\n                  >\r\n                    <img alt=\"Arrow, person, profile, right, user icon\" className=\"n3VNCb\" src={`${RESTAPIUrl}/public/find-user.webp`} />\r\n                  </MDBBtn>\r\n                </div>\r\n                \r\n                \r\n              }\r\n              right={\r\n                <div>\r\n                  <div className=\"navbar-right\">     \r\n                    <MDBBtn \r\n                      className=\"action-btn phone\" \r\n                      color=\"primary\"\r\n                      onClick={this.callWithVideo.bind(this, false)}\r\n                      disabled={typeof this.props.targetUser.id == 'undefined' ? true : false }\r\n                    >\r\n                      <Icon path={mdiPhone}\r\n                        size={1}\r\n                        horizontal\r\n                        vertical\r\n                        rotate={180}\r\n                      />\r\n                    </MDBBtn>\r\n                    \r\n                    <MDBBtn \r\n                      className=\"action-btn video\" \r\n                      color=\"primary\"\r\n                      onClick={this.callWithVideo.bind(this, true)}\r\n                      disabled={typeof this.props.targetUser.id == 'undefined' ? true : false }\r\n                    >\r\n                      <Icon path={mdiVideoOutline}\r\n                        size={1}\r\n                        horizontal\r\n                        vertical\r\n                        rotate={180}\r\n                      />\r\n                    </MDBBtn>\r\n                    \r\n                    <MDBDropdown>\r\n                      <MDBDropdownToggle caret color=\"primary\" className=\"action-btn\">\r\n                        <Icon path={mdiDotsVertical}\r\n                          size={1}\r\n                          horizontal\r\n                          vertical\r\n                        />\r\n                      </MDBDropdownToggle>\r\n                      <MDBDropdownMenu basic>\r\n                        <MDBDropdownItem\r\n                          onClick={()=> {this.props.onProfileModalShow(true)}}\r\n                        >\r\n                          Your Profile\r\n                        </MDBDropdownItem>\r\n                        <MDBDropdownItem\r\n                          onClick={()=> {this.props.onSearchSettingModalShow(true)}}\r\n                        >\r\n                          Search Setting\r\n                        </MDBDropdownItem>\r\n\r\n                        <MDBDropdownItem\r\n                          onClick={()=> {this.props.onReportModalShow(true)}}\r\n                          disabled={typeof this.props.targetUser.id == 'undefined' ? true : false }\r\n                        >\r\n                          Report\r\n                        </MDBDropdownItem>\r\n                        \r\n                        \r\n                        <MDBDropdownItem divider />\r\n                        \r\n                        <MDBDropdownItem\r\n                          onClick={this.props.logOut}\r\n                        >\r\n                          Log Out\r\n                        </MDBDropdownItem> \r\n\r\n                      </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                    \r\n                  </div>\r\n                </div>\r\n              }\r\n            />\r\n            {this.props.targetUser.id ? (\r\n              <div> \r\n                <MessageList\r\n                  className=\"message-list\"\r\n                  lockable={true}\r\n                  toBottomHeight={\"300\"}\r\n                  dataSource={this.props.targetUser.messages}\r\n                  downButton={true}\r\n                />\r\n                <FormGroup className=\"send-message-form\">\r\n                  <Row style={{width:\"100%\", position:\"relative\"}}>\r\n                      {/* <button\r\n                        type=\"button\"\r\n                        className=\"toggle-emoji\"\r\n                        onClick={this.toggleEmojiPicker.bind(this)}\r\n                      >\r\n                        <i class=\"far fa-smile\"></i>\r\n                      </button> */}\r\n                      <i \r\n                        className=\"toggle-emoji far fa-smile toggle-icon\"\r\n                        onClick={this.toggleEmojiPicker.bind(this)} \r\n                      ></i>\r\n                      {/* <button \r\n                        onClick={this.toggle_toolbar.bind(this)}\r\n                        className=\"font-selector\"\r\n                      >\r\n                        <MDBIcon icon=\"font\" className=\"mr-1\" size=\"lg\" />\r\n                      </button> */}\r\n                      <MDBIcon \r\n                        icon=\"palette\" \r\n                        size=\"lg\"\r\n                        onClick={this.toggle_toolbar.bind(this)}\r\n                        className=\"font-selector mr-1 toggle-icon\"\r\n                      />\r\n                      \r\n                      <Editor\r\n                        ref={this.setDomEditorRef}\r\n                        editorState={this.state.editorState}\r\n                        placeholder=\"Type a message...\"\r\n                        wrapperClassName=\"demo-wrapper\"\r\n                        toolbarClassName={this.state.toolbar_show ? '' : 'toggle-toolbar'}\r\n                        editorClassName=\"demo-editor\"\r\n                        keyBindingFn={this.keyBindingFunction.bind(this)}\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                        // onChange={this.onEditorChange.bind(this)}\r\n                        toolbar={{\r\n                          options: ['inline', 'colorPicker', 'fontSize', 'fontFamily',],\r\n                          inline: { \r\n                              inDropdown: false, \r\n                              options: ['bold', 'italic', 'underline'], \r\n                          },\r\n                          image: { uploadEnabled: true},\r\n                          inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n                          fontSize: {\r\n                            options: [8, 9, 10, 11, 12, 14, 16, 18, 20]\r\n                          },\r\n                        }}\r\n                      />\r\n                      \r\n                      {this.state.showColorPicker ? \r\n                      <div>\r\n                        <SketchPicker \r\n                          color={ this.state.pickerColor }\r\n                          onChangeComplete={ this.handleChangeComplete.bind(this) }\r\n                        />\r\n                        <button className=\"color-confirm\" onClick={this.onApplyColorPicker.bind(this)}>Apply</button>\r\n                        <button className=\"color-cancel\" onClick={this.hideColorPicker.bind(this)}>Cancel</button>\r\n                        <div className=\"color-picker-hide\" onClick={this.hideColorPicker.bind(this)}></div>\r\n                      </div>\r\n                      :\r\n                      null}\r\n                      \r\n\r\n                      {this.state.toolbar_show ? \r\n                        <button className=\"color-picker-toggle\" onClick={this.toggleColorPicker.bind(this)}>\r\n                          <i className=\"fas fa-eye-dropper\"></i>\r\n                        </button>\r\n                      : null}\r\n                      \r\n                      \r\n\r\n                      \r\n                      <label htmlFor=\"attachFile\" className=\"attach-file\">\r\n                        <i \r\n                          className=\"fas fa-paperclip toggle-icon \"                   \r\n                        ></i>\r\n                      </label>\r\n                      \r\n                      <input \r\n                          ref={(ref) => { this.attachFile = ref; }} \r\n                          onChange={this.onAttachFile.bind(this)} \r\n                          type=\"file\"\r\n                          id=\"attachFile\" \r\n                          accept=\".png, .jpg, .jpeg\"\r\n                      />\r\n\r\n                      <InputGroup.Button>\r\n                        <div\r\n                          disabled={!this.state.messageText}\r\n                          className=\"sendButton\"\r\n                          onClick={this.onSendClicked.bind(this)}\r\n                        >\r\n                          {/* <FontAwesomeIcon icon={faPaperPlane} color=\"white\" /> */}\r\n                          {/* <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"paper-plane\" class=\"svg-inline--fa fa-paper-plane fa-w-16 \" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" color=\"white\"><path fill=\"currentColor\" d=\"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z\"></path></svg> */}\r\n                          <svg className=\"jss4\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\"><path fill=\"#fff\" d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"></path><path fill=\"none\" d=\"M0 0h24v24H0z\"></path></svg>\r\n                        </div>\r\n                      </InputGroup.Button>\r\n\r\n                  </Row>\r\n                </FormGroup>\r\n              </div>\r\n            ) : (\r\n              <div className=\"waiting-container\">\r\n                <div className=\"title-box\">\r\n                  <h2>Welcome, {this.props.signedInUser.userName}!</h2><br></br>\r\n                </div>\r\n                <div className=\"body-box\">\r\n                  <p \r\n                    className=\"select-friend\"\r\n                    onClick={this.findTargetUser.bind(this)}\r\n                  >\r\n                      Select a friend to start a chat.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        \r\n          <Picker \r\n            style={this.state.showEmojiPicker? { position: 'absolute', bottom: '90px', right: '10px', opacity: '1' } : { position: 'absolute', bottom: '90px', right: '10px', opacity: '0', zIndex:'-3' }} \r\n            onSelect={this.addEmoji.bind(this)} \r\n            emojiTooltip={true}\r\n          />\r\n\r\n        { this.state.showEmojiPicker ? (\r\n          <div>            \r\n            <div className=\"emoji-back\" onClick={this.closeEmojiPicker.bind(this)}></div>\r\n          </div>\r\n        ): null }       \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./OnTyping.css\";\r\n\r\nconst OnTyping = () => {\r\n    return (\r\n        <div className=\"message-text message-text-left on-typing\">\r\n            <div id=\"circleG\">\r\n                <div id=\"circleG_1\" className=\"circleG\"></div>\r\n                <div id=\"circleG_2\" className=\"circleG\"></div>\r\n                <div id=\"circleG_3\" className=\"circleG\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OnTyping;","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardBody,\r\n    MDBInput,\r\n    MDBInputSelect,\r\n    MDBCloseIcon\r\n  } from 'mdbreact';\r\n\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport { setInStorage } from \"../../utils/storage\";\r\nimport { countries } from \"../../config/country\";\r\n\r\nimport \"./ProfileBox.css\";\r\n\r\n\r\n\r\n\r\nexport default class ChatBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            imageURL: `${RESTAPIUrl}/public/profile/${this.props.profileInfo.profile_image}`,\r\n            userName: this.props.profileInfo.userName,\r\n            age: this.props.profileInfo.age,\r\n            location: this.props.profileInfo.location,\r\n            gender: this.props.profileInfo.gender,\r\n            imageHash: this.props.imageHash\r\n        }\r\n\r\n        this.handleUploadImage = this.handleUploadImage.bind(this);\r\n        this.handleChangeProfile = this.handleChangeProfile.bind(this);\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.setState({\r\n            imageURL: `${RESTAPIUrl}/public/profile/${this.props.profileInfo.profile_image}`\r\n        });\r\n    }\r\n    handleUploadImage(ev) {\r\n        ev.preventDefault();\r\n    \r\n        const data = new FormData();\r\n        data.append('file', this.uploadInput.files[0]);\r\n        data.append('fileName', this.fileName.value);\r\n        console.log(\"upload file name\", this.fileName.value);\r\n        \r\n        fetch(`${RESTAPIUrl}/api/profile/image`, {\r\n          method: 'POST',\r\n          body: data,\r\n        })\r\n        .then(res =>res.json())\r\n        .then(json => {\r\n            console.log('this is json object', json);\r\n            if(json.status) {\r\n                setInStorage('guest_signin', {token:json.token});\r\n                this.props.updateProfile();\r\n                this.setState({imageHash: Date.now()});\r\n                // let decoded_token = jwt_decode(json.token);\r\n                // let signedInUser = decoded_token.user;\r\n                // this.props.onChangeProfile(signedInUser);       \r\n            } else {\r\n                alert(\"Server Error\");\r\n            }\r\n        })\r\n        \r\n        \r\n        // .then((response) => {\r\n        //   response.json().then((body) => {\r\n        //     this.setState({ imageURL: `http://localhost:5000/${body.file}` });\r\n        //   });\r\n        // });\r\n    }\r\n\r\n    handleChangeProfile(e) {\r\n        e.preventDefault();\r\n        console.log(\"profile update setting\", this.props.profileInfo);\r\n        const { userName, location, age, gender } = this.state;\r\n        const { _id } = this.props.profileInfo;\r\n        this.setState ({ \r\n            loginLoading: true, \r\n        });\r\n\r\n        fetch(RESTAPIUrl + '/api/profile/update', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            _id,\r\n            userName,\r\n            location,\r\n            age,\r\n            gender\r\n        }),\r\n        }).then(res =>res.json())\r\n        .then(json => {\r\n            console.log('this is json object', json);\r\n            if(json.status) {\r\n                setInStorage('guest_signin', {token:json.token});\r\n                this.props.updateProfile();\r\n                this.props.onProfileModalShow(false);\r\n            } else {\r\n                alert(\"Server Error\");\r\n            }\r\n        });\r\n    }\r\n\r\n    onProfileModalShow() {\r\n        this.props.onProfileModalShow(false);\r\n    }\r\n    \r\n    handleChangeName(e) {\r\n        this.setState({ userName: e.target.value });\r\n    }\r\n\r\n    handleChangeLocation(e) {\r\n        this.setState({ location: e.target.value });\r\n    }\r\n\r\n    handleChangeAge(value) {\r\n        this.setState({ age: value });\r\n    }\r\n\r\n    handleChangeGender(e) {\r\n        this.setState({ gender: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBRow className='mt-5' className={this.props.profileContainer}>\r\n                    <MDBCol>\r\n                        <MDBCloseIcon onClick={this.onProfileModalShow.bind(this)}/>\r\n                        <MDBJumbotron className='text-center'>                          \r\n                            \r\n                            <MDBCardBody>\r\n\r\n                                <form onSubmit={this.handleChangeProfile}>\r\n                                    <div className=\"profile-image\">\r\n                                        <img\r\n                                            src={`${this.state.imageURL}?${this.state.imageHash}`}\r\n                                            className='img-fluid'\r\n                                            alt=\"profile-img\"\r\n                                        />\r\n                                        <div className=\"upload-button\">\r\n                                            <label htmlFor=\"imageUpload\"></label>\r\n                                            <input \r\n                                                ref={(ref) => { this.uploadInput = ref; }} \r\n                                                onChange={this.handleUploadImage.bind(this)} \r\n                                                type=\"file\"\r\n                                                id=\"imageUpload\" \r\n                                                accept=\".png, .jpg, .jpeg\"\r\n                                            />\r\n                                            <input ref={(ref) => { this.fileName = ref; }}\r\n                                                value={this.props.profileInfo.profile_image}\r\n                                                type=\"hidden\"\r\n                                            />\r\n                                        </div>\r\n                                        <h4 className=\"userName\">{this.props.profileInfo.userName}</h4>\r\n                                        <h6 className=\"userInfo\">\r\n                                            {`${this.props.profileInfo.gender}  ${this.props.profileInfo.age}  ${this.props.profileInfo.location}`}\r\n                                        </h6>\r\n                                        <hr></hr>\r\n                                    </div>\r\n                                    <div>\r\n                    \r\n                                        <MDBInput \r\n                                            label=\"Your Name\" \r\n                                            ref={(ref) => { this.userName = ref; }}\r\n                                            group type=\"text\" \r\n                                            onChange={this.handleChangeName.bind(this)} \r\n                                            validate error=\"wrong\" \r\n                                            success=\"right\"\r\n                                            value={this.state.userName }\r\n                                            required\r\n                                            disabled\r\n                                        />\r\n                                        \r\n                                        <label className=\"form-label\" >Your Location</label>\r\n                                        <select \r\n                                            className=\"browser-default custom-select\" \r\n                                            id=\"location\" \r\n                                            name=\"location\" \r\n                                            value={this.state.location} \r\n                                            onChange={this.handleChangeLocation.bind(this)} \r\n                                        >\r\n                                            <option>Choose your location</option>\r\n                                            {\r\n                                                countries.map((object, i) => {\r\n                                                return <option value={object} key={i}>{object}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n\r\n                                        <label className=\"form-label\" >Your Age</label>\r\n                                        <MDBInputSelect  \r\n                                            id=\"age\" \r\n                                            name=\"age\" \r\n                                            getValue={this.handleChangeAge.bind(this)} \r\n                                            min={13} \r\n                                            max={99} \r\n                                            value={this.state.age } \r\n                                            className='mb-2' \r\n                                        />\r\n                                        \r\n                                        <label className=\"form-label\">Your Gender</label>\r\n                                        <div className=\"radio-group\">\r\n                                            <div className=\"radio\">\r\n                                                <input id=\"radio-1\" name=\"radio\" type=\"radio\" value=\"Male\" onChange={this.handleChangeGender.bind(this)} checked={this.state.gender === 'Male'} disabled/>\r\n                                                <label htmlFor=\"radio-1\" className=\"radio-label\">Male</label>\r\n                                            </div>\r\n\r\n                                            <div className=\"radio\">\r\n                                                <input id=\"radio-2\" name=\"radio\" type=\"radio\" value=\"Female\" onChange={this.handleChangeGender.bind(this)} checked={this.state.gender === 'Female'} disabled/>\r\n                                                <label  htmlFor=\"radio-2\" className=\"radio-label\">Female</label>\r\n                                            </div>  \r\n                                        </div>\r\n\r\n                                        <div className=\"text-center pt-3 mb-3\">\r\n                                        <MDBBtn \r\n                                            type=\"submit\"\r\n                                            color=\"primary\"\r\n                                            size=\"sm\"\r\n                                            >\r\n                                            Apply\r\n                                        </MDBBtn>\r\n\r\n                                        <MDBBtn color=\"cyan\" size=\"sm\"\r\n                                            onClick={this.onProfileModalShow.bind(this)}\r\n                                        >\r\n                                            Close\r\n                                        </MDBBtn>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </MDBCardBody>\r\n                        </MDBJumbotron>\r\n                    </MDBCol>\r\n                    </MDBRow>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport \"./FullScreenImage.css\";\r\n\r\nexport default class FullScreenImage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let imageUrl = this.props.imageUrl;\r\n        let downloadPath = imageUrl.split(\"public/\")[1];\r\n        this.state = {\r\n            downloadPath: downloadPath\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"this is fullscreen image's path\", this.state);\r\n    }\r\n    onShowImageFullScreen() {\r\n        this.props.onShowImageFullScreen();\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                <div className=\"full-image\">\r\n                    <span \r\n                        onClick={this.onShowImageFullScreen.bind(this)}\r\n                        className=\"close-btn\"    \r\n                    >\r\n                        X\r\n                    </span>\r\n                    <a href={this.state.downloadPath} download=\"image-file\" className=\"download-btn\">\r\n                        <i class=\"fa fa-download\"></i>\r\n                    </a>\r\n                    <img src={this.props.imageUrl} alt=\"\"></img>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardTitle,\r\n    MDBCardBody,\r\n    MDBCloseIcon\r\n} from 'mdbreact';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport { countries } from \"../../config/country\";\r\nimport \"./SearchSettingBox.css\";\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nexport default class SearchSettingBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const temp = this.props.searchSetting\r\n        this.state = {\r\n            searchSetting: temp,\r\n        }\r\n\r\n        this.handleChangeGender = this.handleChangeGender.bind(this);\r\n    }\r\n\r\n    handleChangeSearchSetting(e) {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    handleChangeGender(e) {\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.gender = e.target.value;\r\n        this.setState({ searchSetting });\r\n    }\r\n\r\n    handleChangeLocation(e) {\r\n        console.log(e.target.value)\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.location = e.target.value;\r\n        this.setState({ searchSetting });\r\n    }\r\n\r\n    handleChangeAge(value) {\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.ageMin = value[0];\r\n        searchSetting.ageMax = value[1];\r\n        this.setState({ searchSetting });\r\n\r\n        // this.setState({\r\n        //     ageMin: value[0],\r\n        //     ageMax: value[1],\r\n        // })\r\n    }\r\n    onSearchSettingModalShow() {\r\n        this.props.onSearchSettingModalShow(false);\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <MDBRow className = 'mt-5' className = { this.props.searchContainer } >\r\n                    <MDBCol>\r\n                        <MDBCloseIcon onClick = { this.onSearchSettingModalShow.bind(this) }/>\r\n\r\n                        <MDBJumbotron className = 'text-center' >\r\n                            <MDBCardTitle className = \"card-title h4 pb-2\" >\r\n                                <strong > Search Filter Setting </strong> \r\n                            </MDBCardTitle > \r\n                            \r\n                            <MDBCardBody >\r\n                                <form onSubmit = { this.handleChangeSearchSetting.bind(this) } >\r\n                                    <div>\r\n                                        <div className = \"form-group\" >\r\n                                            <label className = \"form-label\" > Location </label> \r\n                                            <select className = \"browser-default custom-select\" id = \"location1\" name = \"location1\" value = { this.props.searchSetting.location } onChange = { this.handleChangeLocation.bind(this) } >\r\n                                                <option value = \"\"> All </option> \r\n                                                {countries.map((object, i) => \r\n                                                    {\r\n                                                        return <option value = { object } key = { i } > { object } </option>\r\n                                                    })\r\n                                                } \r\n                                            </select> \r\n                                        </div >\r\n\r\n                                        <div className = \"form-group\" >\r\n                                            <label className = \"form-label\"> Age Range </label> \r\n                                            <Range min = { 13 } max = { 99 } defaultValue = { [this.props.searchSetting.ageMin, this.props.searchSetting.ageMax]} tipFormatter = { value => `${value}` } onChange = { this.handleChangeAge.bind(this) }/> \r\n                                        </div >\r\n\r\n                                        <div className = \"form-group\" >\r\n                                            <label className = \"form-label\" > Gender </label> \r\n                                            <div className = \"radio-group\" >\r\n                                                <div className = \"radio\" >\r\n                                                    <input id = \"radio1\"\r\n                                                        name = \"radio1\"\r\n                                                        type = \"radio\"\r\n                                                        value = \"\"\r\n                                                        onChange = { this.handleChangeGender.bind(this) }\r\n                                                        checked = { this.state.searchSetting.gender === '' }\r\n                                                    /> \r\n                                            \r\n                                                    <label htmlFor = \"radio1\" className = \"radio-label\" > All </label> \r\n                                                </div>\r\n\r\n                                                <div className = \"radio\" >\r\n                                                    <input id = \"radio2\"\r\n                                                        name = \"radio1\"\r\n                                                        type = \"radio\"\r\n                                                        value = \"Male\"\r\n                                                        onChange = { this.handleChangeGender.bind(this) }\r\n                                                        checked = { this.state.searchSetting.gender === 'Male' }\r\n                                                    /> \r\n                                                    <label htmlFor = \"radio2\" className = \"radio-label\" > Male </label> \r\n                                                </div>\r\n\r\n                                                <div className = \"radio\">\r\n                                                    <input id = \"radio3\" name = \"radio1\"\r\n                                                        type = \"radio\"\r\n                                                        value = \"Female\"\r\n                                                        onChange = { this.handleChangeGender.bind(this) }\r\n                                                        checked = { this.state.searchSetting.gender === 'Female' }\r\n                                                    /> \r\n                                                    <label htmlFor = \"radio3\" className = \"radio-label\" > Female </label> \r\n                                                </div>\r\n                                            </div> \r\n                                        </div>\r\n\r\n                                        <div className = \"text-center pt-3 mb-3\" >\r\n\r\n                                            <MDBBtn \r\n                                                color = \"cyan\" \r\n                                                size = \"sm\"\r\n                                                onClick = { this.onSearchSettingModalShow.bind(this) } \r\n                                            >\r\n                                                Close \r\n                                            </MDBBtn> \r\n                                        </div>\r\n                                    </div> \r\n                                </form >\r\n\r\n                            </MDBCardBody> \r\n                        </MDBJumbotron> \r\n                    </MDBCol> \r\n                </MDBRow > \r\n            </div>\r\n    );\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardTitle,\r\n    MDBCardBody,\r\n    MDBCloseIcon,\r\n} from 'mdbreact';\r\nimport {\r\n    NotificationManager\r\n} from \"react-notifications\";\r\n\r\nimport { RESTAPIUrl } from \"../../config/config\";\r\nimport \"./ReportBox.css\";\r\n\r\nexport default class ReportBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reportList: ['Spam', 'Inappropriate or Vulgar Content', 'Illegal Content', 'Abusive behaviour', 'Other'],\r\n            reportReason: '',\r\n            inputTextActive: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleReport(e) {\r\n        e.preventDefault();\r\n        console.log(\"this is report setting state\", this.state);\r\n        console.log(\"type of target id\", typeof this.props.targetUser._id);\r\n        if( typeof this.props.targetUser._id == 'undefined' ) {            \r\n            NotificationManager.error(\r\n                \"Please select target user\"\r\n            );\r\n            return false;\r\n        }\r\n        fetch(RESTAPIUrl + '/api/report', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                reportUser: this.props.signedInUser,\r\n                targetUser: this.props.targetUser,\r\n                reason: this.state.reportReason\r\n            }),\r\n        }).then(res =>res.json())\r\n        .then(json => {\r\n            if(json.status) {\r\n                NotificationManager.success(\r\n                    json.message\r\n                );\r\n            } else {\r\n                NotificationManager.error(\r\n                    json.message\r\n                );\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleChangeReportSetting(e) {\r\n        if(e.target.value !== \"Other\") {\r\n            this.setState({\r\n                reportReason: e.target.value,\r\n                inputTextActive: false,\r\n            })\r\n        } else {\r\n            this.setState({inputTextActive: true});\r\n        }\r\n    }\r\n\r\n    handleOtherReason(e) {\r\n        this.setState({reportReason: e.target.value});\r\n    }\r\n\r\n    onReportModalShow() {\r\n        this.props.onReportModalShow(false);\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <MDBRow className = 'mt-5' className = { this.props.reportContainer } >\r\n                    <MDBCol>\r\n                        <MDBCloseIcon onClick = { this.onReportModalShow.bind(this) }/>\r\n\r\n                        <MDBJumbotron className = 'text-center' >\r\n                            <MDBCardTitle className = \"card-title h4 pb-2\" >\r\n                                <strong > Report User </strong> \r\n                            </MDBCardTitle > \r\n                            <hr></hr>\r\n                            <MDBCardBody >\r\n                                <form onSubmit = { this.handleReport.bind(this) } >\r\n                                    <div>\r\n                                        <div className = \"form-group\" >\r\n                                            {this.state.reportList.map((object, i) => \r\n                                                {\r\n                                                    return (\r\n                                                        <div className = \"radio\" key={`${object}-container`}>\r\n                                                            <input \r\n                                                                id = {`report-radio${i}`}\r\n                                                                name = 'report-radio'\r\n                                                                type = \"radio\"\r\n                                                                value = {object}\r\n                                                                key = {object}\r\n                                                                onChange = { this.handleChangeReportSetting.bind(this) }\r\n                                                            /> \r\n                                                    \r\n                                                            <label htmlFor = {`report-radio${i}`} className = \"radio-label\" > {object} </label> \r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            {this.state.inputTextActive?\r\n                                                <div className=\"form-group report-reason\">\r\n                                                    <textarea\r\n                                                        className=\"form-control\"\r\n                                                        id=\"exampleFormControlTextarea1\"\r\n                                                        rows=\"3\"\r\n                                                        onChange={ this.handleOtherReason.bind(this) }\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            \r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className = \"text-center pt-3 mb-3\" >\r\n                                            <MDBBtn\r\n                                                type=\"submit\"\r\n                                                color = \"cyan\" \r\n                                                size = \"sm\"\r\n                                            >\r\n                                                Report\r\n                                            </MDBBtn> \r\n                                            <MDBBtn \r\n                                                color = \"cyan\" \r\n                                                size = \"sm\"\r\n                                                onClick = { this.onReportModalShow.bind(this) } \r\n                                            >\r\n                                                Close \r\n                                            </MDBBtn> \r\n                                        </div>\r\n                                    </div> \r\n                                </form >\r\n\r\n                            </MDBCardBody> \r\n                        </MDBJumbotron> \r\n                    </MDBCol> \r\n                </MDBRow > \r\n            </div>\r\n    );\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport Glyphicon from \"react-bootstrap/lib/Glyphicon\";\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\n\r\n/**\r\n *\r\n * Renders a Error modal if app encounter any error.\r\n */\r\n\r\nexport default class ErrorModal extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show}>\r\n        <Modal.Header>\r\n          <Modal.Title>Error</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <h1 className=\"text-center\">\r\n            <Glyphicon glyph=\"alert\" />\r\n          </h1>\r\n          <h5 className=\"text-center\">{this.props.errorMessage}</h5>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Glyphicon from \"react-bootstrap/lib/Glyphicon\";\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\n\r\n/**\r\n *\r\n * Renders a loader modal.\r\n */\r\n\r\nexport default class LoadingModal extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show}>\r\n        <Modal.Body>\r\n          <h1 className=\"text-center\">\r\n            <Glyphicon glyph=\"refresh\" />\r\n          </h1>\r\n          <h5 className=\"text-center\">Loading...</h5>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import io from 'socket.io-client';\r\nimport { RESTAPIUrl } from \"../../config/config\"\r\n\r\nconst socket = io.connect(`${RESTAPIUrl}`);\r\n\r\nexport default socket;","import _ from 'lodash';\r\n\r\nclass Emitter {\r\n  constructor() {\r\n    this.events = {};\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    if (this.events[event]) {\r\n      this.events[event].forEach((fn) => fn(...args));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  on(event, fn) {\r\n    if (this.events[event]) this.events[event].push(fn);\r\n    else this.events[event] = [fn];\r\n    return this;\r\n  }\r\n\r\n  off(event, fn) {\r\n    if (event && _.isFunction(fn)) {\r\n      const listeners = this.events[event];\r\n      const index = listeners.findIndex((_fn) => _fn === fn);\r\n      listeners.splice(index, 1);\r\n    } else this.events[event] = [];\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Emitter;\r\n","import _ from 'lodash';\r\nimport Emitter from './Emitter';\r\n\r\n/**\r\n * Manage all media devices\r\n */\r\nclass MediaDevice extends Emitter {\r\n  /**\r\n   * Start media devices and send stream\r\n   */\r\n  start() {\r\n    const constraints = {\r\n      video: {\r\n        facingMode: 'user',\r\n        height: { min: 360, ideal: 720, max: 1080 }\r\n      },\r\n      audio: true\r\n    };\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia(constraints)\r\n      .then((stream) => {\r\n        this.stream = stream;\r\n        this.emit('stream', stream);\r\n      })\r\n      .catch((err) => {\r\n        if (err instanceof DOMException) {\r\n          alert('Cannot open webcam and/or microphone');\r\n        } else {\r\n          console.log(err);\r\n        }\r\n      });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Turn on/off a device\r\n   * @param {String} type - Type of the device\r\n   * @param {Boolean} [on] - State of the device\r\n   */\r\n  toggle(type, on) {\r\n    const len = arguments.length;\r\n    if (this.stream) {\r\n      this.stream[`get${type}Tracks`]().forEach((track) => {\r\n        const state = len === 2 ? on : !track.enabled;\r\n        _.set(track, 'enabled', state);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Stop all media track of devices\r\n   */\r\n  stop() {\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach((track) => track.stop());\r\n    }\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default MediaDevice;\r\n","import MediaDevice from './MediaDevice';\r\nimport Emitter from './Emitter';\r\nimport socket from './socket';\r\n\r\n// const PC_CONFIG = { iceServers: [{ urls: ['stun:stun.l.google.com:19302'] }] };\r\nconst PC_CONFIG = {\r\n    iceServers: [{\r\n        url: 'turn:numb.viagenie.ca',\r\n        credential: 'nothingbutthebest',\r\n        username: 'bluesky410219@gmail.com'\r\n    }]\r\n};\r\n\r\nclass PeerConnection extends Emitter {\r\n    /**\r\n     * Create a PeerConnection.\r\n     * @param {String} friendID - ID of the friend you want to call.\r\n     */\r\n    constructor(friendID) {\r\n        super();\r\n        this.pc = new RTCPeerConnection(PC_CONFIG);\r\n        this.pc.onicecandidate = (event) => socket.emit('call', {\r\n            to: this.friendID,\r\n            candidate: event.candidate\r\n        });\r\n        this.pc.ontrack = (event) => this.emit('peerStream', event.streams[0]);\r\n\r\n        this.mediaDevice = new MediaDevice();\r\n        this.friendID = friendID;\r\n    }\r\n\r\n    /**\r\n     * Starting the call\r\n     * @param {Boolean} isCaller\r\n     * @param {Object} config - configuration for the call {audio: boolean, video: boolean}\r\n     */\r\n    start(isCaller, config) {\r\n        this.mediaDevice\r\n            .on('stream', (stream) => {\r\n                stream.getTracks().forEach((track) => {\r\n                    this.pc.addTrack(track, stream);\r\n                });\r\n                this.emit('localStream', stream);\r\n                if (isCaller) socket.emit('request', { to: this.friendID });\r\n                else this.createOffer();\r\n            })\r\n            .start(config);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Stop the call\r\n     * @param {Boolean} isStarter\r\n     */\r\n    stop(isStarter) {\r\n        if (isStarter) {\r\n            socket.emit('end', { to: this.friendID });\r\n        }\r\n        this.mediaDevice.stop();\r\n        this.pc.close();\r\n        this.pc = null;\r\n        this.off();\r\n        return this;\r\n    }\r\n\r\n    createOffer() {\r\n        this.pc.createOffer()\r\n            .then(this.getDescription.bind(this))\r\n            .catch((err) => console.log(err));\r\n        return this;\r\n    }\r\n\r\n    createAnswer() {\r\n        this.pc.createAnswer()\r\n            .then(this.getDescription.bind(this))\r\n            .catch((err) => console.log(err));\r\n        return this;\r\n    }\r\n\r\n    getDescription(desc) {\r\n        this.pc.setLocalDescription(desc);\r\n        socket.emit('call', { to: this.friendID, sdp: desc });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} sdp - Session description\r\n     */\r\n    setRemoteDescription(sdp) {\r\n        const rtcSdp = new RTCSessionDescription(sdp);\r\n        this.pc.setRemoteDescription(rtcSdp);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} candidate - ICE Candidate\r\n     */\r\n    addIceCandidate(candidate) {\r\n        if (candidate) {\r\n            const iceCandidate = new RTCIceCandidate(candidate);\r\n            this.pc.addIceCandidate(iceCandidate);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default PeerConnection;","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport \"./CallWindow.css\";\r\n\r\nconst getButtonClass = (icon, enabled) => classnames(`btn-action fa ${icon}`, { disable: !enabled });\r\n\r\nfunction CallWindow({ peerSrc, localSrc, config, mediaDevice, status, endCall }) {\r\n  const peerVideo = useRef(null);\r\n  const localVideo = useRef(null);\r\n  const [video, setVideo] = useState(config.video);\r\n  const [audio, setAudio] = useState(config.audio);\r\n\r\n  useEffect(() => {\r\n    if (peerVideo.current && peerSrc) peerVideo.current.srcObject = peerSrc;\r\n    if (localVideo.current && localSrc) localVideo.current.srcObject = localSrc;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (mediaDevice) {\r\n      mediaDevice.toggle('Video', video);\r\n      mediaDevice.toggle('Audio', audio);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\r\n  const toggleMediaDevice = (deviceType) => {\r\n    if (deviceType === 'video') {\r\n      setVideo(!video);\r\n      mediaDevice.toggle('Video');\r\n    }\r\n    if (deviceType === 'audio') {\r\n      setAudio(!audio);\r\n      mediaDevice.toggle('Audio');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classnames('call-window', status)}>\r\n      <div className=\"video-contact\">\r\n        <video id=\"peerVideo\" ref={peerVideo} autoPlay />\r\n      </div>\r\n\r\n      <div className=\"video-user\">\r\n        <video id=\"localVideo\" ref={localVideo} autoPlay muted />  \r\n      </div>      \r\n      \r\n      <div className=\"video-control\">\r\n        <button\r\n          key=\"btnVideo\"\r\n          type=\"button\"\r\n          className={getButtonClass('fa-video', video)}\r\n          onClick={() => toggleMediaDevice('video')}\r\n        />\r\n        <button\r\n          key=\"btnAudio\"\r\n          type=\"button\"\r\n          className={getButtonClass('fa-microphone', audio)}\r\n          onClick={() => toggleMediaDevice('audio')}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-action hangup fa fa-phone\"\r\n          onClick={() => endCall(true)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCallWindow.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  localSrc: PropTypes.object, // eslint-disable-line\r\n  peerSrc: PropTypes.object, // eslint-disable-line\r\n  config: PropTypes.shape({\r\n    audio: PropTypes.bool.isRequired,\r\n    video: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  mediaDevice: PropTypes.object, // eslint-disable-line\r\n  endCall: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CallWindow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport './CallModal.css';\r\n\r\n\r\nfunction CallModal({ status, callFrom, startCall, rejectCall, contactUser, userAvatar }) {\r\n  const acceptWithVideo = (video) => {\r\n    const config = { audio: true, video };\r\n    return () => startCall(false, callFrom, config);\r\n  };\r\n\r\n  return (\r\n    <div className={classnames('call-modal', status)}>\r\n      <div className=\"target-avatar\">\r\n        <img src={`${RESTAPIUrl}/public/profile/${userAvatar}`} alt=\"contact-user\"></img>\r\n      </div>\r\n      <p>\r\n        <span className=\"caller\">{`${contactUser}`}</span>\r\n      </p>\r\n      <span className=\"incoming\">Incoming call...</span>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action fa fa-video\"\r\n        onClick={acceptWithVideo(true)}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action fa fa-phone\"\r\n        onClick={acceptWithVideo(false)}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action hangup fa fa-phone\"\r\n        onClick={rejectCall}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nCallModal.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  callFrom: PropTypes.string.isRequired,\r\n  startCall: PropTypes.func.isRequired,\r\n  rejectCall: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CallModal;","import React, { Component } from \"react\";\r\nimport ChatBox from \"../../components/ChatBox\";\r\nimport OnTyping from \"../../components/OnTyping/OnTyping\";\r\nimport ProfileBox from \"../../components/ProfileBox/ProfileBox\";\r\nimport FullScreenImage from \"../../components/FullScreenImage/FullScreenImage\";\r\nimport SearchSettingBox from \"../../components/SearchSettingBox/SearchSettingBox\";\r\nimport ReportBox from \"../../components/ReportBox/ReportBox\";\r\nimport ErrorModal from \"../../components/ErrorModal\";\r\nimport LoadingModal from \"../../components/LoadingModal\";\r\nimport \"react-chat-elements/dist/main.css\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport axios from \"axios\";\r\nimport { getFromStorage } from '../../utils/storage';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport renderHtml from 'react-render-html';\r\nimport { RESTAPIUrl } from \"../../config/config\";\r\nimport \"./Chat.css\";\r\n/**\r\n * Fetches socket server URL from env\r\n */\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nimport _ from 'lodash';\r\nimport socket from './socket';\r\nimport PeerConnection from './PeerConnection';\r\n// import MainWindow from './MainWindow';\r\n// import CallWindow from './CallWindow';\r\n// import CallModal from './CallModal';\r\nimport CallWindow from '../../components/CallWindow/CallWindow';\r\nimport CallModal from '../../components/CallModal/CallModal';\r\n/**\r\n * App Component\r\n *\r\n * initiaites Socket connection and handle all cases like disconnected,\r\n * reconnected again so that user can send messages when he is back online\r\n *\r\n * handles Error scenarios if requests from Axios fails.\r\n *\r\n */\r\n\r\n//  Get the token information from local storage and get user's information using decode\r\nconst obj = getFromStorage('guest_signin');\r\nif(obj && obj.token) {\r\n    var decoded_token = jwt_decode(obj.token);\r\n    var signedInUser = decoded_token.user;\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  socket = null;\r\n  constructor() {\r\n    super();\r\n\r\n    const obj = getFromStorage('guest_signin');\r\n    if(obj && obj.token) {\r\n        var decoded_token = jwt_decode(obj.token);\r\n        var signedInUser = decoded_token.user;\r\n    }\r\n\r\n    this.state = {\r\n      signInModalShow: false,\r\n      users: [], // Avaiable users for signing-in\r\n      userChatData: '', // this contains users from which signed-in user can chat and its message data.\r\n      user: null, // Signed-In User\r\n      selectedUserIndex: 1,\r\n      profileModalShow: '',\r\n      searchModalShow: '',\r\n      reportModalShow: '',\r\n      error: false,\r\n      errorMessage: \"\",\r\n      targetUser: '',\r\n      blackUsersList: [signedInUser._id],\r\n      signedInUser: signedInUser,\r\n      searchSetting: {\r\n        location: '',\r\n        gender: '',\r\n        ageMin: 13,\r\n        ageMax: 99,\r\n      },\r\n      onTyping: false,\r\n      showImageFullScreen: false,\r\n      imageHash: Date.now(),\r\n\r\n      // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n      // clientId: '',\r\n      callWindow: '',\r\n      callModal: '',\r\n      callFrom: '',\r\n      localSrc: null,\r\n      peerSrc: null\r\n    \r\n    };\r\n\r\n\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    this.pc = {};\r\n    this.config = null;\r\n    this.startCallHandler = this.startCall.bind(this);\r\n    this.endCallHandler = this.endCall.bind(this);\r\n    this.rejectCallHandler = this.rejectCall.bind(this);\r\n  }\r\n  \r\n  \r\n  /**\r\n   *\r\n   * Setups Axios to monitor XHR errors.\r\n   * Initiates and listen to socket.\r\n   * fetches User's list from backend to populate.\r\n   */\r\n\r\n  componentDidMount() {\r\n    this.initAxios();\r\n    this.initSocketConnection();\r\n    this.createSocketRoom();\r\n    this.setupSocketListeners();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var imgObj = document.getElementsByTagName(\"img\");\r\n    let that = this;\r\n    for (var i = 0 ; i < imgObj.length; i++) {\r\n      imgObj[i].addEventListener('click' , function() {\r\n        if(this.hasAttribute('data_group')) {\r\n          console.log(\"this is attach file property\", this.attributes.getNamedItem(\"src\").value)\r\n          \r\n          that.setState({\r\n            showImageFullScreen: true,\r\n            attachFileUrl: this.attributes.getNamedItem(\"src\").value\r\n          });\r\n        }\r\n\r\n      }) ; \r\n    }\r\n  }\r\n\r\n  initSocketConnection() {\r\n    // this.socket = io.connect(SOCKET_URI);\r\n    this.socket = socket;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Checks if request from axios fails\r\n   * and if it does then shows error modal.\r\n   */\r\n  initAxios() {\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        this.setState({ loading: true });\r\n        return config;\r\n      },\r\n      error => {\r\n        this.setState({ loading: false });\r\n        this.setState({\r\n          errorMessage: `Couldn't connect to server. try refreshing the page.`,\r\n          error: true\r\n        });\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    axios.interceptors.response.use(\r\n      response => {\r\n        this.setState({ loading: false });\r\n        return response;\r\n      },\r\n      error => {\r\n        this.setState({ loading: false });\r\n        this.setState({\r\n          errorMessage: `Some error occured. try after sometime`,\r\n          error: true\r\n        });\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Shows error if client gets disconnected.\r\n   */\r\n  onClientDisconnected() {\r\n    NotificationManager.error(\r\n      \"Connection Lost from server please check your connection.\",\r\n      \"Error!\"\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Established new connection if reconnected.\r\n   */\r\n  onReconnection() {\r\n    if (this.state.user) {\r\n      this.socket.emit(\"sign-in\", this.state.user);\r\n      NotificationManager.success(\"Connection Established.\", \"Reconnected!\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Create room when user enter chat router\r\n   */\r\n  createSocketRoom() {\r\n    this.socket.emit(\"create_room\", this.state.signedInUser);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Get target user to chat\r\n   */\r\n  findTargetUser() {\r\n    \r\n    let findTargetQuery = {\r\n        blackUsersList: this.state.blackUsersList,\r\n        searchSetting: this.state.searchSetting,\r\n        signedInUser: this.state.signedInUser,\r\n        prevTargetUser: this.state.targetUser,\r\n    };\r\n    this.socket.emit(\"find_target\", findTargetQuery);\r\n  }\r\n\r\n  onFindTargetUser(targetUser) {\r\n    console.log(\"this is target user\",targetUser);\r\n    // Add current target user to black user list\r\n    if(this.state.targetUser) {\r\n      let blackUsersList = this.state.blackUsersList;\r\n      blackUsersList.push(this.state.targetUser._id);\r\n      this.setState({blackUsersList});\r\n    }\r\n    let userChatData = {\r\n        id: targetUser._id,\r\n        name: targetUser.userName,\r\n        profile_image: targetUser.profile_image,\r\n        gender: targetUser.gender,\r\n        location: targetUser.location,\r\n        age: targetUser.age\r\n    }\r\n    this.setState({ targetUser });\r\n    this.setState({userChatData});\r\n    \r\n    let message = {\r\n      to: this.state.signedInUser._id,\r\n      message: {\r\n        type: \"text\",\r\n        text: `<span style=\"color: blue;\">You are now connected to ${this.state.targetUser.userName}<br>${this.state.targetUser.gender} ${this.state.targetUser.age} ${this.state.targetUser.location}</span>`,\r\n        className: \"message\"\r\n      },\r\n      from: this.state.targetUser._id\r\n    };\r\n    this.socket.emit(\"message\", message);\r\n  }\r\n\r\n  onSearchNone() {\r\n    NotificationManager.error(\r\n      `Sorry your search did not have any results. Please widen your search`\r\n    );\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}}); \r\n  }\r\n\r\n  onAvailableNone() {\r\n    NotificationManager.error(\r\n      `You have already contacted with all online users. Try search again`\r\n    );\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}}); \r\n  }\r\n  \r\n  onIgnore() {\r\n    // console.log(\"You are ignored from\", this.state.targetUser);\r\n    // Ignored Message handling\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}});\r\n  }\r\n  /**\r\n   *\r\n   * Setup all listeners\r\n   */\r\n\r\n  setupSocketListeners() {\r\n    this.socket.on(\"message\", this.onMessageRecieved.bind(this));\r\n    this.socket.on(\"reconnect\", this.onReconnection.bind(this));\r\n    this.socket.on(\"disconnect\", this.onClientDisconnected.bind(this));\r\n    //////\r\n    this.socket.on(\"find_target\", this.onFindTargetUser.bind(this));\r\n    this.socket.on(\"search-none\", this.onSearchNone.bind(this));\r\n    this.socket.on(\"available-none\", this.onAvailableNone.bind(this));\r\n    this.socket.on(\"ignore\", this.onIgnore.bind(this));\r\n    this.socket.on(\"on-typing\", this.onTargetUserTyping.bind(this));\r\n    this.socket.on(\"target-disconnect\", this.onTargetDisconnect.bind(this));\r\n    this.socket.on(\"target-logout\", this.onTargetLogout.bind(this));\r\n    this.socket.on(\"log-out\", this.onLogOut.bind(this));\r\n\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    this.socket\r\n      // .on('init', ({ id: clientId }) => {\r\n      //   document.title = `${clientId} - VideoCall`;\r\n      //   this.setState({ clientId });\r\n      // })\r\n\r\n      //@@@@@@@@@@ Remove the callfrom. It's not needed\r\n      .on('request', ({ from: callFrom }) => {\r\n        this.setState({ callModal: 'active', callFrom });\r\n      })\r\n      .on('call', (data) => {\r\n        if (data.sdp) {\r\n          this.pc.setRemoteDescription(data.sdp);\r\n          if (data.sdp.type === 'offer') this.pc.createAnswer();\r\n        } else this.pc.addIceCandidate(data.candidate);\r\n      })\r\n      .on('end', this.endCall.bind(this, false))\r\n      .emit('init');\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {MessageRecievedFromSocket} message\r\n   *\r\n   * Triggered when message is received.\r\n   * It can be a message from user himself but on different session (Tab).\r\n   * so it decides which is the position of the message \"right\" or \"left\".\r\n   *\r\n   * increments unread count and appends in the messages array to maintain Chat History\r\n   */\r\n  customeRenderAddCamp() {\r\n      // console.log('param');\r\n  }\r\n\r\n  onMessageRecieved(message) {\r\n      // console.log(\"this is message response\", message);\r\n    let userChatData = this.state.userChatData;    \r\n    let messageData = message.message;\r\n    var messageDataText = messageData.text;\r\n    \r\n    if(messageDataText === '<p></p>\\n')\r\n      return false;\r\n      \r\n    // Handling emoji icon string\r\n    let regexp = /:[\\w]+[_]?[-]?[+]*[\\w]+:/g;\r\n    let str = messageData.text;\r\n\r\n    let array = [...str.matchAll(regexp)];\r\n\r\n    for(let i = 0 ; i < array.length ; i++)  {\r\n      let emojiComp = document.querySelector('[title=' + String(array[i]).split(\":\").join(\"\") +']');\r\n      let emojiHtml = emojiComp.innerHTML;\r\n      messageDataText = messageDataText.replace(String(array[i]), String(emojiHtml));\r\n    }\r\n\r\n    // Handling image case\r\n    messageDataText = messageDataText.split(\"<img\").join(\"<img data_group='attach-file'\");\r\n\r\n    // let targetId;\r\n    if (message.from === this.state.signedInUser._id) {\r\n      messageData.position = \"right\";\r\n      messageData.renderAddCmp = () => { return renderHtml(`<div className=\"message-text message-text-right\">${messageDataText}</div>`)};\r\n      // targetId = message.to;\r\n    //   messageData.avatar = `${process.env.REACT_APP_SERVER_URI}/avatar/${this.state.user.id}.jpg`;\r\n      messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.signedInUser.profile_image}`;\r\n    } else {\r\n      messageData.position = \"left\";      \r\n      messageData.renderAddCmp = () => { return renderHtml(`<div className=\"message-text message-text-left\">${messageDataText}</div>`)};\r\n      // targetId = message.from;\r\n    //   messageData.avatar = `${process.env.REACT_APP_SERVER_URI}/avatar/${targetId}.jpg`;\r\n      messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.targetUser.profile_image}`;\r\n    }\r\n    // let targetIndex = userChatData.findIndex(u => u.id === targetId);\r\n    // messageData.renderAddCamp = this.customeRenderAddCamp;\r\n    messageData.alert = false;\r\n\r\n    if (!userChatData.messages) {\r\n      userChatData.messages = [];\r\n    } else {\r\n      if(userChatData.messages[userChatData.messages.length-1].alert === true ) {\r\n        userChatData.messages.pop();\r\n      }  \r\n    }\r\n    // console.log(this.state.userChatData.messages[this.state.userChatData.messages.length - 1]);\r\n    let messages = this.state.userChatData.messages;\r\n    if(typeof messages != 'undefined' && messages.length > 0) {\r\n      if(messages[messages.length-1].position === messageData.position) {\r\n        let prevMessageData = messages[messages.length-1];\r\n        prevMessageData.avatar = '';\r\n        prevMessageData.date = '';\r\n        userChatData.messages.pop();\r\n        userChatData.messages.push(prevMessageData);\r\n      }\r\n    }\r\n    userChatData.messages.push(messageData);\r\n    this.setState({ userChatData });\r\n    console.log(\"This is state for this component\",this.state);\r\n\r\n\r\n    // Scroll to bottom when receiving the new message\r\n    var element = document.querySelector('[class=\"rce-mlist\"]');\r\n    element.scrollTop = element.scrollHeight;\r\n  }\r\n  /**\r\n   *\r\n   * @param {User} e\r\n   *\r\n   * called when user clicks to sign-in\r\n   */\r\n  onUserClicked(e) {\r\n    let user = e.user;\r\n    this.socket.emit(\"sign-in\", user);\r\n    let userChatData = this.state.users.filter(u => u.id !== user.id);\r\n    this.setState({ user, signInModalShow: false, userChatData });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {ChatItem} e\r\n   *\r\n   * handles if user clickes on ChatItem on left.\r\n   */\r\n  onChatClicked(e) {\r\n    let users = this.state.userChatData;\r\n    for (let index = 0; index < users.length; index++) {\r\n      if (users[index].id === e.user.id) {\r\n        users[index].unread = 0;\r\n        this.setState({ selectedUserIndex: index, userChatData: users });\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {messageText} text\r\n   *\r\n   * creates message in a format in which messageList can render.\r\n   * position is purposely omitted and will be appended when message is received.\r\n   */\r\n  createMessage(text) {\r\n    let message = {\r\n      to: this.state.targetUser._id,\r\n      message: {\r\n        type: \"text\",\r\n        text: text,\r\n        date: +new Date(),\r\n        className: \"message\"\r\n      },\r\n      from: this.state.signedInUser._id\r\n    };\r\n    this.socket.emit(\"message\", message);\r\n  }\r\n\r\n  /**\r\n   * Toggles views from 'ChatList' to 'ChatBox'\r\n   *\r\n   * only on Phone\r\n   */\r\n\r\n  changeProfile(userInfo) {\r\n    this.setState({signedInUser: userInfo});\r\n  }\r\n\r\n  onProfileModalShow(status) {\r\n    this.setState({profileModalShow: status});\r\n  }\r\n\r\n  onSearchSettingModalShow(status) {\r\n    this.setState({searchModalShow: status});    \r\n  }\r\n  onReportModalShow(status) {\r\n    this.setState({reportModalShow: status});\r\n  }\r\n  onShowImageFullScreen() {\r\n    this.setState({showImageFullScreen: false});\r\n  }\r\n  \r\n  onTyping() {\r\n    this.socket.emit(\"on-typing\", this.state.targetUser);\r\n  }\r\n\r\n  onTargetUserTyping() {\r\n    this.setState({onTyping: true});\r\n\r\n    let userChatData = this.state.userChatData;\r\n    let messages = userChatData.messages;\r\n    let messageData = {};\r\n    if(typeof messages != 'undefined'){\r\n      if(messages[messages.length-1].alert !== true || messages.length === 0) {\r\n        messageData.position = \"left\";      \r\n        messageData.renderAddCmp = () => { return <OnTyping/>};\r\n        messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.targetUser.profile_image}`;\r\n        messageData.className = \"message\";\r\n        messageData.alert = true;\r\n        \r\n        if (!userChatData.messages) {\r\n          userChatData.messages = [];\r\n        }\r\n        userChatData.messages.push(messageData);\r\n        this.setState({ userChatData });\r\n        \r\n        this.turnOffRedTimeout = setTimeout(() => {\r\n          userChatData = this.state.userChatData;\r\n          if(userChatData.messages[userChatData.messages.length-1].alert === true) {\r\n            userChatData.messages.pop();\r\n            this.setState({ userChatData });\r\n          }          \r\n        }, 2000);\r\n      } else {\r\n        console.log(\"@@@@@@@***********\")        \r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  onTargetDisconnect() {\r\n    NotificationManager.error(\r\n      `${this.state.targetUser.userName} disconnected from this chat room.`\r\n    );\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}});    \r\n  }\r\n\r\n  updateProfile() {\r\n    const obj = getFromStorage('guest_signin');\r\n    if(obj && obj.token) {\r\n        var decoded_token = jwt_decode(obj.token);\r\n        var signedInUser = decoded_token.user;\r\n    }\r\n    this.setState({signedInUser: signedInUser, imageHash:Date.now()});\r\n  }\r\n\r\n  closeSettingBox() {\r\n    this.setState({\r\n      profileModalShow: false,\r\n      searchModalShow: false,\r\n      reportModalShow:false,\r\n    })\r\n  }\r\n\r\n  logOut() {\r\n    console.log(\"log out call\");\r\n    this.socket.emit('log-out', signedInUser);\r\n  }\r\n\r\n  onLogOut() {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  onTargetLogout() {\r\n    NotificationManager.error(\r\n      `${this.state.targetUser.userName} log out.`\r\n    );\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}});  \r\n  }\r\n  // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n  startCall(isCaller, targetUserID, config) {\r\n    console.log(\"call start now \", isCaller, targetUserID, config)\r\n    this.config = config;\r\n    this.pc = new PeerConnection(targetUserID)\r\n      .on('localStream', (src) => {\r\n        const newState = { callWindow: 'active', localSrc: src };\r\n        if (!isCaller) newState.callModal = '';\r\n        this.setState(newState);\r\n      })\r\n      .on('peerStream', (src) => this.setState({ peerSrc: src }))\r\n      .start(isCaller, config);\r\n  }\r\n\r\n  rejectCall() {\r\n    const { callFrom } = this.state;\r\n    this.socket.emit('end', { to: callFrom });\r\n    this.setState({ callModal: '' });\r\n  }\r\n\r\n  endCall(isStarter) {\r\n    if (_.isFunction(this.pc.stop)) {\r\n      this.pc.stop(isStarter);\r\n    }\r\n    this.pc = {};\r\n    this.config = null;\r\n    this.setState({\r\n      callWindow: '',\r\n      callModal: '',\r\n      localSrc: null,\r\n      peerSrc: null\r\n    });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    const { callModal, callWindow, localSrc, peerSrc } = this.state;\r\n    return (\r\n      <div>\r\n        {/* <button onClick={this.findTargetUser.bind(this)}>Next stranger</button> */}\r\n        \r\n        <ChatBox\r\n          signedInUser={this.state.signedInUser}\r\n          imageHash={this.state.imageHash}\r\n          onSendClicked={this.createMessage.bind(this)}\r\n          targetUser={\r\n            this.state.userChatData\r\n          }\r\n          onProfileModalShow={this.onProfileModalShow.bind(this)}\r\n          onSearchSettingModalShow={this.onSearchSettingModalShow.bind(this)}\r\n          onReportModalShow={this.onReportModalShow.bind(this)}\r\n          findTargetUser={this.findTargetUser.bind(this)}\r\n          onTyping={this.onTyping.bind(this)}\r\n          startCall={this.startCallHandler}\r\n          logOut={this.logOut.bind(this)}\r\n        />\r\n        \r\n        <ErrorModal\r\n          show={this.state.error}\r\n          errorMessage={this.state.errorMessage}\r\n        />\r\n\r\n        <LoadingModal show={this.state.loading} />\r\n        <NotificationContainer />        \r\n        \r\n        <ProfileBox \r\n          profileInfo={this.state.signedInUser}\r\n          iamgeHash={this.state.imageHash}\r\n          onChangeProfile={this.changeProfile.bind(this)}\r\n          onProfileModalShow={this.onProfileModalShow.bind(this)}\r\n          profileContainer={ `profile-container-${this.state.profileModalShow}` }\r\n          updateProfile={this.updateProfile.bind(this)}\r\n        />\r\n        <SearchSettingBox\r\n          searchContainer={ `search-container-${this.state.searchModalShow}` }\r\n          searchSetting={this.state.searchSetting}\r\n          onSearchSettingModalShow={this.onSearchSettingModalShow.bind(this)}\r\n        />\r\n\r\n        <ReportBox\r\n          reportContainer={ `report-container-${this.state.reportModalShow}` }\r\n          onReportModalShow={this.onReportModalShow.bind(this)}\r\n          signedInUser={this.state.signedInUser}\r\n          targetUser={this.state.targetUser}\r\n        />\r\n\r\n        { this.state.reportModalShow || this.state.profileModalShow || this.state.searchModalShow ? (\r\n          <div>            \r\n            <div className=\"setting-back\" onClick={this.closeSettingBox.bind(this)}></div>\r\n          </div>\r\n        ): null } \r\n\r\n        {this.state.showImageFullScreen ? \r\n          <FullScreenImage \r\n            imageUrl={this.state.attachFileUrl}\r\n            onShowImageFullScreen={this.onShowImageFullScreen.bind(this)}\r\n          />\r\n          : null\r\n        }\r\n\r\n        {!_.isEmpty(this.config) && (\r\n          <CallWindow\r\n            status={callWindow}\r\n            localSrc={localSrc}\r\n            peerSrc={peerSrc}\r\n            config={this.config}\r\n            mediaDevice={this.pc.mediaDevice}\r\n            endCall={this.endCallHandler}\r\n          />\r\n        ) }\r\n        \r\n        {this.state.targetUser ? (\r\n          <CallModal\r\n            status={callModal}\r\n            startCall={this.startCallHandler}\r\n            rejectCall={this.rejectCallHandler}\r\n            callFrom={this.state.targetUser._id}\r\n            contactUser={this.state.targetUser.userName}\r\n            userAvatar={this.state.targetUser.profile_image}\r\n          />\r\n        ): null}     \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { getFromStorage } from '../utils/storage';\r\n\r\n// FREE\r\nimport HomePage from '../pages/HomePage/HomePage';\r\nimport UserSign from '../pages/UserSign/UserSign';\r\nimport GuestSign from '../pages/GuestSign/GuestSign';\r\nimport Chat from '../pages/Chat/Chat';\r\n\r\nconst fakeAuth = () => {\r\n  const obj = getFromStorage('guest_signin');\r\n  \r\n  if(obj && obj.token) {\r\n    \r\n    // fetch(RESTAPIUrl + '/api/guest/signin', {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json'\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     userName,\r\n    //     location,\r\n    //     age,\r\n    //     gender\r\n    //   }),\r\n    // }).then(res =>res.json())\r\n    //   .then(json => {\r\n    //     console.log('this is json object', json);\r\n    //     if(json.status) {\r\n    //       setInStorage('guest_signin', {token:json.token});\r\n    //       this.props.history.push(\"/chat\");\r\n    //     } else {\r\n    //       alert(\"Server Error\");\r\n    //     }\r\n    //   })\r\n\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    fakeAuth()      \r\n      ? <Redirect to='/chat' /> \r\n      : <Component {...props} />\r\n  )} />\r\n)\r\n\r\nconst PrivateChatRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    fakeAuth()  \r\n      ? <Component {...props} />\r\n      : <Redirect to='/' /> \r\n  )} />\r\n)\r\n\r\nclass Routes extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <PrivateRoute exact path=\"/\" component={HomePage} />\r\n        <PrivateRoute path=\"/usersign\" component={ UserSign } />\r\n        <PrivateRoute path=\"/guest\" component={ GuestSign } />\r\n        <PrivateChatRoute path=\"/chat\" component={ Chat } />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Routes />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}