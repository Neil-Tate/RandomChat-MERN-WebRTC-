{"version":3,"sources":["utils/storage.js","config/config.js","pages/HomePage/HomePage.js","pages/Signup/Signup.js","pages/Login/Login.js","pages/UserSign/UserSign.js","config/country.js","pages/GuestSign/GuestSign.js","components/ChatBox.js","components/OnTyping/OnTyping.js","components/ProfileBox/ProfileBox.js","components/FullScreenImage/FullScreenImage.js","components/SearchSettingBox/SearchSettingBox.js","components/ReportBox/ReportBox.js","components/ErrorModal.js","components/LoadingModal.js","pages/Chat/socket.js","pages/Chat/Emitter.js","pages/Chat/MediaDevice.js","pages/Chat/PeerConnection.js","components/CallWindow/CallWindow.js","components/CallModal/CallModal.js","pages/Chat/Chat.js","pages/AdminSign/AdminSign.js","pages/AdminManage/AdminManage.js","App/Routes.js","App/App.js","registerServiceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","RESTAPIUrl","FullPageIntroWithFixedTransparentNavbar","props","state","collapse","isWideEnough","restricted","onClick","bind","this","verifyAccount","fetch","method","headers","body","then","res","json","status","setState","color","fixed","dark","expand","scrolling","transparent","size","href","className","isOpen","navbar","right","to","disabled","src","overlay","icon","align","React","Component","SignUp","context","handleChange","handleChangeEmail","handleChangeConfirm","handleChangeName","handleDismiss","handleShow","signUpClicked","displayAlert","password","email","confPass","name","signInLoading","show","signupStatus","signUpMessage","length","test","String","toLowerCase","e","target","value","Alert","bsStyle","onDismiss","id","newUser","log","message","FormGroup","controlId","FormControl","type","placeholder","onChange","validationState","validateEmail","Feedback","getValidationState","HelpBlock","getValidationStateConf","Button","block","LogIn","logInClicked","logInLoading","signInError","logInStatus","success","token","stateChanger","loggedIn","loggedInName","logOutButtonStatus","UserSign","logOutClicked","logOutLoadingMessage","logOutLoading","newState","Grid","Row","Col","md","xs","Tabs","defaultActiveKey","Tab","eventKey","title","countries","GuestSign","handleChangeLocation","handleChangeAge","handleChangeGender","handleSubmit","userName","location","age","gender","loginLoading","event","preventDefault","history","push","NotificationManager","sm","lg","xl","onSubmit","label","group","validate","required","map","object","i","getValue","min","max","checked","htmlFor","outline","ChatBox","onEditorStateChange","editorState","handleChangeComplete","rgbColor","rgb","r","g","b","pickerColor","showEmojiPicker","toolbar_show","showColorPicker","messageText","EditorState","createEmpty","onAttachFile","setDomEditorRef","ref","domEditor","onSendClicked","draftToHtml","convertToRaw","getCurrentContent","focusEditor","setTimeout","toggleCustomInlineStyle","emoji","convertHtml","subHtml","substring","totalHtml","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","editorStateChange","createWithContent","onTyping","KeyBindingUtil","hasCommandModifier","ctrlKey","getDefaultKeyBinding","findTargetUser","data","FormData","append","attachFile","files","fileContainer","fileName","video","config","audio","startCall","targetUser","left","signedInUser","profile_image","imageHash","alt","center","callWithVideo","path","mdiPhone","horizontal","vertical","rotate","mdiVideoOutline","caret","mdiDotsVertical","basic","onProfileModalShow","onSearchSettingModalShow","onReportModalShow","divider","logOut","lockable","toBottomHeight","dataSource","messages","downButton","style","width","position","toggleEmojiPicker","toggle_toolbar","wrapperClassName","toolbarClassName","editorClassName","keyBindingFn","keyBindingFunction","toolbar","options","inline","inDropdown","image","uploadEnabled","inputAccept","fontSize","onChangeComplete","onApplyColorPicker","hideColorPicker","toggleColorPicker","accept","focusable","viewBox","aria-hidden","role","fill","d","bottom","opacity","zIndex","onSelect","addEmoji","emojiTooltip","closeEmojiPicker","OnTyping","myRef","createRef","imageURL","profileInfo","handleUploadImage","handleChangeProfile","ev","uploadInput","updateProfile","jwt_decode","user","Date","now","alert","_id","profileContainer","FullScreenImage","downloadPath","imageUrl","split","onShowImageFullScreen","download","class","Range","createSliderWithTooltip","Slider","SearchSettingBox","temp","searchSetting","ageMin","ageMax","searchContainer","handleChangeSearchSetting","defaultValue","tipFormatter","ReportBox","reportList","reportReason","inputTextActive","reportUser","reason","reportContainer","handleReport","handleChangeReportSetting","rows","handleOtherReason","ErrorModal","Header","Title","Body","glyph","errorMessage","LoadingModal","socket","io","connect","Emitter","events","args","forEach","fn","_","isFunction","listeners","index","findIndex","_fn","splice","MediaDevice","navigator","mediaDevices","getUserMedia","facingMode","height","ideal","stream","emit","catch","DOMException","on","len","arguments","track","enabled","set","getTracks","stop","PC_CONFIG","iceServers","url","credential","username","PeerConnection","friendID","pc","RTCPeerConnection","onicecandidate","candidate","ontrack","streams","mediaDevice","isCaller","addTrack","createOffer","start","isStarter","close","off","getDescription","createAnswer","desc","setLocalDescription","sdp","rtcSdp","RTCSessionDescription","setRemoteDescription","iceCandidate","RTCIceCandidate","addIceCandidate","getButtonClass","classnames","disable","CallWindow","peerVideo","current","peerSrc","srcObject","localVideo","localSrc","toggle","deviceType","autoPlay","muted","toggleMediaDevice","endCall","CallModal","callFrom","rejectCall","contactUser","userAvatar","acceptWithVideo","App","signInModalShow","users","userChatData","selectedUserIndex","profileModalShow","searchModalShow","reportModalShow","blackUsersList","showImageFullScreen","confirmRemoveOldSession","callWindow","callModal","startCallHandler","endCallHandler","rejectCallHandler","initSocketConnection","createSocketRoom","setupSocketListeners","imgObj","document","getElementsByTagName","that","addEventListener","hasAttribute","attributes","getNamedItem","attachFileUrl","clear","axios","interceptors","request","use","loading","Promise","reject","response","findTargetQuery","prevTargetUser","date","text","from","onMessageRecieved","onReconnection","onClientDisconnected","onRemoveOldSession","onFindTargetUser","onSearchNone","onAvailableNone","onIgnore","onTargetUserTyping","onTargetDisconnect","onTargetLogout","onLogOut","messageData","messageDataText","str","array","matchAll","emojiHtml","querySelector","join","innerHTML","replace","renderAddCmp","renderHtml","avatar","pop","prevMessageData","element","scrollTop","scrollHeight","filter","u","unread","userInfo","turnOffRedTimeout","targetIndex","indexOf","targetUserID","createMessage","iamgeHash","onChangeProfile","changeProfile","closeSettingBox","isEmpty","onConfirmRemoveOldSession","AdminSign","adminSignLoading","handleChangePassword","AdminManage","userListShow","userProfileShow","adminProfileShow","toggleWrapper","updateUserProfile","getUserList","getAdminInfo","$button","$wrapper","classList","bpdy","admin","selectedUser","confirmPassword","summary","ip_address","report_number","isDeleted","handleChangeConfirmPassword","enableUser","for","report_reason","reporter_id","fakeAuth","PrivateRoute","component","rest","render","PrivateChatRoute","Routes","exact","HomePage","Chat","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","URL","process","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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ACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,WACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,WACA,SACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,oBACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,SACA,aACA,UACA,SACA,WACA,aACA,UACA,aACA,kBACA,UACA,QACA,QACA,cACA,cACA,YACA,QACA,UACA,cACA,SACA,OACA,WACA,QACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,SACA,SACA,wBACA,cACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,kBACA,UACA,eACA,cACA,cACA,QACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,cACA,OACA,QACA,sBACA,UACA,SACA,eACA,SACA,SACA,UACA,6BACA,sBACA,iCACA,UACA,aACA,UACA,0BACA,YACA,UACA,QACA,SACA,YCzDWC,G,yDA7Hb,WAAY/G,EAAOuC,GAAU,IAAD,8BAC1B,cAAMvC,EAAOuC,IACRI,iBAAmB,EAAKA,iBAAiBrC,KAAtB,gBACxB,EAAK0G,qBAAuB,EAAKA,qBAAqB1G,KAA1B,gBAC5B,EAAK2G,gBAAkB,EAAKA,gBAAgB3G,KAArB,gBACvB,EAAK4G,mBAAqB,EAAKA,mBAAmB5G,KAAxB,gBAC1B,EAAK6G,aAAe,EAAKA,aAAa7G,KAAlB,gBAEpB,EAAKL,MAAQ,CACXmH,SAAU,GACVC,SAAU,SACVC,IAAK,GACLC,OAAQ,OACRC,cAAc,GAbU,E,6DAiBX5D,GACfrD,KAAKU,SAAS,CAAEmG,SAAUxD,EAAEC,OAAOC,U,2CAGhBF,GACnBrD,KAAKU,SAAS,CAAEoG,SAAUzD,EAAEC,OAAOC,U,sCAGrBA,GACdvD,KAAKU,SAAS,CAAEqG,IAAKxD,M,yCAG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","file":"static/js/main.82e41f6f.chunk.js","sourcesContent":["export function getFromStorage(key) {\r\n    if (!key) {\r\n        return null;\r\n    }\r\n    try {\r\n        const valueStr = localStorage.getItem(key);\r\n        if (valueStr) {\r\n            return JSON.parse(valueStr);\r\n        }\r\n        return null;\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n}\r\nexport function setInStorage(key, obj) {\r\n    if (!key) {\r\n        console.error('Error: Key is missing');\r\n    }\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}","// export const RESTAPIUrl = 'http://192.168.100.118:5000';\r\n// export const SOCKET_URI = 'http://192.168.100.118:5000';\r\n\r\nexport const RESTAPIUrl = 'https://anonymous-video-chat.herokuapp.com';\r\nexport const SOCKET_URI = 'https://anonymous-video-chat.herokuapp.com';","import React from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport { RESTAPIUrl} from \"../../config/config\";\r\nimport './HomePage.css';\r\n\r\nclass FullPageIntroWithFixedTransparentNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      isWideEnough: false,\r\n      restricted: false\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.verifyAccount();\r\n  }\r\n\r\n  verifyAccount() {    \r\n    fetch(RESTAPIUrl + '/api/guest/ipverify', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n      }),\r\n    })\r\n    .then(res =>res.json())\r\n    .then(json => {\r\n      if(!json.status) {\r\n        this.setState({restricted: true});\r\n      }else {\r\n        this.setState({restricted: false});\r\n      }\r\n    })\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n      collapse: !this.state.collapse,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n            \r\n            <MDBNavbar color=\"bg-primary\" fixed=\"top\" dark expand=\"md\" scrolling transparent>\r\n              <MDBContainer size=\"md\">            \r\n                <MDBNavbarBrand href=\"/\">\r\n                  <strong className=\"navbar-title\">Chat With Stranger</strong>\r\n                </MDBNavbarBrand>\r\n                {!this.state.isWideEnough && <MDBNavbarToggler onClick={this.onClick} />}\r\n                <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                  <MDBNavbarNav right>\r\n                    <MDBNavItem>\r\n                      <MDBNavLink \r\n                        to=\"/guest\"\r\n                        disabled={this.state.restricted}\r\n                      >\r\n                        GUEST\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>                   \r\n                  </MDBNavbarNav>\r\n                </MDBCollapse>\r\n              </MDBContainer>\r\n            </MDBNavbar>\r\n            \r\n\r\n          <MDBView src={process.env.PUBLIC_URL + '/background.jpg'}>\r\n            <MDBMask overlay=\"purple-light\" className=\"flex-center flex-column text-white text-center\">\r\n              <strong><h2>Random Video, Text & Audio Chat with Strangers</h2></strong><br></br>\r\n              <h5>It provides free random chat with cool people in private chat rooms.</h5>\r\n              <p>Chat with strangers & send pictures, videos in private free chat rooms. Meet & talk to strangers from all over the world.</p><br />      \r\n              <div className=\"btn-group\">\r\n                <MDBNavLink \r\n                  to={ !this.state.restricted? \"/guest\" : '/#'}\r\n                >\r\n                  <MDBBtn \r\n                    color=\"secondary\" \r\n                    size=\"lg\"\r\n                    disabled={this.state.restricted}\r\n                  >\r\n                    <MDBIcon icon=\"user-shield\" className=\"mr-1\" size=\"lg\" /> Chat as a guest\r\n                  </MDBBtn>\r\n                </MDBNavLink>                    \r\n              </div>\r\n              {this.state.restricted ? <p className=\"verify-alert\" >Your ip address is restricted from this chat</p> : null}\r\n            </MDBMask>\r\n          </MDBView>\r\n        </header>\r\n\r\n        <main>\r\n          <MDBContainer className=\"text-center my-5\">\r\n            <p align=\"justify\">Texting strangers might come naturally to some but others may have goose bumps when they are trying to text strangers. When you text strangers you are opening a window into a great text chat with strangers. The first few texts are the most difficult ones, once you have started texting and managed to move past opening texts the rest is easy peasy lemon squeezy. Sending a text to strangers is just like letter writing which was back then known as making pen pals. However, these days text to strangers chat room is a modern way of connecting with strangers. When you text strangers you are at the first step of a great conversation that could blossom into a good friendship or even a relationship. There are many examples in the world where people have found their soulmates when they were random texting strangers online. Many people online text with strangers in order to find some company and to talk to someone. When you send a text to strangers what happens next is a total mystery. It might end abruptly a couple of times whereas other times it might turn into a beautiful conversation and a pleasant experience.</p>\r\n          </MDBContainer>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullPageIntroWithFixedTransparentNavbar;","import React, { Component } from 'react';\r\nimport './Signup.css';\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    HelpBlock,  \r\n    Button,\r\n    Alert,\r\n} from 'react-bootstrap';\r\nimport 'whatwg-fetch';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\nclass SignUp extends Component {\r\n    \r\n    constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n        \r\n    this.handleChangeConfirm = this.handleChangeConfirm.bind(this);\r\n        \r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n        \r\n    this.handleDismiss = this.handleDismiss.bind(this);\r\n        \r\n    this.handleShow = this.handleShow.bind(this);\r\n        \r\n        \r\n    this.signUpClicked = this.signUpClicked.bind(this);\r\n        \r\n    this.displayAlert = this.displayAlert.bind(this);\r\n\r\n    this.state = {\r\n      password: '',\r\n      email: '',\r\n      confPass: '',\r\n      name: '',\r\n      signInLoading: false,\r\n      show: false,\r\n      signupStatus: 'success',\r\n      signUpMessage: 'You have signed up successfully. Proceed to login.',\r\n        \r\n    };\r\n  }\r\n    \r\n  validateEmail() {\r\n    if(this.state.email.length ===0) return null;\r\n      // eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(String(this.state.email).toLowerCase())?'success':'error';\r\n  }\r\n\r\n  getValidationState() {\r\n    const length = this.state.password.length;\r\n    if (length > 8) return 'success';\r\n    else if (length > 5) return 'warning';\r\n    else if (length > 0) return 'error';\r\n    return null;\r\n  }\r\n    \r\n  getValidationStateConf() {\r\n    const length = this.state.confPass.length;\r\n    if(length === 0 ) return null;\r\n      \r\n    else if( this.state.password === this.state.confPass ) return 'success';\r\n    \r\n    else return 'error';\r\n      \r\n    \r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n    \r\n  handleChangeEmail(e) {\r\n    this.setState({ email: e.target.value });\r\n  }\r\n\r\n  handleChangeConfirm(e) {\r\n    this.setState({ confPass: e.target.value });\r\n  }\r\n\r\n  handleChangeName(e) {\r\n    this.setState({ name: e.target.value });\r\n  }\r\n    \r\n  handleDismiss() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n    \r\n  displayAlert() {\r\n      return (\r\n          <Alert bsStyle={this.state.signupStatus} onDismiss={this.handleDismiss} id=\"alertBox\">\r\n              \r\n              <p>\r\n                { this.state.signUpMessage }\r\n              </p>\r\n              \r\n            </Alert>\r\n\r\n      );\r\n  }\r\n\r\n    \r\n  signUpClicked(e) {\r\n      this.setState({ signInLoading : true });\r\n      //console.log(e);\r\n      const newUser = {\r\n        password: this.state.password,\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n      };\r\n      \r\n      fetch( RESTAPIUrl+\"/api/account/signup\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newUser),\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            console.log('json', json);\r\n        \r\n        if(json.message === \"Signed Up\") {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'success',\r\n                signUpMessage: 'You have signed up successfully. Proceed to login.',\r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n                \r\n            });\r\n        } else if ( json.message === 'Error: Account Already Exists') {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'warning',\r\n                signUpMessage: 'Account already Exists. Procced to login',  \r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n            });\r\n        } else if( json.message === 'Error: Server Error') {\r\n            this.setState({\r\n                signInLoading: false,\r\n                show: true,\r\n                signupStatus: 'danger',\r\n                signUpMessage: 'Unexpected error. Please try again later.',\r\n                name: '',\r\n                password: '',\r\n                confPass: '',\r\n                email: '',\r\n                \r\n            });\r\n        }\r\n        \r\n            \r\n        })\r\n      \r\n  }\r\n\r\n    \r\n  \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              <form>\r\n                <FormGroup\r\n                    controlId=\"signUpName\">\r\n                    <FormControl\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        placeholder=\"Name\"\r\n                        onChange={this.handleChangeName}\r\n\r\n                        />\r\n\r\n                    </FormGroup>\r\n\r\n\r\n                <FormGroup\r\n                    controlId=\"signUpEmail\"\r\n                    validationState={this.validateEmail()}\r\n                    >\r\n\r\n                    <FormControl\r\n                        type=\"email\"\r\n                        value={this.state.email}\r\n                        placeholder=\"Email\"\r\n                        onChange={this.handleChangeEmail}\r\n                        />\r\n                    <FormControl.Feedback />    \r\n\r\n                </FormGroup>    \r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicTextSignupPass\"\r\n                  validationState={this.getValidationState()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <FormControl.Feedback />\r\n                  <HelpBlock id=\"passwordHelp\">Password must be minimum 8 characters long</HelpBlock>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicTextSignupConfPass\"\r\n                  validationState={this.getValidationStateConf()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.confPass}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChangeConfirm}\r\n                  />\r\n                  <FormControl.Feedback />\r\n\r\n                </FormGroup>\r\n\r\n                <Button\r\n                  block\r\n                  bsStyle=\"warning\"\r\n                  disabled = {this.state.signInLoading}\r\n                  onClick = {this.state.signInLoading ? null : this.signUpClicked}\r\n                  >\r\n                    {this.state.signInLoading ? 'Processing...' : 'Sign Up'}\r\n              </Button>\r\n\r\n\r\n              </form>\r\n                \r\n              { this.state.show ? this.displayAlert() : null}\r\n\r\n\r\n              \r\n        </div>\r\n          \r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n\r\n","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    Button,\r\n    Alert,\r\n} from 'react-bootstrap';\r\nimport 'whatwg-fetch';\r\nimport {\r\n  setInStorage,\r\n} from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\n\r\nclass LogIn extends Component {\r\n    \r\n    constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\r\n    \r\n    this.logInClicked = this.logInClicked.bind(this);\r\n        \r\n    this.handleDismiss = this.handleDismiss.bind(this);\r\n        \r\n    this.handleShow = this.handleShow.bind(this); \r\n    \r\n        \r\n    this.displayAlert = this.displayAlert.bind(this);\r\n\r\n    this.state = {\r\n      password: '',\r\n      email: '',\r\n      logInLoading: false,\r\n      signInError: '',\r\n      show: false,\r\n      logInStatus: 'danger',\r\n        \r\n    };\r\n  }\r\n    \r\n  validateEmail() {\r\n    if(this.state.email.length ===0) return null;\r\n      // eslint-disable-next-line\r\n    var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(String(this.state.email).toLowerCase())?'success':'error';\r\n  }\r\n\r\n  getValidationState() {\r\n    const length = this.state.password.length;\r\n    if (length > 8) return 'success';\r\n    else if (length > 5) return 'warning';\r\n    else if (length > 0) return 'error';\r\n    return null;\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n    \r\n  handleChangeEmail(e) {\r\n    this.setState({ email: e.target.value });\r\n  }\r\n    \r\n  logInClicked() {\r\n      const {\r\n          email, \r\n          password,\r\n      } = this.state;\r\n      \r\n      this.setState({\r\n          logInLoading: true,\r\n      });\r\n      \r\n      fetch( RESTAPIUrl + '/api/account/signin', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email,\r\n            password,\r\n          }),\r\n        }).then(res => res.json())\r\n          .then(json => {\r\n            console.log('json', json);\r\n            if (json.success) {\r\n              setInStorage('the_login_n_signup', { token: json.token, name: json.name });\r\n              this.setState({\r\n                signInError: 'Welcome ' + json.name + '!',\r\n                logInLoading: false,\r\n                password: '',\r\n                email: '',\r\n                token: json.token,\r\n                show: true,\r\n                logInStatus: 'success',\r\n              });\r\n                \r\n              this.props.stateChanger({\r\n                  loggedIn: true,\r\n                  token: json.token,\r\n                  loggedInName: json.name,\r\n                  logOutButtonStatus: 'warning',\r\n              });\r\n            } else {\r\n              this.setState({\r\n                signInError: json.message,\r\n                logInLoading: false,\r\n                show: true,\r\n                logInStatus: 'danger',\r\n              });\r\n            }\r\n          \r\n          })\r\n      \r\n  }\r\n    \r\n\r\n  handleDismiss() {\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n    \r\n  displayAlert() {\r\n      return (\r\n          <Alert bsStyle={this.state.logInStatus} onDismiss={this.handleDismiss} id=\"alertBox\">\r\n              \r\n              <p>\r\n                { this.state.signInError }\r\n              </p>\r\n              \r\n            </Alert>\r\n\r\n      );\r\n  }\r\n    \r\n    \r\n    \r\n  \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n              <form>\r\n                <FormGroup\r\n                    controlId=\"LogInEmail\"\r\n                    validationState={this.validateEmail()}\r\n                    >\r\n\r\n                    <FormControl\r\n                        type=\"email\"\r\n                        value = {this.state.email}\r\n                        placeholder=\"Email\"\r\n                        onChange={this.handleChangeEmail}\r\n                        />\r\n                    <FormControl.Feedback />    \r\n\r\n                </FormGroup>    \r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formBasicText\"\r\n                  validationState={this.getValidationState()}\r\n                >\r\n\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <FormControl.Feedback />\r\n\r\n                </FormGroup>\r\n\r\n\r\n\r\n              </form>\r\n            \r\n          <Button\r\n                  block\r\n                  bsStyle=\"success\"\r\n                  disabled = {this.state.logInLoading}\r\n                  onClick = {this.state.logInLoading ? null : this.logInClicked}\r\n                  >\r\n                    {this.state.logInLoading ? 'Authenticating...' : 'Log In'}\r\n          </Button>\r\n        \r\n        { this.state.show ? this.displayAlert() : null}\r\n\r\n            \r\n        </div>\r\n            \r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default LogIn;\r\n\r\n","import React, { Component } from 'react';\r\nimport './UserSign.css';\r\nimport { \r\n     Grid, \r\n     Row,\r\n     Col,\r\n     Tabs,\r\n     Tab,\r\n     Button \r\n       } from 'react-bootstrap'; \r\nimport SignUp from '../Signup/Signup';\r\nimport LogIn from '../Login/Login';\r\nimport {\r\n  getFromStorage,\r\n} from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\n\r\nclass UserSign extends Component { \r\n    constructor( props, context) {\r\n        super(props, context);\r\n        \r\n        this.stateChanger = this.stateChanger.bind(this);\r\n        this.logOutClicked = this.logOutClicked.bind(this);\r\n        \r\n        this.state = {\r\n            loggedIn: false,\r\n            token: '',\r\n            loggedInName: 'Unnamed Ashok Kumar',\r\n            logOutButtonStatus: 'warning',\r\n            logOutLoadingMessage: 'Log Out',\r\n            logOutLoading: false,\r\n            \r\n            \r\n            \r\n        }\r\n    }\r\n    \r\n    stateChanger(newState) {\r\n        this.setState(newState);\r\n    }\r\n    \r\n    componentDidMount() {\r\n    const obj = getFromStorage('the_login_n_signup');\r\n    if (obj && obj.token) {\r\n      const { token } = obj;\r\n      const { name } = obj;\r\n      // Verify token\r\n      fetch( RESTAPIUrl + '/api/account/verify?token=' + token)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.success) {\r\n            this.setState({\r\n              token,\r\n              loggedInName: name,\r\n              logOutLoading: false,\r\n              loggedIn: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              logOutLoading: false,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      this.setState({\r\n        logOutLoading: false,\r\n      });\r\n    }\r\n  }\r\n    \r\n    logOutClicked() {\r\n        this.setState({\r\n          logOutLoading: true,\r\n          logOutLoadingMessage: 'Logging Out...',\r\n          logOutButtonStatus: 'info',\r\n        });\r\n        const obj = getFromStorage('the_login_n_signup');\r\n        if (obj && obj.token) {\r\n          const { token } = obj;\r\n          // Verify token\r\n          fetch(RESTAPIUrl + '/api/account/logout?token=' + token)\r\n            .then(res => {\r\n              //console.log(res);\r\n              return res.json();\r\n          })\r\n            .then(json => {\r\n              if (json.success) {\r\n                this.setState({\r\n                  token: '',\r\n                  logOutLoading: false,\r\n                  loggedIn: false,\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  logOutLoading: false,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          this.setState({\r\n            logOutLoading: false,\r\n          });\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n \r\n          <h1 className=\"App-title\">Login Or Sign-Up</h1>\r\n        </header>\r\n            <Grid>\r\n                <Row>\r\n                    <Col md={4}></Col>\r\n                    <Col xs={12} md={4}>\r\n                        {this.state.loggedIn ? \r\n                            <div><h1>Welcome {this.state.loggedInName}!</h1> \r\n                            <Button\r\n                                  block\r\n                                  bsStyle= {this.state.logOutButtonStatus}\r\n                                  disabled = {this.state.logOutLoading}\r\n                                  onClick = {this.state.logOutLoading ? null : this.logOutClicked}\r\n                                  >\r\n                                    {this.state.logOutButtonStatus ? 'Log Out' : 'Logging Out'}\r\n                            </Button>\r\n                            </div>\r\n                            : \r\n                            \r\n                            <div className = \"loginBoxContainer\">\r\n                            <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\r\n                                  <Tab eventKey={1} title=\"Login\" className=\"tabContent\">\r\n                                    <LogIn stateChanger = {this.stateChanger}/>\r\n                                  </Tab>\r\n                                  <Tab eventKey={2} title=\"Sign Up\" className=\"tabContent\">\r\n                                    <SignUp />\r\n                                  </Tab>\r\n                            </Tabs>\r\n                        </div>}\r\n                    \r\n                    </Col>\r\n                    <Col md={4}></Col>\r\n                </Row>\r\n            </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserSign;\r\n","export const countries = [\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"Algeria\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belarus\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Benin\",\r\n    \"Bhutan\",\r\n    \"Bolivia\",\r\n    \"Bosnia and Herzegovina\",\r\n    \"Botswana\",\r\n    \"Brazil\",\r\n    \"Brunei\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Burundi\",\r\n    \"Cabo Verde\",\r\n    \"Cambodia\",\r\n    \"Cameroon\",\r\n    \"Canada\",\r\n    \"Central African Republic (CAR)\",\r\n    \"Chad\",\r\n    \"Chile\",\r\n    \"China\",\r\n    \"Colombia\",\r\n    \"Comoros\",\r\n    \"Costa Rica\",\r\n    \"Cote d'Ivoire\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Cyprus\",\r\n    \"Czech Republic\",\r\n    \"Denmark\",\r\n    \"Djibouti\",\r\n    \"Dominica\",\r\n    \"Dominican Republic\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"El Salvador\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Estonia\",\r\n    \"Ethiopia\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"Gabon\",\r\n    \"Gambia\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Ghana\",\r\n    \"Greece\",\r\n    \"Grenada\",\r\n    \"Guatemala\",\r\n    \"Guinea\",\r\n    \"Guinea-Bissau\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kenya\",\r\n    \"Kiribati\",\r\n    \"Kosovo\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"Laos\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Lesotho\",\r\n    \"Liberia\",\r\n    \"Libya\",\r\n    \"Liechtenstein\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macedonia (FYROM)\",\r\n    \"Madagascar\",\r\n    \"Malawi\",\r\n    \"Malaysia\",\r\n    \"Maldives\",\r\n    \"Mali\",\r\n    \"Malta\",\r\n    \"Marshall Islands\",\r\n    \"Mauritania\",\r\n    \"Mauritius\",\r\n    \"Mexico\",\r\n    \"Micronesia\",\r\n    \"Moldova\",\r\n    \"Monaco\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Morocco\",\r\n    \"Mozambique\",\r\n    \"Myanmar (Burma)\",\r\n    \"Namibia\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands\",\r\n    \"New Zealand\",\r\n    \"Nicaragua\",\r\n    \"Niger\",\r\n    \"Nigeria\",\r\n    \"North Korea\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Palestine\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Philippines\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Qatar\",\r\n    \"Romania\",\r\n    \"Russia\",\r\n    \"Rwanda\",\r\n    \"Saint Kitts and Nevis\",\r\n    \"Saint Lucia\",\r\n    \"Saint Vincent and the Grenadines\",\r\n    \"Samoa\",\r\n    \"San Marino\",\r\n    \"Sao Tome and Principe\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Seychelles\",\r\n    \"Sierra Leone\",\r\n    \"Singapore\",\r\n    \"Slovakia\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"South Africa\",\r\n    \"South Korea\",\r\n    \"South Sudan\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"Sudan\",\r\n    \"Suriname\",\r\n    \"Swaziland\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syria\",\r\n    \"Taiwan\",\r\n    \"Tajikistan\",\r\n    \"Tanzania\",\r\n    \"Thailand\",\r\n    \"Timor-Leste\",\r\n    \"Togo\",\r\n    \"Tonga\",\r\n    \"Trinidad and Tobago\",\r\n    \"Tunisia\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Tuvalu\",\r\n    \"Uganda\",\r\n    \"Ukraine\",\r\n    \"United Arab Emirates (UAE)\",\r\n    \"United Kingdom (UK)\",\r\n    \"United States of America (USA)\",\r\n    \"Uruguay\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Vatican City (Holy See)\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Yemen\",\r\n    \"Zambia\",\r\n    \"Zimbabwe\"\r\n];","import React from 'react';\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter, MDBInputSelect } from 'mdbreact';\r\nimport 'whatwg-fetch';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager\r\n} from \"react-notifications\";\r\nimport { setInStorage } from '../../utils/storage';\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport { countries } from \"../../config/country\";\r\nimport './GuestSign.css';\r\n\r\nclass GuestSign extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeLocation = this.handleChangeLocation.bind(this);\r\n    this.handleChangeAge = this.handleChangeAge.bind(this);\r\n    this.handleChangeGender = this.handleChangeGender.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      userName: '',\r\n      location: 'Canada',\r\n      age: 28,\r\n      gender: 'Male',\r\n      loginLoading: false,\r\n    }\r\n  }\r\n\r\n  handleChangeName(e) {\r\n    this.setState({ userName: e.target.value });\r\n  }\r\n\r\n  handleChangeLocation(e) {\r\n    this.setState({ location: e.target.value });\r\n  }\r\n\r\n  handleChangeAge(value) {\r\n    this.setState({ age: value });\r\n  }\r\n\r\n  handleChangeGender(e) {\r\n    this.setState({ gender: e.target.value });\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { userName, location, age, gender } = this.state;\r\n    \r\n    this.setState ({ \r\n      loginLoading: true, \r\n    });\r\n\r\n    fetch(RESTAPIUrl + '/api/guest/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userName,\r\n        location,\r\n        age,\r\n        gender\r\n      }),\r\n    }).then(res =>res.json())\r\n      .then(json => {\r\n        if(json.status) {\r\n          setInStorage('guest_signin', {token:json.token});\r\n          this.props.history.push(\"/chat\");\r\n        } else {\r\n          NotificationManager.error(\r\n            `${json.message}`\r\n          );\r\n        }\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n        <MDBRow>\r\n          <NotificationContainer /> \r\n          <MDBCol sm=\"10\" md=\"7\" lg=\"6\" xl=\"4\" className=\"mx-auto mt-3 sign-container\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <MDBCard>\r\n              <div className=\"text-center sign-title\">\r\n                <h5 className=\"dark-grey-text mb-5\"><strong>Sign in</strong></h5>\r\n              </div>\r\n              <MDBCardBody className=\"mx-4\">\r\n                \r\n                <MDBInput label=\"Your Name\" group type=\"text\" onChange={this.handleChangeName} validate error=\"wrong\" success=\"right\" required/>\r\n                \r\n                <select className=\"browser-default custom-select\" id=\"location\" name=\"location\" value={this.state.location} onChange={this.handleChangeLocation} >\r\n                  <option>Choose your location</option>\r\n                  {\r\n                    countries.map((object, i) => {\r\n                      return <option value={object} key={i}>{object}</option>\r\n                    })\r\n                  }\r\n                </select>\r\n\r\n                <label className=\"form-label\" >Your Age</label>\r\n                <MDBInputSelect  id=\"age\" name=\"age\" getValue={this.handleChangeAge} min={13} max={99} value={this.state.age} className='mb-2' />\r\n                \r\n                <label className=\"form-label\">Your Gender</label>\r\n                <div className=\"radio-group\">\r\n                  <div className=\"radio\">\r\n                    <input id=\"radio-1\" name=\"radio\" type=\"radio\" value=\"Male\" onChange={this.handleChangeGender} checked={this.state.gender === 'Male'} />\r\n                    <label htmlFor=\"radio-1\" className=\"radio-label\">Male</label>\r\n                  </div>\r\n\r\n                  <div className=\"radio\">\r\n                    <input id=\"radio-2\" name=\"radio\" type=\"radio\" value=\"Female\" onChange={this.handleChangeGender} checked={this.state.gender === 'Female'} />\r\n                    <label  htmlFor=\"radio-2\" className=\"radio-label\">Female</label>\r\n                  </div>  \r\n                </div>\r\n\r\n                <div className=\"text-center pt-3 mb-3\">\r\n                  <MDBBtn \r\n                    type=\"submit\" \r\n                    className=\"btn-block z-depth-1a\" \r\n                    outline color=\"info\"\r\n                    >\r\n                      {this.state.logInLoading ? 'Authenticating...' : 'Start Chat'}\r\n                  </MDBBtn>\r\n                </div>\r\n\r\n              </MDBCardBody>\r\n              <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\r\n                \r\n              </MDBModalFooter>\r\n            </MDBCard>\r\n            </form>\r\n          </MDBCol>\r\n        </MDBRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GuestSign;","import React, { Component } from \"react\";\r\nimport InputGroup from \"react-bootstrap/lib/InputGroup\";\r\nimport Row from \"react-bootstrap/lib/Row\";\r\nimport FormGroup from \"react-bootstrap/lib/FormGroup\";\r\nimport {\r\n  MessageList,\r\n  Navbar as NavbarComponent,\r\n  Avatar \r\n} from \"react-chat-elements\";\r\nimport { MDBBtn ,MDBIcon, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from 'mdbreact';\r\n\r\n// MDI icon import\r\nimport Icon from '@mdi/react'\r\nimport { mdiPhone, mdiVideoOutline, mdiDotsVertical } from '@mdi/js'\r\n\r\n// Emoji icon module\r\nimport { Picker } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\n// Font Selector module- draft.js\r\nimport { EditorState, convertToRaw, ContentState, getDefaultKeyBinding, KeyBindingUtil } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport { SketchPicker } from 'react-color';\r\nimport { toggleCustomInlineStyle } from 'draftjs-utils';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport { RESTAPIUrl } from '../config/config';\r\n/**\r\n *\r\n * ChatBox Component\r\n *\r\n * displays all the messages from chat history.\r\n * renders message text box for input.\r\n */\r\n\r\n\r\nexport default class ChatBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showEmojiPicker: false,\r\n      toolbar_show : false,\r\n      showColorPicker: false,\r\n      pickerColor: 'RGB(0,0,0)',\r\n      messageText: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    }\r\n\r\n    this.onAttachFile = this.onAttachFile.bind(this);\r\n    this.setDomEditorRef = ref => this.domEditor = ref;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    // this.domEditor.focusEditor();\r\n  }\r\n\r\n  onSendClicked() {\r\n    // if (!this.state.messageText) {\r\n    //   return;\r\n    // }\r\n    // this.props.onSendClicked(this.state.messageText);\r\n    // this.setState({ messageText: \"\" });\r\n    this.props.onSendClicked(draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())));\r\n    this.setState({editorState:EditorState.createEmpty()});\r\n    this.domEditor.focusEditor();\r\n    // @@@@@@@@@@@@@@@@@@@@@@@\r\n    setTimeout(\r\n      function() {\r\n        const newState = toggleCustomInlineStyle(this.state.editorState, 'color', this.state.pickerColor);\r\n        this.setState({\r\n          editorState: newState,\r\n          showColorPicker: false\r\n        });\r\n      }\r\n      .bind(this),\r\n      10\r\n    );\r\n  }\r\n  \r\n  onMessageInputChange(e) {\r\n    this.setState({ messageText: e.target.value });\r\n  }\r\n  /**\r\n   *\r\n   * @param {KeyboardEvent} e\r\n   *\r\n   * listen for enter pressed and sends the message.\r\n   */\r\n  onMessageKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.onSendClicked();\r\n    }\r\n  }\r\n\r\n  toggleEmojiPicker() {\r\n    this.setState({\r\n      showEmojiPicker: !this.state.showEmojiPicker,\r\n    });\r\n  }\r\n  \r\n  addEmoji(emoji) {\r\n    // if(this.state.messageText) {\r\n    //   var { messageText } = this.state;\r\n    // } else {\r\n    //   var messageText = '';\r\n    // }\r\n    // const text = `${messageText}${emoji.native}`;\r\n  \r\n    // this.setState({\r\n    //   messageText: text,\r\n    // });\r\n    // const selectEmoji = document.querySelector('[title=' + emoji.id +']');\r\n\r\n    const { editorState } = this.state;\r\n    const convertHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    const subHtml = convertHtml.substring(0,(convertHtml.length-5));\r\n    // const totalHtml = `${subHtml}${emoji.native}</p>`;\r\n    const totalHtml = `${subHtml} :${emoji.id}: </p>`;\r\n    \r\n    const blocksFromHtml = htmlToDraft(totalHtml);\r\n    const { contentBlocks, entityMap } = blocksFromHtml;\r\n    const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n    const editorStateChange = EditorState.createWithContent(contentState);\r\n    this.setState({editorState: editorStateChange});\r\n  }\r\n\r\n  closeEmojiPicker() {\r\n    this.setState({showEmojiPicker: false});\r\n  }\r\n\r\n  onEditorStateChange =  (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  // onEditorChange() {\r\n  //   this.props.onTyping();\r\n  // }\r\n\r\n  toggle_toolbar() {   \r\n    this.setState({toolbar_show: !this.state.toolbar_show});\r\n  }\r\n\r\n  keyBindingFunction(event) {\r\n\r\n    // Call onTyping function to let contact user typing status\r\n    this.props.onTyping();\r\n    if (KeyBindingUtil.hasCommandModifier(event) && event.ctrlKey && event.key === 'Enter') {\r\n      return getDefaultKeyBinding(event);\r\n    }\r\n  \r\n    if (event.key === 'Enter') {\r\n      this.onSendClicked();\r\n      return;\r\n    }\r\n    return getDefaultKeyBinding(event);\r\n  }\r\n\r\n  findTargetUser() {\r\n    this.props.findTargetUser();\r\n  }\r\n\r\n  onAttachFile(e) {\r\n    e.preventDefault();\r\n\r\n    // this.props.onAttachFile();\r\n    const data = new FormData();\r\n    data.append('attachFile', this.attachFile.files[0]);\r\n    fetch(`${RESTAPIUrl}/api/attach-file`, {\r\n      method: 'POST',\r\n      body: data,\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.status) {\r\n        const { editorState } = this.state;\r\n        const convertHtml = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n        var subHtml = '';\r\n        // if(convertHtml.substring(convertHtml.length-5) == '</p>')\r\n        //   subHtml = convertHtml.substring(0,(convertHtml.length-5));\r\n        // else \r\n          subHtml = convertHtml.substring(0,(convertHtml.length));\r\n        const fileContainer = `<img src=\"${RESTAPIUrl}/public/uploads/${json.fileName}\" alt=\"${RESTAPIUrl}/public/uploads/${json.fileName}\">`;\r\n        const totalHtml = `${subHtml}${fileContainer}`;\r\n\r\n        const blocksFromHtml = htmlToDraft(totalHtml);\r\n        const { contentBlocks, entityMap } = blocksFromHtml;\r\n        const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n        const editorStateChange = EditorState.createWithContent(contentState);\r\n        this.setState({editorState: editorStateChange});\r\n\r\n        // Focus editor box after file select.\r\n        this.domEditor.focusEditor();\r\n\r\n      }\r\n    })\r\n  }\r\n  image_thumbs() {\r\n    console.log(\"image thumbs start\");\r\n  }\r\n\r\n  toggleColorPicker() {\r\n    this.setState({showColorPicker: !this.state.showColorPicker})\r\n  }\r\n  hideColorPicker() {\r\n    this.setState({showColorPicker: false});\r\n  }\r\n\r\n  onApplyColorPicker() {\r\n    // const newState = toggleCustomInlineStyle(this.state.editorState, 'color', rgbColor);\r\n    // this.setState({\r\n    //   editorState: newState, \r\n    //   pickerColor: color.hex\r\n    // });\r\n\r\n    this.domEditor.focusEditor();\r\n    setTimeout(\r\n      function() {\r\n        const newState = toggleCustomInlineStyle(this.state.editorState, 'color', this.state.pickerColor);\r\n        this.setState({\r\n          editorState: newState,\r\n          showColorPicker: false\r\n        });\r\n      }\r\n      .bind(this),\r\n      500\r\n    );\r\n  }\r\n  handleChangeComplete = (color) => {\r\n    const rgbColor=`RGB(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b})`;\r\n      this.setState({pickerColor: rgbColor});\r\n  }\r\n\r\n  callWithVideo (video) {\r\n    const config = { audio: true, video };\r\n    // return () => this.props.targetUser.id && this.props.startCall(true, this.props.targetUser.id, config);\r\n    this.props.startCall(true, this.props.targetUser.id, config);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>        \r\n          <div>\r\n            <NavbarComponent\r\n              left={\r\n                <div>\r\n                  <Avatar\r\n                    src={`${RESTAPIUrl}/public/profile/${this.props.signedInUser.profile_image}?${this.props.imageHash}`}\r\n                    alt={\"logo\"}\r\n                    size=\"large\"\r\n                    type=\"circle flexible\"\r\n                  />\r\n                  <div className=\"user-info\">\r\n                    <p className=\"navBarText user-name\">{this.props.signedInUser.userName}</p>\r\n                    <p className=\"navBarText user-title\">{this.props.signedInUser.gender}   {this.props.signedInUser.age} {this.props.signedInUser.location}</p>\r\n                  </div>\r\n                </div>\r\n              }\r\n              center={\r\n                <div>\r\n                  <MDBBtn \r\n                    className=\"action-btn next-user\" \r\n                    color=\"primary\"\r\n                    onClick={this.findTargetUser.bind(this)}\r\n                  >\r\n                    <img alt=\"Arrow, person, profile, right, user icon\" className=\"n3VNCb\" src={`${RESTAPIUrl}/public/find-user.webp`} />\r\n                  </MDBBtn>\r\n                </div>\r\n                \r\n                \r\n              }\r\n              right={\r\n                <div>\r\n                  <div className=\"navbar-right\">     \r\n                    <MDBBtn \r\n                      className=\"action-btn phone\" \r\n                      color=\"primary\"\r\n                      onClick={this.callWithVideo.bind(this, false)}\r\n                      disabled={typeof this.props.targetUser.id == 'undefined' ? true : false }\r\n                    >\r\n                      <Icon path={mdiPhone}\r\n                        size={1}\r\n                        horizontal\r\n                        vertical\r\n                        rotate={180}\r\n                      />\r\n                    </MDBBtn>\r\n                    \r\n                    <MDBBtn \r\n                      className=\"action-btn video\" \r\n                      color=\"primary\"\r\n                      onClick={this.callWithVideo.bind(this, true)}\r\n                      disabled={typeof this.props.targetUser.id == 'undefined' ? true : false }\r\n                    >\r\n                      <Icon path={mdiVideoOutline}\r\n                        size={1}\r\n                        horizontal\r\n                        vertical\r\n                        rotate={180}\r\n                      />\r\n                    </MDBBtn>\r\n                    \r\n                    <MDBDropdown>\r\n                      <MDBDropdownToggle caret color=\"primary\" className=\"action-btn\">\r\n                        <Icon path={mdiDotsVertical}\r\n                          size={1}\r\n                          horizontal\r\n                          vertical\r\n                        />\r\n                      </MDBDropdownToggle>\r\n                      <MDBDropdownMenu basic>\r\n                        <MDBDropdownItem\r\n                          onClick={()=> {this.props.onProfileModalShow(true)}}\r\n                        >\r\n                          Your Profile\r\n                        </MDBDropdownItem>\r\n                        <MDBDropdownItem\r\n                          onClick={()=> {this.props.onSearchSettingModalShow(true)}}\r\n                        >\r\n                          Search Setting\r\n                        </MDBDropdownItem>\r\n\r\n                        <MDBDropdownItem\r\n                          onClick={()=> {this.props.onReportModalShow(true)}}\r\n                          disabled={typeof this.props.targetUser.id == 'undefined' ? true : false }\r\n                        >\r\n                          Report\r\n                        </MDBDropdownItem>\r\n                        \r\n                        \r\n                        <MDBDropdownItem divider />\r\n                        \r\n                        <MDBDropdownItem\r\n                          onClick={this.props.logOut}\r\n                        >\r\n                          Log Out\r\n                        </MDBDropdownItem> \r\n\r\n                      </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                    \r\n                  </div>\r\n                </div>\r\n              }\r\n            />\r\n            {this.props.targetUser.id ? (\r\n              <div> \r\n                <MessageList\r\n                  className=\"message-list\"\r\n                  lockable={true}\r\n                  toBottomHeight={\"300\"}\r\n                  dataSource={this.props.targetUser.messages}\r\n                  downButton={true}\r\n                />\r\n                <FormGroup className=\"send-message-form\">\r\n                  <Row style={{width:\"100%\", position:\"relative\"}}>\r\n                      {/* <button\r\n                        type=\"button\"\r\n                        className=\"toggle-emoji\"\r\n                        onClick={this.toggleEmojiPicker.bind(this)}\r\n                      >\r\n                        <i class=\"far fa-smile\"></i>\r\n                      </button> */}\r\n                      <i \r\n                        className=\"toggle-emoji far fa-smile toggle-icon\"\r\n                        onClick={this.toggleEmojiPicker.bind(this)} \r\n                      ></i>\r\n                      {/* <button \r\n                        onClick={this.toggle_toolbar.bind(this)}\r\n                        className=\"font-selector\"\r\n                      >\r\n                        <MDBIcon icon=\"font\" className=\"mr-1\" size=\"lg\" />\r\n                      </button> */}\r\n                      <MDBIcon \r\n                        icon=\"palette\" \r\n                        size=\"lg\"\r\n                        onClick={this.toggle_toolbar.bind(this)}\r\n                        className=\"font-selector mr-1 toggle-icon\"\r\n                      />\r\n                      \r\n                      <Editor\r\n                        ref={this.setDomEditorRef}\r\n                        editorState={this.state.editorState}\r\n                        placeholder=\"Type a message...123123\"\r\n                        wrapperClassName=\"demo-wrapper\"\r\n                        toolbarClassName={this.state.toolbar_show ? '' : 'toggle-toolbar'}\r\n                        editorClassName=\"demo-editor\"\r\n                        keyBindingFn={this.keyBindingFunction.bind(this)}\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                        // onChange={this.onEditorChange.bind(this)}\r\n                        toolbar={{\r\n                          options: ['inline', 'colorPicker', 'fontSize', 'fontFamily',],\r\n                          inline: { \r\n                              inDropdown: false, \r\n                              options: ['bold', 'italic', 'underline'], \r\n                          },\r\n                          image: { uploadEnabled: true},\r\n                          inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n                          fontSize: {\r\n                            options: [8, 9, 10, 11, 12, 14, 16, 18, 20]\r\n                          },\r\n                        }}\r\n                      />\r\n                      \r\n                      {this.state.showColorPicker ? \r\n                      <div>\r\n                        <SketchPicker \r\n                          color={ this.state.pickerColor }\r\n                          onChangeComplete={ this.handleChangeComplete.bind(this) }\r\n                        />\r\n                        <button className=\"color-confirm\" onClick={this.onApplyColorPicker.bind(this)}>Apply</button>\r\n                        <button className=\"color-cancel\" onClick={this.hideColorPicker.bind(this)}>Cancel</button>\r\n                        <div className=\"color-picker-hide\" onClick={this.hideColorPicker.bind(this)}></div>\r\n                      </div>\r\n                      :\r\n                      null}\r\n                      \r\n\r\n                      {this.state.toolbar_show ? \r\n                        <button className=\"color-picker-toggle\" onClick={this.toggleColorPicker.bind(this)}>\r\n                          <i className=\"fas fa-eye-dropper\"></i>\r\n                        </button>\r\n                      : null}\r\n                      \r\n                      \r\n\r\n                      \r\n                      <label htmlFor=\"attachFile\" className=\"attach-file\">\r\n                        <i \r\n                          className=\"fas fa-paperclip toggle-icon \"                   \r\n                        ></i>\r\n                      </label>\r\n                      \r\n                      <input \r\n                          ref={(ref) => { this.attachFile = ref; }} \r\n                          onChange={this.onAttachFile.bind(this)} \r\n                          type=\"file\"\r\n                          id=\"attachFile\" \r\n                          accept=\".png, .jpg, .jpeg\"\r\n                      />\r\n\r\n                      <InputGroup.Button>\r\n                        <div\r\n                          disabled={!this.state.messageText}\r\n                          className=\"sendButton\"\r\n                          onClick={this.onSendClicked.bind(this)}\r\n                        >\r\n                          {/* <FontAwesomeIcon icon={faPaperPlane} color=\"white\" /> */}\r\n                          {/* <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"paper-plane\" class=\"svg-inline--fa fa-paper-plane fa-w-16 \" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" color=\"white\"><path fill=\"currentColor\" d=\"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z\"></path></svg> */}\r\n                          <svg className=\"jss4\" focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\"><path fill=\"#fff\" d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"></path><path fill=\"none\" d=\"M0 0h24v24H0z\"></path></svg>\r\n                        </div>\r\n                      </InputGroup.Button>\r\n\r\n                  </Row>\r\n                </FormGroup>\r\n              </div>\r\n            ) : (\r\n              <div className=\"waiting-container\">\r\n                <div className=\"title-box\">\r\n                  <h2>Welcome, {this.props.signedInUser.userName}!</h2><br></br>\r\n                </div>\r\n                <div className=\"body-box\">\r\n                  <p \r\n                    className=\"select-friend\"\r\n                    onClick={this.findTargetUser.bind(this)}\r\n                  >\r\n                      Select a friend to start a chat.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        \r\n          <Picker \r\n            style={this.state.showEmojiPicker? { position: 'absolute', bottom: '90px', right: '10px', opacity: '1' } : { position: 'absolute', bottom: '90px', right: '10px', opacity: '0', zIndex:'-3' }} \r\n            onSelect={this.addEmoji.bind(this)} \r\n            emojiTooltip={true}\r\n          />\r\n\r\n        { this.state.showEmojiPicker ? (\r\n          <div>            \r\n            <div className=\"emoji-back\" onClick={this.closeEmojiPicker.bind(this)}></div>\r\n          </div>\r\n        ): null }       \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./OnTyping.css\";\r\n\r\nconst OnTyping = () => {\r\n    return (\r\n        <div className=\"message-text message-text-left on-typing\">\r\n            <div id=\"circleG\">\r\n                <div id=\"circleG_1\" className=\"circleG\"></div>\r\n                <div id=\"circleG_2\" className=\"circleG\"></div>\r\n                <div id=\"circleG_3\" className=\"circleG\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OnTyping;","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardBody,\r\n    MDBInput,\r\n    MDBInputSelect,\r\n    MDBCloseIcon\r\n} from 'mdbreact';\r\n\r\nimport {\r\n    NotificationContainer,\r\n    NotificationManager\r\n} from \"react-notifications\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport { setInStorage } from \"../../utils/storage\";\r\nimport { countries } from \"../../config/country\";\r\n\r\nimport \"./ProfileBox.css\";\r\n\r\n\r\n\r\n\r\nexport default class ChatBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.myRef = React.createRef();\r\n\r\n        this.state = {\r\n            imageURL: `${RESTAPIUrl}/public/profile/${this.props.profileInfo.profile_image}`,\r\n            userName: this.props.profileInfo.userName,\r\n            age: this.props.profileInfo.age,\r\n            location: this.props.profileInfo.location,\r\n            gender: this.props.profileInfo.gender,\r\n            imageHash: this.props.imageHash\r\n        }\r\n\r\n        this.handleUploadImage = this.handleUploadImage.bind(this);\r\n        this.handleChangeProfile = this.handleChangeProfile.bind(this);\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.setState({\r\n            imageURL: `${RESTAPIUrl}/public/profile/${this.props.profileInfo.profile_image}`\r\n        });\r\n    }\r\n    handleUploadImage(ev) {\r\n        ev.preventDefault();\r\n\r\n        const data = new FormData();\r\n        data.append('file', this.uploadInput.files[0]);\r\n        data.append('fileName', this.fileName.value);\r\n\r\n        fetch(`${RESTAPIUrl}/api/profile/image`, {\r\n                method: 'POST',\r\n                body: data,\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if (json.status) {\r\n                    setInStorage('guest_signin', { token: json.token });\r\n                    this.props.updateProfile();\r\n\r\n                    // this.setState({imageHash: Date.now()});\r\n\r\n                    let decoded_token = jwt_decode(json.token);\r\n                    let signedInUser = decoded_token.user;\r\n                    // this.props.onChangeProfile(signedInUser);\r\n                    this.setState({\r\n                        imageURL: `${RESTAPIUrl}/public/profile/${signedInUser.profile_image}`,\r\n                        imageHash: Date.now()\r\n                    });\r\n                } else {\r\n                    alert(\"Server Error\");\r\n                }\r\n            })\r\n\r\n\r\n        // .then((response) => {\r\n        //   response.json().then((body) => {\r\n        //     this.setState({ imageURL: `http://localhost:5000/${body.file}` });\r\n        //   });\r\n        // });\r\n    }\r\n\r\n    handleChangeProfile(e) {\r\n        e.preventDefault();\r\n        const { userName, location, age, gender } = this.state;\r\n        const { _id } = this.props.profileInfo;\r\n        this.setState({\r\n            loginLoading: true,\r\n        });\r\n\r\n        fetch(RESTAPIUrl + '/api/profile/update', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    _id,\r\n                    userName,\r\n                    location,\r\n                    age,\r\n                    gender\r\n                }),\r\n            }).then(res => res.json())\r\n            .then(json => {\r\n                if (json.status) {\r\n                    setInStorage('guest_signin', { token: json.token });\r\n                    this.props.updateProfile();\r\n                    this.props.onProfileModalShow(false);\r\n                    NotificationManager.success(\r\n                        `${json.message}`\r\n                    );\r\n                } else {\r\n                    NotificationManager.error(\r\n                        `${json.message}`\r\n                    );\r\n                }\r\n            });\r\n    }\r\n\r\n    onProfileModalShow() {\r\n        this.props.onProfileModalShow(false);\r\n    }\r\n\r\n    handleChangeName(e) {\r\n        this.setState({ userName: e.target.value });\r\n    }\r\n\r\n    handleChangeLocation(e) {\r\n        this.setState({ location: e.target.value });\r\n    }\r\n\r\n    handleChangeAge(value) {\r\n        this.setState({ age: value });\r\n    }\r\n\r\n    handleChangeGender(e) {\r\n        this.setState({ gender: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return ( <\r\n                div >\r\n                <\r\n                NotificationContainer / >\r\n                <\r\n                MDBRow className = { `${this.props.profileContainer}` } >\r\n                <\r\n                MDBCol >\r\n                <\r\n                MDBCloseIcon onClick = { this.onProfileModalShow.bind(this) }\r\n                /> <\r\n                MDBJumbotron className = 'text-center' >\r\n\r\n                <\r\n                MDBCardBody >\r\n\r\n                <\r\n                form onSubmit = { this.handleChangeProfile } >\r\n                <\r\n                div className = \"profile-image\" >\r\n                <\r\n                img src = { `${this.state.imageURL}?${this.state.imageHash}` }\r\n                className = 'img-fluid'\r\n                alt = \"profile-img\" /\r\n                >\r\n                <\r\n                div className = \"upload-button\" >\r\n                <\r\n                label htmlFor = \"imageUpload\" > < /label> <\r\n                input ref = {\r\n                    (ref) => { this.uploadInput = ref; }\r\n                }\r\n                onChange = { this.handleUploadImage.bind(this) }\r\n                type = \"file\"\r\n                id = \"imageUpload\"\r\n                accept = \".png, .jpg, .jpeg\" /\r\n                >\r\n                <\r\n                input ref = {\r\n                    (ref) => { this.fileName = ref; }\r\n                }\r\n                value = { this.props.profileInfo.profile_image }\r\n                type = \"hidden\" /\r\n                >\r\n                <\r\n                /div> <\r\n                h4 className = \"userName\" > { this.props.profileInfo.userName } < /h4> <\r\n                h6 className = \"userInfo\" > { `${this.props.profileInfo.gender}  ${this.props.profileInfo.age}  ${this.props.profileInfo.location}` } <\r\n                /h6> <\r\n                hr > < /hr> < /\r\n                div > <\r\n                div >\r\n\r\n                <\r\n                MDBInput label = \"Your Name\"\r\n                ref = {\r\n                    (ref) => { this.userName = ref; }\r\n                }\r\n                group type = \"text\"\r\n                onChange = { this.handleChangeName.bind(this) }\r\n                validate error = \"wrong\"\r\n                success = \"right\"\r\n                value = { this.state.userName }\r\n                required disabled /\r\n                >\r\n\r\n                <\r\n                label className = \"form-label\" > Your Location < /label> <\r\n                select className = \"browser-default custom-select\"\r\n                id = \"location\"\r\n                name = \"location\"\r\n                value = { this.state.location }\r\n                onChange = { this.handleChangeLocation.bind(this) } >\r\n                <\r\n                option > Choose your location < /option> {\r\n                countries.map((object, i) => {\r\n                    return <option value = { object }\r\n                    key = { i } > { object } < /option>\r\n                })\r\n            } <\r\n            /select>\r\n\r\n        <\r\n        label className = \"form-label\" > Your Age < /label> <\r\n        MDBInputSelect id = \"age\"\r\n        name = \"age\"\r\n        getValue = { this.handleChangeAge.bind(this) }\r\n        min = { 13 }\r\n        max = { 99 }\r\n        value = { this.state.age }\r\n        className = 'mb-2' /\r\n            >\r\n\r\n            <\r\n            label className = \"form-label\" > Your Gender < /label> <\r\n        div className = \"radio-group\" >\r\n            <\r\n            div className = \"radio\" >\r\n            <\r\n            input id = \"radio-1\"\r\n        name = \"radio\"\r\n        type = \"radio\"\r\n        value = \"Male\"\r\n        onChange = { this.handleChangeGender.bind(this) }\r\n        checked = { this.state.gender === 'Male' }\r\n        disabled / >\r\n            <\r\n            label htmlFor = \"radio-1\"\r\n        className = \"radio-label\" > Male < /label> < /\r\n            div >\r\n\r\n            <\r\n            div className = \"radio\" >\r\n            <\r\n            input id = \"radio-2\"\r\n        name = \"radio\"\r\n        type = \"radio\"\r\n        value = \"Female\"\r\n        onChange = { this.handleChangeGender.bind(this) }\r\n        checked = { this.state.gender === 'Female' }\r\n        disabled / >\r\n            <\r\n            label htmlFor = \"radio-2\"\r\n        className = \"radio-label\" > Female < /label> < /\r\n            div > <\r\n            /div>\r\n\r\n        <\r\n        div className = \"text-center pt-3 mb-3\" >\r\n            <\r\n            MDBBtn type = \"submit\"\r\n        color = \"primary\"\r\n        size = \"sm\" >\r\n            Apply <\r\n            /MDBBtn>\r\n\r\n        <\r\n        MDBBtn color = \"cyan\"\r\n        size = \"sm\"\r\n        onClick = { this.onProfileModalShow.bind(this) } >\r\n            Close <\r\n            /MDBBtn> < /\r\n            div >\r\n\r\n            <\r\n            /div> < /\r\n            form >\r\n\r\n            <\r\n            /MDBCardBody> < /\r\n            MDBJumbotron > <\r\n            /MDBCol> < /\r\n            MDBRow > <\r\n            /div>\r\n    );\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport \"./FullScreenImage.css\";\r\n\r\nexport default class FullScreenImage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let imageUrl = this.props.imageUrl;\r\n        let downloadPath = imageUrl.split(\"public/\")[1];\r\n        this.state = {\r\n            downloadPath: downloadPath\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    onShowImageFullScreen() {\r\n        this.props.onShowImageFullScreen();\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                <div className=\"full-image\">\r\n                    <span \r\n                        onClick={this.onShowImageFullScreen.bind(this)}\r\n                        className=\"close-btn\"    \r\n                    >\r\n                        X\r\n                    </span>\r\n                    <a href={this.props.imageUrl} download=\"image-file\" className=\"download-btn\">\r\n                        <i class=\"fa fa-download\"></i>\r\n                    </a>\r\n                    <img src={this.props.imageUrl} alt=\"\"></img>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardTitle,\r\n    MDBCardBody,\r\n    MDBCloseIcon\r\n} from 'mdbreact';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport { countries } from \"../../config/country\";\r\nimport \"./SearchSettingBox.css\";\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nexport default class SearchSettingBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const temp = this.props.searchSetting\r\n        this.state = {\r\n            searchSetting: temp,\r\n        }\r\n\r\n        this.handleChangeGender = this.handleChangeGender.bind(this);\r\n    }\r\n\r\n    handleChangeSearchSetting(e) {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    handleChangeGender(e) {\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.gender = e.target.value;\r\n        this.setState({ searchSetting });\r\n    }\r\n\r\n    handleChangeLocation(e) {\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.location = e.target.value;\r\n        this.setState({ searchSetting });\r\n    }\r\n\r\n    handleChangeAge(value) {\r\n        let searchSetting = this.state.searchSetting;\r\n        searchSetting.ageMin = value[0];\r\n        searchSetting.ageMax = value[1];\r\n        this.setState({ searchSetting });\r\n\r\n        // this.setState({\r\n        //     ageMin: value[0],\r\n        //     ageMax: value[1],\r\n        // })\r\n    }\r\n    onSearchSettingModalShow() {\r\n        this.props.onSearchSettingModalShow(false);\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <MDBRow className = {`${this.props.searchContainer}` } >\r\n                    <MDBCol>\r\n                        <MDBCloseIcon onClick = { this.onSearchSettingModalShow.bind(this) }/>\r\n\r\n                        <MDBJumbotron className = 'text-center' >\r\n                            <MDBCardTitle className = \"card-title h4 pb-2\" >\r\n                                <strong > Search Filter Setting </strong> \r\n                            </MDBCardTitle > \r\n                            \r\n                            <MDBCardBody >\r\n                                <form onSubmit = { this.handleChangeSearchSetting.bind(this) } >\r\n                                    <div>\r\n                                        <div className = \"form-group\" >\r\n                                            <label className = \"form-label\" > Location </label> \r\n                                            <select className = \"browser-default custom-select\" id = \"location1\" name = \"location1\" value = { this.props.searchSetting.location } onChange = { this.handleChangeLocation.bind(this) } >\r\n                                                <option value = \"\"> All </option> \r\n                                                {countries.map((object, i) => \r\n                                                    {\r\n                                                        return <option value = { object } key = { i } > { object } </option>\r\n                                                    })\r\n                                                } \r\n                                            </select> \r\n                                        </div >\r\n\r\n                                        <div className = \"form-group\" >\r\n                                            <label className = \"form-label\"> Age Range </label> \r\n                                            <Range min = { 13 } max = { 99 } defaultValue = { [this.props.searchSetting.ageMin, this.props.searchSetting.ageMax]} tipFormatter = { value => `${value}` } onChange = { this.handleChangeAge.bind(this) }/> \r\n                                        </div >\r\n\r\n                                        <div className = \"form-group\" >\r\n                                            <label className = \"form-label\" > Gender </label> \r\n                                            <div className = \"radio-group\" >\r\n                                                <div className = \"radio\" >\r\n                                                    <input id = \"radio1\"\r\n                                                        name = \"radio1\"\r\n                                                        type = \"radio\"\r\n                                                        value = \"\"\r\n                                                        onChange = { this.handleChangeGender.bind(this) }\r\n                                                        checked = { this.state.searchSetting.gender === '' }\r\n                                                    /> \r\n                                            \r\n                                                    <label htmlFor = \"radio1\" className = \"radio-label\" > All </label> \r\n                                                </div>\r\n\r\n                                                <div className = \"radio\" >\r\n                                                    <input id = \"radio2\"\r\n                                                        name = \"radio1\"\r\n                                                        type = \"radio\"\r\n                                                        value = \"Male\"\r\n                                                        onChange = { this.handleChangeGender.bind(this) }\r\n                                                        checked = { this.state.searchSetting.gender === 'Male' }\r\n                                                    /> \r\n                                                    <label htmlFor = \"radio2\" className = \"radio-label\" > Male </label> \r\n                                                </div>\r\n\r\n                                                <div className = \"radio\">\r\n                                                    <input id = \"radio3\" name = \"radio1\"\r\n                                                        type = \"radio\"\r\n                                                        value = \"Female\"\r\n                                                        onChange = { this.handleChangeGender.bind(this) }\r\n                                                        checked = { this.state.searchSetting.gender === 'Female' }\r\n                                                    /> \r\n                                                    <label htmlFor = \"radio3\" className = \"radio-label\" > Female </label> \r\n                                                </div>\r\n                                            </div> \r\n                                        </div>\r\n\r\n                                        <div className = \"text-center pt-3 mb-3\" >\r\n\r\n                                            <MDBBtn \r\n                                                color = \"cyan\" \r\n                                                size = \"sm\"\r\n                                                onClick = { this.onSearchSettingModalShow.bind(this) } \r\n                                            >\r\n                                                Close \r\n                                            </MDBBtn> \r\n                                        </div>\r\n                                    </div> \r\n                                </form >\r\n\r\n                            </MDBCardBody> \r\n                        </MDBJumbotron> \r\n                    </MDBCol> \r\n                </MDBRow > \r\n            </div>\r\n    );\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    MDBJumbotron,\r\n    MDBBtn,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCardTitle,\r\n    MDBCardBody,\r\n    MDBCloseIcon,\r\n} from 'mdbreact';\r\nimport {\r\n    NotificationManager\r\n} from \"react-notifications\";\r\n\r\nimport { RESTAPIUrl } from \"../../config/config\";\r\nimport \"./ReportBox.css\";\r\n\r\nexport default class ReportBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reportList: ['Spam', 'Inappropriate or Vulgar Content', 'Illegal Content', 'Abusive behaviour', 'Other'],\r\n            reportReason: '',\r\n            inputTextActive: false,\r\n        }\r\n\r\n    }\r\n\r\n    handleReport(e) {\r\n        e.preventDefault();\r\n        if( typeof this.props.targetUser._id == 'undefined' ) {            \r\n            NotificationManager.error(\r\n                \"Please select target user\"\r\n            );\r\n            return false;\r\n        }\r\n        fetch(RESTAPIUrl + '/api/report', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                reportUser: this.props.signedInUser,\r\n                targetUser: this.props.targetUser,\r\n                reason: this.state.reportReason\r\n            }),\r\n        }).then(res =>res.json())\r\n        .then(json => {\r\n            if(json.status) {\r\n                NotificationManager.success(\r\n                    json.message\r\n                );\r\n            } else {\r\n                NotificationManager.error(\r\n                    json.message\r\n                );\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleChangeReportSetting(e) {\r\n        if(e.target.value !== \"Other\") {\r\n            this.setState({\r\n                reportReason: e.target.value,\r\n                inputTextActive: false,\r\n            })\r\n        } else {\r\n            this.setState({inputTextActive: true});\r\n        }\r\n    }\r\n\r\n    handleOtherReason(e) {\r\n        this.setState({reportReason: e.target.value});\r\n    }\r\n\r\n    onReportModalShow() {\r\n        this.props.onReportModalShow(false);\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <MDBRow  className = {` ${this.props.reportContainer} `} >\r\n                    <MDBCol>\r\n                        <MDBCloseIcon onClick = { this.onReportModalShow.bind(this) }/>\r\n\r\n                        <MDBJumbotron className = 'text-center' >\r\n                            <MDBCardTitle className = \"card-title h4 pb-2\" >\r\n                                <strong > Report User </strong> \r\n                            </MDBCardTitle > \r\n                            <hr></hr>\r\n                            <MDBCardBody >\r\n                                <form onSubmit = { this.handleReport.bind(this) } >\r\n                                    <div>\r\n                                        <div className = \"form-group\" >\r\n                                            {this.state.reportList.map((object, i) => \r\n                                                {\r\n                                                    return (\r\n                                                        <div className = \"radio\" key={`${object}-container`}>\r\n                                                            <input \r\n                                                                id = {`report-radio${i}`}\r\n                                                                name = 'report-radio'\r\n                                                                type = \"radio\"\r\n                                                                value = {object}\r\n                                                                key = {object}\r\n                                                                onChange = { this.handleChangeReportSetting.bind(this) }\r\n                                                            /> \r\n                                                    \r\n                                                            <label htmlFor = {`report-radio${i}`} className = \"radio-label\" > {object} </label> \r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            {this.state.inputTextActive?\r\n                                                <div className=\"form-group report-reason\">\r\n                                                    <textarea\r\n                                                        className=\"form-control\"\r\n                                                        id=\"exampleFormControlTextarea1\"\r\n                                                        rows=\"3\"\r\n                                                        onChange={ this.handleOtherReason.bind(this) }\r\n                                                        required\r\n                                                    />\r\n                                                </div>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            \r\n                                            \r\n                                        </div>\r\n\r\n                                        <div className = \"text-center pt-3 mb-3\" >\r\n                                            <MDBBtn\r\n                                                type=\"submit\"\r\n                                                color = \"cyan\" \r\n                                                size = \"sm\"\r\n                                            >\r\n                                                Report\r\n                                            </MDBBtn> \r\n                                            <MDBBtn \r\n                                                color = \"cyan\" \r\n                                                size = \"sm\"\r\n                                                onClick = { this.onReportModalShow.bind(this) } \r\n                                            >\r\n                                                Close \r\n                                            </MDBBtn> \r\n                                        </div>\r\n                                    </div> \r\n                                </form >\r\n\r\n                            </MDBCardBody> \r\n                        </MDBJumbotron> \r\n                    </MDBCol> \r\n                </MDBRow > \r\n            </div>\r\n    );\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport Glyphicon from \"react-bootstrap/lib/Glyphicon\";\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\n\r\n/**\r\n *\r\n * Renders a Error modal if app encounter any error.\r\n */\r\n\r\nexport default class ErrorModal extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show}>\r\n        <Modal.Header>\r\n          <Modal.Title>Error</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <h1 className=\"text-center\">\r\n            <Glyphicon glyph=\"alert\" />\r\n          </h1>\r\n          <h5 className=\"text-center\">{this.props.errorMessage}</h5>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Glyphicon from \"react-bootstrap/lib/Glyphicon\";\r\nimport Modal from \"react-bootstrap/lib/Modal\";\r\n\r\n/**\r\n *\r\n * Renders a loader modal.\r\n */\r\n\r\nexport default class LoadingModal extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show}>\r\n        <Modal.Body>\r\n          <h1 className=\"text-center\">\r\n            <Glyphicon glyph=\"refresh\" />\r\n          </h1>\r\n          <h5 className=\"text-center\">Loading...</h5>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import io from 'socket.io-client';\r\nimport { RESTAPIUrl } from \"../../config/config\"\r\n\r\nconst socket = io.connect(`${RESTAPIUrl}`);\r\n\r\nexport default socket;","import _ from 'lodash';\r\n\r\nclass Emitter {\r\n  constructor() {\r\n    this.events = {};\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    if (this.events[event]) {\r\n      this.events[event].forEach((fn) => fn(...args));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  on(event, fn) {\r\n    if (this.events[event]) this.events[event].push(fn);\r\n    else this.events[event] = [fn];\r\n    return this;\r\n  }\r\n\r\n  off(event, fn) {\r\n    if (event && _.isFunction(fn)) {\r\n      const listeners = this.events[event];\r\n      const index = listeners.findIndex((_fn) => _fn === fn);\r\n      listeners.splice(index, 1);\r\n    } else this.events[event] = [];\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Emitter;\r\n","import _ from 'lodash';\r\nimport Emitter from './Emitter';\r\n\r\n/**\r\n * Manage all media devices\r\n */\r\nclass MediaDevice extends Emitter {\r\n  /**\r\n   * Start media devices and send stream\r\n   */\r\n  start() {\r\n    const constraints = {\r\n      video: {\r\n        facingMode: 'user',\r\n        height: { min: 360, ideal: 720, max: 1080 }\r\n      },\r\n      audio: true\r\n    };\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia(constraints)\r\n      .then((stream) => {\r\n        this.stream = stream;\r\n        this.emit('stream', stream);\r\n      })\r\n      .catch((err) => {\r\n        if (err instanceof DOMException) {\r\n          alert('Cannot open webcam and/or microphone');\r\n        } else {\r\n          console.log(err);\r\n        }\r\n      });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Turn on/off a device\r\n   * @param {String} type - Type of the device\r\n   * @param {Boolean} [on] - State of the device\r\n   */\r\n  toggle(type, on) {\r\n    const len = arguments.length;\r\n    if (this.stream) {\r\n      this.stream[`get${type}Tracks`]().forEach((track) => {\r\n        const state = len === 2 ? on : !track.enabled;\r\n        _.set(track, 'enabled', state);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Stop all media track of devices\r\n   */\r\n  stop() {\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach((track) => track.stop());\r\n    }\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default MediaDevice;\r\n","import MediaDevice from './MediaDevice';\r\nimport Emitter from './Emitter';\r\nimport socket from './socket';\r\n\r\n// const PC_CONFIG = { iceServers: [{ urls: ['stun:stun.l.google.com:19302'] }] };\r\nconst PC_CONFIG = {\r\n    iceServers: [{\r\n        url: 'turn:numb.viagenie.ca',\r\n        credential: 'nothingbutthebest',\r\n        username: 'bluesky410219@gmail.com'\r\n    }]\r\n};\r\n\r\nclass PeerConnection extends Emitter {\r\n    /**\r\n     * Create a PeerConnection.\r\n     * @param {String} friendID - ID of the friend you want to call.\r\n     */\r\n    constructor(friendID) {\r\n        super();\r\n        this.pc = new RTCPeerConnection(PC_CONFIG);\r\n        this.pc.onicecandidate = (event) => socket.emit('call', {\r\n            to: this.friendID,\r\n            candidate: event.candidate\r\n        });\r\n        this.pc.ontrack = (event) => this.emit('peerStream', event.streams[0]);\r\n\r\n        this.mediaDevice = new MediaDevice();\r\n        this.friendID = friendID;\r\n    }\r\n\r\n    /**\r\n     * Starting the call\r\n     * @param {Boolean} isCaller\r\n     * @param {Object} config - configuration for the call {audio: boolean, video: boolean}\r\n     */\r\n    start(isCaller, config) {\r\n        this.mediaDevice\r\n            .on('stream', (stream) => {\r\n                stream.getTracks().forEach((track) => {\r\n                    this.pc.addTrack(track, stream);\r\n                });\r\n                this.emit('localStream', stream);\r\n                if (isCaller) socket.emit('request', { to: this.friendID });\r\n                else this.createOffer();\r\n            })\r\n            .start(config);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Stop the call\r\n     * @param {Boolean} isStarter\r\n     */\r\n    stop(isStarter) {\r\n        if (isStarter) {\r\n            socket.emit('end', { to: this.friendID });\r\n        }\r\n        this.mediaDevice.stop();\r\n        this.pc.close();\r\n        this.pc = null;\r\n        this.off();\r\n        return this;\r\n    }\r\n\r\n    createOffer() {\r\n        this.pc.createOffer()\r\n            .then(this.getDescription.bind(this))\r\n            .catch((err) => console.log(err));\r\n        return this;\r\n    }\r\n\r\n    createAnswer() {\r\n        this.pc.createAnswer()\r\n            .then(this.getDescription.bind(this))\r\n            .catch((err) => console.log(err));\r\n        return this;\r\n    }\r\n\r\n    getDescription(desc) {\r\n        this.pc.setLocalDescription(desc);\r\n        socket.emit('call', { to: this.friendID, sdp: desc });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} sdp - Session description\r\n     */\r\n    setRemoteDescription(sdp) {\r\n        const rtcSdp = new RTCSessionDescription(sdp);\r\n        this.pc.setRemoteDescription(rtcSdp);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} candidate - ICE Candidate\r\n     */\r\n    addIceCandidate(candidate) {\r\n        if (candidate) {\r\n            const iceCandidate = new RTCIceCandidate(candidate);\r\n            this.pc.addIceCandidate(iceCandidate);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default PeerConnection;","import React, { useState, useEffect, useRef, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport \"./CallWindow.css\";\r\n\r\n// const getButtonClass = (icon, enabled) => classnames(`btn-action fa ${icon}`, { disable: !enabled });\r\n\r\n// function CallWindow({ peerSrc, localSrc, config, mediaDevice, status, endCall }) {\r\n//   const peerVideo = useRef(null);\r\n//   const localVideo = useRef(null);\r\n//   const [video, setVideo] = useState(config.video);\r\n//   const [audio, setAudio] = useState(config.audio);\r\n\r\n//   useEffect(() => {\r\n//     if (peerVideo.current && peerSrc) peerVideo.current.srcObject = peerSrc;\r\n//     if (localVideo.current && localSrc) localVideo.current.srcObject = localSrc;\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     if (mediaDevice) {\r\n//       mediaDevice.toggle('Video', video);\r\n//       mediaDevice.toggle('Audio', audio);\r\n//     }\r\n//   });\r\n\r\n//   /**\r\n//    * Turn on/off a media device\r\n//    * @param {String} deviceType - Type of the device eg: Video, Audio\r\n//    */\r\n//   const toggleMediaDevice = (deviceType) => {\r\n//     if (deviceType === 'video') {\r\n//       setVideo(!video);\r\n//       mediaDevice.toggle('Video');\r\n//     }\r\n//     if (deviceType === 'audio') {\r\n//       setAudio(!audio);\r\n//       mediaDevice.toggle('Audio');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classnames('call-window', this.props.status)}>\r\n//       <div className=\"video-contact\">\r\n//         <video id=\"peerVideo\" ref={(ref) => { this.peerVideo = ref; }} autoPlay />\r\n//       </div>\r\n\r\n//       <div className=\"video-user\">\r\n//         <video id=\"localVideo\" ref={(ref) => { this.localVideo = ref; }} autoPlay muted />  \r\n//       </div>      \r\n      \r\n//       <div className=\"video-control\">\r\n//         <button\r\n//           key=\"btnVideo\"\r\n//           type=\"button\"\r\n//           className={getButtonClass('fa-video', video)}\r\n//           onClick={() => toggleMediaDevice('video')}\r\n//         />\r\n//         <button\r\n//           key=\"btnAudio\"\r\n//           type=\"button\"\r\n//           className={getButtonClass('fa-microphone', audio)}\r\n//           onClick={() => toggleMediaDevice('audio')}\r\n//         />\r\n//         <button\r\n//           type=\"button\"\r\n//           className=\"btn-action hangup fa fa-phone\"\r\n//           onClick={() => endCall(true)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nconst getButtonClass = (icon, enabled) => classnames(`btn-action fa ${icon}`, { disable: !enabled });\r\n\r\nexport default class CallWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            video: this.props.config.video,\r\n            audio: this.props.config.audio\r\n        }\r\n\r\n        this.peerVideo = React.createRef();\r\n        this.peerVideo = React.createRef();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      console.log(\"video call started\");\r\n      if (this.peerVideo.current && this.props.peerSrc) this.peerVideo.current.srcObject = this.props.peerSrc;\r\n      if (this.localVideo.current && this.props.localSrc) this.localVideo.current.srcObject = this.props.localSrc;\r\n      \r\n      if (this.props.mediaDevice) {\r\n        this.props.mediaDevice.toggle('Video', this.state.video);\r\n        this.props.mediaDevice.toggle('Audio', this.state.audio);\r\n      }\r\n    }\r\n\r\n    toggleMediaDevice(deviceType) {\r\n      if (deviceType === 'video') {\r\n        this.setState({video:!this.state.video});\r\n        this.props.mediaDevice.toggle('Video');\r\n      }\r\n      if (deviceType === 'audio') {\r\n        this.setState({audio:!this.state.audio});\r\n        this.props.mediaDevice.toggle('Audio');\r\n      }\r\n    };\r\n\r\n    \r\n   \r\n\r\n    render() {\r\n      return (\r\n        <div className={classnames('call-window', this.props.status)}>\r\n          <div className=\"video-contact\">\r\n            <video id=\"peerVideo\" ref={(ref) => { this.peerVideo = ref; }} autoPlay />\r\n          </div>\r\n    \r\n          <div className=\"video-user\">\r\n            <video id=\"localVideo\" ref={(ref) => { this.localVideo = ref; }} autoPlay muted />  \r\n          </div>      \r\n          \r\n          <div className=\"video-control\">\r\n            <button\r\n              key=\"btnVideo\"\r\n              type=\"button\"\r\n              className={getButtonClass('fa-video', this.state.video)}\r\n              onClick={() => this.toggleMediaDevice.bind(this, 'video')}\r\n            />\r\n            <button\r\n              key=\"btnAudio\"\r\n              type=\"button\"\r\n              className={getButtonClass('fa-microphone', this.state.audio)}\r\n              onClick={() => this.toggleMediaDevice.bind(this, 'audio')}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-action hangup fa fa-phone\"\r\n              onClick={() => this.props.endCall(true)}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport './CallModal.css';\r\n\r\n\r\nfunction CallModal({ status, callFrom, startCall, rejectCall, contactUser, userAvatar }) {\r\n  const acceptWithVideo = (video) => {\r\n    const config = { audio: true, video };\r\n    return () => startCall(false, callFrom, config);\r\n  };\r\n\r\n  return (\r\n    <div className={classnames('call-modal', status)}>\r\n      <div className=\"target-avatar\">\r\n        <img src={`${RESTAPIUrl}/public/profile/${userAvatar}`} alt=\"contact-user\"></img>\r\n      </div>\r\n      <p>\r\n        <span className=\"caller\">{`${contactUser}`}</span>\r\n      </p>\r\n      <span className=\"incoming\">Incoming call...</span>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action fa fa-video\"\r\n        onClick={acceptWithVideo(true)}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action fa fa-phone\"\r\n        onClick={acceptWithVideo(false)}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-action hangup fa fa-phone\"\r\n        onClick={rejectCall}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nCallModal.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  callFrom: PropTypes.string.isRequired,\r\n  startCall: PropTypes.func.isRequired,\r\n  rejectCall: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CallModal;","import React, { Component } from \"react\";\r\nimport ChatBox from \"../../components/ChatBox\";\r\nimport OnTyping from \"../../components/OnTyping/OnTyping\";\r\nimport ProfileBox from \"../../components/ProfileBox/ProfileBox\";\r\nimport FullScreenImage from \"../../components/FullScreenImage/FullScreenImage\";\r\nimport SearchSettingBox from \"../../components/SearchSettingBox/SearchSettingBox\";\r\nimport ReportBox from \"../../components/ReportBox/ReportBox\";\r\nimport ErrorModal from \"../../components/ErrorModal\";\r\nimport LoadingModal from \"../../components/LoadingModal\";\r\nimport \"react-chat-elements/dist/main.css\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport axios from \"axios\";\r\nimport { getFromStorage } from '../../utils/storage';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport renderHtml from 'react-render-html';\r\nimport { RESTAPIUrl } from \"../../config/config\";\r\nimport \"./Chat.css\";\r\n/**\r\n * Fetches socket server URL from env\r\n */\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nimport _ from 'lodash';\r\nimport socket from './socket';\r\nimport PeerConnection from './PeerConnection';\r\n// import MainWindow from './MainWindow';\r\n// import CallWindow from './CallWindow';\r\n// import CallModal from './CallModal';\r\nimport CallWindow from '../../components/CallWindow/CallWindow';\r\nimport CallModal from '../../components/CallModal/CallModal';\r\nimport { MDBBtn } from \"mdbreact\";\r\n/**\r\n * App Component\r\n *\r\n * initiaites Socket connection and handle all cases like disconnected,\r\n * reconnected again so that user can send messages when he is back online\r\n *\r\n * handles Error scenarios if requests from Axios fails.\r\n *\r\n */\r\n\r\n//  Get the token information from local storage and get user's information using decode\r\nconst obj = getFromStorage('guest_signin');\r\nif(obj && obj.token) {\r\n    var decoded_token = jwt_decode(obj.token);\r\n    var signedInUser = decoded_token.user;\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  socket = null;\r\n  constructor() {\r\n    super();\r\n\r\n    const obj = getFromStorage('guest_signin');\r\n    if(obj && obj.token) {\r\n        var decoded_token = jwt_decode(obj.token);\r\n        var signedInUser = decoded_token.user;\r\n    }\r\n\r\n    this.state = {\r\n      signInModalShow: false,\r\n      users: [], // Avaiable users for signing-in\r\n      userChatData: {}, // this contains users from which signed-in user can chat and its message data.\r\n      user: null, // Signed-In User\r\n      selectedUserIndex: 1,\r\n      profileModalShow: '',\r\n      searchModalShow: '',\r\n      reportModalShow: '',\r\n      error: false,\r\n      errorMessage: \"\",\r\n      targetUser: '',\r\n      blackUsersList: [signedInUser._id],\r\n      signedInUser: signedInUser,\r\n      searchSetting: {\r\n        location: '',\r\n        gender: '',\r\n        ageMin: 13,\r\n        ageMax: 99,\r\n      },\r\n      onTyping: false,\r\n      showImageFullScreen: false,\r\n      confirmRemoveOldSession: false,\r\n      imageHash: Date.now(),\r\n\r\n      // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n      // clientId: '',\r\n      callWindow: '',\r\n      callModal: '',\r\n      callFrom: '',\r\n      localSrc: null,\r\n      peerSrc: null,\r\n\r\n      config: null,\r\n    \r\n    };\r\n\r\n\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    this.pc = {};\r\n    // this.config = null;\r\n    this.startCallHandler = this.startCall.bind(this);\r\n    this.endCallHandler = this.endCall.bind(this);\r\n    this.rejectCallHandler = this.rejectCall.bind(this);\r\n  }\r\n  \r\n  \r\n  /**\r\n   *\r\n   * Setups Axios to monitor XHR errors.\r\n   * Initiates and listen to socket.\r\n   * fetches User's list from backend to populate.\r\n   */\r\n\r\n  componentDidMount() {\r\n    this.verifyAccount();\r\n    // this.initAxios();\r\n    this.initSocketConnection();\r\n    this.createSocketRoom();\r\n    this.setupSocketListeners();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var imgObj = document.getElementsByTagName(\"img\");\r\n    let that = this;\r\n    for (var i = 0 ; i < imgObj.length; i++) {\r\n      imgObj[i].addEventListener('click' , function() {\r\n        if(this.hasAttribute('data_group')) {\r\n          console.log(\"this is attach file property\", this.attributes.getNamedItem(\"src\").value)\r\n          \r\n          that.setState({\r\n            showImageFullScreen: true,\r\n            attachFileUrl: this.attributes.getNamedItem(\"src\").value\r\n          });\r\n        }\r\n\r\n      }) ; \r\n    }\r\n  }\r\n\r\n  verifyAccount() {\r\n    const obj = getFromStorage('guest_signin');\r\n    \r\n    fetch(RESTAPIUrl + '/api/guest/verify', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        token: obj.token\r\n      }),\r\n    })\r\n    .then(res =>res.json())\r\n    .then(json => {\r\n      if(!json.status) {\r\n        localStorage.clear();\r\n        this.props.history.push(\"/\");\r\n      }\r\n    })\r\n  }\r\n\r\n  initSocketConnection() {\r\n    // this.socket = io.connect(SOCKET_URI);\r\n    this.socket = socket;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Checks if request from axios fails\r\n   * and if it does then shows error modal.\r\n   */\r\n  initAxios() {\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        this.setState({ loading: true });\r\n        return config;\r\n      },\r\n      error => {\r\n        this.setState({ loading: false });\r\n        this.setState({\r\n          errorMessage: `Couldn't connect to server. try refreshing the page.`,\r\n          error: true\r\n        });\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    axios.interceptors.response.use(\r\n      response => {\r\n        this.setState({ loading: false });\r\n        return response;\r\n      },\r\n      error => {\r\n        this.setState({ loading: false });\r\n        this.setState({\r\n          errorMessage: `Some error occured. try after sometime`,\r\n          error: true\r\n        });\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Shows error if client gets disconnected.\r\n   */\r\n  onClientDisconnected() {\r\n    NotificationManager.error(\r\n      \"Connection Lost from server please check your connection.\",\r\n      \"Error!\"\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Established new connection if reconnected.\r\n   */\r\n  onReconnection() {\r\n    if (this.state.user) {\r\n      this.socket.emit(\"sign-in\", this.state.user);\r\n      NotificationManager.success(\"Connection Established.\", \"Reconnected!\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Create room when user enter chat router\r\n   */\r\n  createSocketRoom() {\r\n    this.socket.emit(\"create_room\", this.state.signedInUser);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Get target user to chat\r\n   */\r\n  findTargetUser() {\r\n    let findTargetQuery = {\r\n        blackUsersList: this.state.blackUsersList,\r\n        searchSetting: this.state.searchSetting,\r\n        signedInUser: this.state.signedInUser,\r\n        prevTargetUser: this.state.targetUser,\r\n    };\r\n    this.socket.emit(\"find_target\", findTargetQuery);\r\n  }\r\n\r\n  onRemoveOldSession() {\r\n    this.setState({\r\n      confirmRemoveOldSession: true,\r\n      targetUser: '',\r\n      userChatData: {}\r\n    },() => {\r\n      this.socket.emit('confirm_remove_old_session', this.state.signedInUser); \r\n    });       \r\n  }\r\n\r\n  onConfirmRemoveOldSession() {\r\n    // this.socket.emit('confirm_remove_old_session', this.state.signedInUser);\r\n    localStorage.clear();\r\n    this.setState({confirmRemoveOldSession: false});\r\n    \r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  onFindTargetUser(targetUser) {\r\n    // Add current target user to black user list\r\n    let blackUsersList = this.state.blackUsersList;\r\n    blackUsersList.push(targetUser._id);\r\n    this.setState({blackUsersList});\r\n    \r\n    let userChatData = {\r\n        id: targetUser._id,\r\n        name: targetUser.userName,\r\n        profile_image: targetUser.profile_image,\r\n        gender: targetUser.gender,\r\n        location: targetUser.location,\r\n        age: targetUser.age\r\n    }\r\n    \r\n    // this.setState({userChatData});\r\n    this.setState({ userChatData,targetUser }, () => {\r\n      let message = {\r\n        to: this.state.signedInUser._id,\r\n        message: {\r\n          type: \"text\",\r\n          date: +new Date(),\r\n          text: `<span style=\"color: blue;\">You are now connected to ${this.state.targetUser.userName}<br>${this.state.targetUser.gender} ${this.state.targetUser.age} ${this.state.targetUser.location}</span>`,\r\n          className: \"message\"\r\n        },\r\n        from: this.state.targetUser._id\r\n      };\r\n      this.socket.emit(\"message\", message);\r\n    });\r\n    \r\n    // This is used for backed global variable (target_id     )\r\n    this.socket.emit(\"confirm-find_target\", this.state.targetUser);\r\n  }\r\n\r\n  onSearchNone() {\r\n    NotificationManager.error(\r\n      `Sorry your search did not have any results. Please widen your search`\r\n    );\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}}); \r\n  }\r\n\r\n  onAvailableNone() {\r\n    console.log(\"already contacted with all users\");\r\n    NotificationManager.error(\r\n      `You have already contacted with all online users. Try search again`\r\n    );\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}}); \r\n  }\r\n  \r\n  onIgnore() {\r\n    // console.log(\"You are ignored from\", this.state.targetUser);\r\n    // Ignored Message handling\r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}});\r\n  }\r\n  /**\r\n   *\r\n   * Setup all listeners\r\n   */\r\n\r\n  setupSocketListeners() {\r\n    this.socket.on(\"message\", this.onMessageRecieved.bind(this));\r\n    this.socket.on(\"reconnect\", this.onReconnection.bind(this));\r\n    this.socket.on(\"disconnect\", this.onClientDisconnected.bind(this));\r\n    //////\r\n    this.socket.on(\"remove_old_session\", this.onRemoveOldSession.bind(this));\r\n    this.socket.on(\"find_target\", this.onFindTargetUser.bind(this));\r\n    this.socket.on(\"search-none\", this.onSearchNone.bind(this));\r\n    this.socket.on(\"available-none\", this.onAvailableNone.bind(this));\r\n    this.socket.on(\"ignore\", this.onIgnore.bind(this));\r\n    this.socket.on(\"on-typing\", this.onTargetUserTyping.bind(this));\r\n    this.socket.on(\"target-disconnect\", this.onTargetDisconnect.bind(this));\r\n    this.socket.on(\"target-logout\", this.onTargetLogout.bind(this));\r\n    this.socket.on(\"log-out\", this.onLogOut.bind(this));\r\n\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    this.socket\r\n      // .on('init', ({ id: clientId }) => {\r\n      //   document.title = `${clientId} - VideoCall`;\r\n      //   this.setState({ clientId });\r\n      // })\r\n\r\n      //@@@@@@@@@@ Remove the callfrom. It's not needed\r\n      .on('request', ({ from: callFrom }) => {\r\n        this.setState({ callModal: 'active', callFrom });\r\n      })\r\n      .on('call', (data) => {\r\n        if (data.sdp) {\r\n          this.pc.setRemoteDescription(data.sdp);\r\n          if (data.sdp.type === 'offer') this.pc.createAnswer();\r\n        } else this.pc.addIceCandidate(data.candidate);\r\n      })\r\n      .on('end', this.endCall.bind(this, false))\r\n      .emit('init');\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {MessageRecievedFromSocket} message\r\n   *\r\n   * Triggered when message is received.\r\n   * It can be a message from user himself but on different session (Tab).\r\n   * so it decides which is the position of the message \"right\" or \"left\".\r\n   *\r\n   * increments unread count and appends in the messages array to maintain Chat History\r\n   */\r\n  customeRenderAddCamp() {\r\n      // console.log('param');\r\n  }\r\n\r\n  onMessageRecieved(message) {\r\n      // console.log(\"this is message response\", message);\r\n    var userChatData = this.state.userChatData;    \r\n    var messageData = message.message;\r\n    var messageDataText = messageData.text;\r\n    \r\n    if(messageDataText === '<p></p>\\n')\r\n      return false;\r\n      \r\n    // Handling emoji icon string\r\n    let regexp = /:[\\w]+[_]?[-]?[+]*[\\w]+:/g;\r\n    let str = messageData.text;\r\n\r\n    let array = [...str.matchAll(regexp)];\r\n\r\n    for(let i = 0 ; i < array.length ; i++)  {\r\n      let emojiComp = document.querySelector('[title=' + String(array[i]).split(\":\").join(\"\") +']');\r\n      let emojiHtml = emojiComp.innerHTML;\r\n      messageDataText = messageDataText.replace(String(array[i]), String(emojiHtml));\r\n    }\r\n\r\n    // Handling image case\r\n    messageDataText = messageDataText.split(\"<img\").join(\"<img data_group='attach-file'\");\r\n\r\n    // let targetId;\r\n    if (message.from === this.state.signedInUser._id) {\r\n      messageData.position = \"right\";\r\n      messageData.renderAddCmp = () => { return renderHtml(`<div className=\"message-text message-text-right\">${messageDataText}</div>`)};\r\n      // targetId = message.to;\r\n    //   messageData.avatar = `${process.env.REACT_APP_SERVER_URI}/avatar/${this.state.user.id}.jpg`;\r\n      messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.signedInUser.profile_image}`;\r\n    } else {\r\n      messageData.position = \"left\";      \r\n      messageData.renderAddCmp = () => { return renderHtml(`<div className=\"message-text message-text-left\">${messageDataText}</div>`)};\r\n      // targetId = message.from;\r\n    //   messageData.avatar = `${process.env.REACT_APP_SERVER_URI}/avatar/${targetId}.jpg`;\r\n      messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.targetUser.profile_image}`;\r\n    }\r\n    // let targetIndex = userChatData.findIndex(u => u.id === targetId);\r\n    // messageData.renderAddCamp = this.customeRenderAddCamp;\r\n    messageData.alert = false;\r\n    if (!userChatData.messages) {\r\n      userChatData.messages = [];\r\n    } else {\r\n      if(userChatData.messages[userChatData.messages.length-1].alert === true ) {\r\n        userChatData.messages.pop();\r\n      }  \r\n    }\r\n    // console.log(this.state.userChatData.messages[this.state.userChatData.messages.length - 1]);\r\n    let messages = this.state.userChatData.messages;\r\n    if(typeof messages != 'undefined' && messages.length > 0) {\r\n      if(messages[messages.length-1].position === messageData.position) {\r\n        let prevMessageData = messages[messages.length-1];\r\n        prevMessageData.avatar = '';\r\n        prevMessageData.date = '';\r\n        userChatData.messages.pop();\r\n        userChatData.messages.push(prevMessageData);\r\n      }\r\n    }\r\n    userChatData.messages.push(messageData);\r\n    this.setState({ userChatData });\r\n    console.log(\"This is state for this component\",this.state);\r\n\r\n\r\n    // Scroll to bottom when receiving the new message\r\n    var element = document.querySelector('[class=\"rce-mlist\"]');\r\n    console.log(\"this is element error\", element,\"type\", typeof element);\r\n    element.scrollTop = element.scrollHeight;\r\n  }\r\n  /**\r\n   *\r\n   * @param {User} e\r\n   *\r\n   * called when user clicks to sign-in\r\n   */\r\n  onUserClicked(e) {\r\n    let user = e.user;\r\n    this.socket.emit(\"sign-in\", user);\r\n    let userChatData = this.state.users.filter(u => u.id !== user.id);\r\n    this.setState({ user, signInModalShow: false, userChatData });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {ChatItem} e\r\n   *\r\n   * handles if user clickes on ChatItem on left.\r\n   */\r\n  onChatClicked(e) {\r\n    let users = this.state.userChatData;\r\n    for (let index = 0; index < users.length; index++) {\r\n      if (users[index].id === e.user.id) {\r\n        users[index].unread = 0;\r\n        this.setState({ selectedUserIndex: index, userChatData: users });\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {messageText} text\r\n   *\r\n   * creates message in a format in which messageList can render.\r\n   * position is purposely omitted and will be appended when message is received.\r\n   */\r\n  createMessage(text) {\r\n    let message = {\r\n      to: this.state.targetUser._id,\r\n      message: {\r\n        type: \"text\",\r\n        text: text,\r\n        date: +new Date(),\r\n        className: \"message\"\r\n      },\r\n      from: this.state.signedInUser._id\r\n    };\r\n    this.socket.emit(\"message\", message);\r\n  }\r\n\r\n  /**\r\n   * Toggles views from 'ChatList' to 'ChatBox'\r\n   *\r\n   * only on Phone\r\n   */\r\n\r\n  changeProfile(userInfo) {\r\n    this.setState({signedInUser: userInfo});\r\n  }\r\n\r\n  onProfileModalShow(status) {\r\n    this.setState({profileModalShow: status});\r\n  }\r\n\r\n  onSearchSettingModalShow(status) {\r\n    this.setState({searchModalShow: status});    \r\n  }\r\n  onReportModalShow(status) {\r\n    this.setState({reportModalShow: status});\r\n  }\r\n  onShowImageFullScreen() {\r\n    this.setState({showImageFullScreen: false});\r\n  }\r\n  \r\n  onTyping() {\r\n    this.socket.emit(\"on-typing\", this.state.targetUser);\r\n  }\r\n\r\n  onTargetUserTyping() {\r\n    this.setState({onTyping: true});\r\n\r\n    let userChatData = this.state.userChatData;\r\n    let messages = userChatData.messages;\r\n    let messageData = {};\r\n    if(typeof messages != 'undefined'){\r\n      if(messages[messages.length-1].alert !== true || messages.length === 0) {\r\n        messageData.position = \"left\";      \r\n        messageData.renderAddCmp = () => { return <OnTyping/>};\r\n        messageData.avatar = `${RESTAPIUrl}/public/profile/${this.state.targetUser.profile_image}`;\r\n        messageData.className = \"message\";\r\n        messageData.alert = true;\r\n        \r\n        if (!userChatData.messages) {\r\n          userChatData.messages = [];\r\n        }\r\n        userChatData.messages.push(messageData);\r\n        this.setState({ userChatData });\r\n        \r\n        this.turnOffRedTimeout = setTimeout(() => {\r\n          userChatData = this.state.userChatData;\r\n          if(userChatData.messages[userChatData.messages.length-1].alert === true) {\r\n            userChatData.messages.pop();\r\n            this.setState({ userChatData });\r\n          }          \r\n        }, 2000);\r\n      } else {\r\n             \r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  onTargetDisconnect() {\r\n    if(this.state.targetUser !== '' || typeof this.state.targetUser.userName !== 'undefined') {\r\n      NotificationManager.error(\r\n        `${this.state.targetUser.userName} disconnected from this chat room.`\r\n      );\r\n    }\r\n    \r\n    this.setState({targetUser: ''});\r\n    this.setState({ userChatData: {}});\r\n    this.socket.emit(\"confirm-target-disconnect\");   \r\n  }\r\n\r\n  updateProfile() {\r\n    const obj = getFromStorage('guest_signin');\r\n    if(obj && obj.token) {\r\n        var decoded_token = jwt_decode(obj.token);\r\n        var signedInUser = decoded_token.user;\r\n    }\r\n    this.setState({signedInUser: signedInUser, imageHash:Date.now()});\r\n  }\r\n\r\n  closeSettingBox() {\r\n    this.setState({\r\n      profileModalShow: false,\r\n      searchModalShow: false,\r\n      reportModalShow:false,\r\n    })\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit('log-out', signedInUser);\r\n  }\r\n\r\n  onLogOut() {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  onTargetLogout() {\r\n    NotificationManager.error(\r\n      `${this.state.targetUser.userName} log out.`\r\n    );\r\n\r\n    let blackUsersList = this.state.blackUsersList;\r\n    let targetIndex = blackUsersList.indexOf(this.state.targetUser._id);\r\n      blackUsersList.splice(targetIndex, targetIndex+1 );\r\n  \r\n    this.setState({\r\n      targetUser: '',\r\n      userChatData: {},\r\n      blackUsersList: blackUsersList\r\n    });\r\n    this.socket.emit(\"confirm-target-logout\");\r\n  }\r\n  // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n  startCall(isCaller, targetUserID, config) {\r\n    console.log(\"call start now \", isCaller, targetUserID, config)\r\n    // this.config = config;\r\n    this.setState({config});\r\n    this.pc = new PeerConnection(targetUserID)\r\n      .on('localStream', (src) => {\r\n        const newState = { callWindow: 'active', localSrc: src };\r\n        if (!isCaller) newState.callModal = '';\r\n        this.setState(newState);\r\n      })\r\n      .on('peerStream', (src) => this.setState({ peerSrc: src }))\r\n      .start(isCaller, config);\r\n  }\r\n\r\n  rejectCall() {\r\n    const { callFrom } = this.state;\r\n    this.socket.emit('end', { to: callFrom });\r\n    this.setState({ callModal: '' });\r\n  }\r\n\r\n  endCall(isStarter) {\r\n    if (_.isFunction(this.pc.stop)) {\r\n      this.pc.stop(isStarter);\r\n    }\r\n    this.pc = {};\r\n    // this.config = null;\r\n    this.setState({\r\n      callWindow: '',\r\n      callModal: '',\r\n      localSrc: null,\r\n      peerSrc: null,\r\n      config: null\r\n    });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    // @@@@@@@@@@@@@@@@@@@@@@@@@@\r\n    const { callModal, callWindow, localSrc, peerSrc } = this.state;\r\n    return (\r\n      <div>\r\n        {/* <button onClick={this.findTargetUser.bind(this)}>Next stranger</button> */}\r\n        \r\n        <ChatBox\r\n          signedInUser={this.state.signedInUser}\r\n          imageHash={this.state.imageHash}\r\n          onSendClicked={this.createMessage.bind(this)}\r\n          targetUser={\r\n            this.state.userChatData\r\n          }\r\n          onProfileModalShow={this.onProfileModalShow.bind(this)}\r\n          onSearchSettingModalShow={this.onSearchSettingModalShow.bind(this)}\r\n          onReportModalShow={this.onReportModalShow.bind(this)}\r\n          findTargetUser={this.findTargetUser.bind(this)}\r\n          onTyping={this.onTyping.bind(this)}\r\n          startCall={this.startCallHandler}\r\n          logOut={this.logOut.bind(this)}\r\n        />\r\n        \r\n        <ErrorModal\r\n          show={this.state.error}\r\n          errorMessage={this.state.errorMessage}\r\n        />\r\n\r\n        <LoadingModal show={this.state.loading} />\r\n        <NotificationContainer />        \r\n        \r\n        <ProfileBox \r\n          profileInfo={this.state.signedInUser}\r\n          iamgeHash={this.state.imageHash}\r\n          onChangeProfile={this.changeProfile.bind(this)}\r\n          onProfileModalShow={this.onProfileModalShow.bind(this)}\r\n          profileContainer={ `profile-container-${this.state.profileModalShow}` }\r\n          updateProfile={this.updateProfile.bind(this)}\r\n        />\r\n        <SearchSettingBox\r\n          searchContainer={ `search-container-${this.state.searchModalShow}` }\r\n          searchSetting={this.state.searchSetting}\r\n          onSearchSettingModalShow={this.onSearchSettingModalShow.bind(this)}\r\n        />\r\n\r\n        <ReportBox\r\n          reportContainer={ `report-container-${this.state.reportModalShow}` }\r\n          onReportModalShow={this.onReportModalShow.bind(this)}\r\n          signedInUser={this.state.signedInUser}\r\n          targetUser={this.state.targetUser}\r\n        />\r\n\r\n        { this.state.reportModalShow || this.state.profileModalShow || this.state.searchModalShow ? (\r\n          <div>            \r\n            <div className=\"setting-back\" onClick={this.closeSettingBox.bind(this)}></div>\r\n          </div>\r\n        ): null } \r\n\r\n        {this.state.showImageFullScreen ? \r\n          <FullScreenImage \r\n            imageUrl={this.state.attachFileUrl}\r\n            onShowImageFullScreen={this.onShowImageFullScreen.bind(this)}\r\n          />\r\n          : null\r\n        }\r\n\r\n        {!_.isEmpty(this.state.config) && (\r\n          <CallWindow\r\n            status={this.state.callWindow}\r\n            localSrc={this.state.localSrc}\r\n            peerSrc={this.state.peerSrc}\r\n            config={this.state.config}\r\n            mediaDevice={this.pc.mediaDevice}\r\n            endCall={this.endCallHandler}\r\n          />\r\n        ) }\r\n        \r\n        {this.state.targetUser ? (\r\n          <CallModal\r\n            status={callModal}\r\n            startCall={this.startCallHandler}\r\n            rejectCall={this.rejectCallHandler}\r\n            callFrom={this.state.targetUser._id}\r\n            contactUser={this.state.targetUser.userName}\r\n            userAvatar={this.state.targetUser.profile_image}\r\n          />\r\n        ): null}\r\n\r\n        {this.state.confirmRemoveOldSession ? (\r\n          <div>\r\n            <div className=\"hide-comp\"></div>\r\n            <div className=\"close-window\">\r\n              <span>You are signed in another location and disconnect old session.</span>\r\n              <div className=\"button-wrapper\">\r\n                <MDBBtn\r\n                  size=\"sm\"\r\n                  color=\"primary\"\r\n                  onClick={this.onConfirmRemoveOldSession.bind(this)}\r\n                >\r\n                  Confirm\r\n                </MDBBtn>\r\n              </div> \r\n            </div>\r\n          </div>\r\n        ):\r\n        null\r\n        } \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\r\nimport 'whatwg-fetch';\r\nimport {\r\n    NotificationContainer,\r\n    NotificationManager\r\n  } from \"react-notifications\";\r\n  import \"react-notifications/lib/notifications.css\";\r\n\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport './AdminSign.css';\r\n\r\nclass AdminSign extends React.Component {\r\n  constructor(props) {\r\n    super(props);    \r\n\r\n    this.state = {\r\n        email: '' ,\r\n        password: '',\r\n        adminSignLoading: false\r\n    }\r\n  }\r\n\r\n  handleChangeEmail(e) {\r\n    console.log(\"email change\", this.state.email)\r\n    this.setState({ email: e.target.value });\r\n  }\r\n\r\n  handleChangePassword(e) {\r\n      this.setState({ password: e.target.value });\r\n  }\r\n\r\n  \r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    \r\n    this.setState ({ \r\n      adminSignLoading: true, \r\n    });\r\n\r\n    fetch(RESTAPIUrl + '/api/admin/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password\r\n      }),\r\n    }).then(res =>res.json())\r\n      .then(json => {\r\n        console.log('this is json object', json);\r\n        if(json.success) {\r\n          this.props.history.push(\"/admin/manage\");\r\n        } else {\r\n            NotificationManager.error(\r\n                `${json.message}`\r\n            );\r\n        }\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n        <MDBRow>\r\n            <NotificationContainer />  \r\n          <MDBCol sm=\"10\" md=\"7\" lg=\"6\" xl=\"4\" className=\"mx-auto mt-3 sign-container\">\r\n            <form onSubmit={this.handleSubmit.bind(this)}>\r\n              <MDBCard>\r\n              <div className=\"text-center sign-title\">\r\n                <h5 className=\"dark-grey-text mb-5\"><strong> Adminiatrator Sign in</strong></h5>\r\n              </div>\r\n              <MDBCardBody className=\"mx-4\">\r\n                \r\n                <MDBInput label=\"Your Email\" group type=\"email\" onChange={this.handleChangeEmail.bind(this)} validate error=\"wrong\" success=\"right\" required/>\r\n\r\n                <MDBInput group type=\"password\" onChange={this.handleChangePassword.bind(this)} validate error=\"wrong\" success=\"right\" required/>\r\n\r\n                <div className=\"text-center pt-3 mb-3\">\r\n                  <MDBBtn \r\n                    type=\"submit\" \r\n                    className=\"btn-block z-depth-1a\"\r\n                    outline color=\"info\"\r\n                    >\r\n                      {this.state.logInLoading ? 'Authenticating...' : 'SignIn'}\r\n                  </MDBBtn>\r\n                </div>\r\n\r\n              </MDBCardBody>\r\n              <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\r\n                \r\n              </MDBModalFooter>\r\n            </MDBCard>\r\n            </form>\r\n          </MDBCol>\r\n        </MDBRow>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default AdminSign;","import React from 'react';\r\nimport { MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody, MDBModalFooter  } from 'mdbreact';\r\nimport 'whatwg-fetch';\r\nimport {\r\n    NotificationContainer,\r\n    NotificationManager\r\n  } from \"react-notifications\";\r\n  import \"react-notifications/lib/notifications.css\";\r\n\r\nimport { RESTAPIUrl } from '../../config/config';\r\nimport './AdminManage.css';\r\n\r\nclass AdminManage extends React.Component {\r\n  constructor(props) {\r\n    super(props);    \r\n\r\n    this.state = {\r\n        userListShow: true,\r\n        userProfileShow: false,\r\n        adminProfileShow: false,\r\n        toggleWrapper: true,\r\n    }\r\n\r\n    this.updateUserProfile = this.updateUserProfile.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.getUserList();\r\n      this.getAdminInfo();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const $button  = document.querySelector('#sidebar-toggle');\r\n    const $wrapper = document.querySelector('#wrapper');\r\n    \r\n    $button.addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      $wrapper.classList.toggle('toggled');\r\n    });\r\n  }\r\n  \r\n  getUserList() {\r\n\r\n    fetch(RESTAPIUrl + '/api/admin/manage', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \r\n      }),\r\n    }).then(res =>res.json())\r\n      .then(json => {\r\n        if(json.success) {\r\n          this.setState({users: json.users});\r\n        } else {\r\n            NotificationManager.error(\r\n                `${json.message}`\r\n            );\r\n        }\r\n      })\r\n  }\r\n\r\n  getAdminInfo() {\r\n      fetch(RESTAPIUrl + '/api/admin/get-info', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type' : 'application/json'\r\n          },\r\n          bpdy: JSON.stringify({\r\n\r\n          }),          \r\n      }).then(res => res.json())\r\n      .then(json => {\r\n          if(json.success) {\r\n            this.setState({\r\n                email: json.admin.email\r\n            })\r\n          } else {\r\n\r\n          }\r\n      })\r\n  }\r\n\r\n  updateUserProfile(user) {\r\n    this.setState({\r\n        userListShow: false,\r\n        userProfileShow: true,\r\n        selectedUser: user\r\n    });\r\n  }\r\n\r\n  userListShow() {\r\n      this.setState({\r\n        userListShow: true,\r\n        userProfileShow: false,\r\n        adminProfileShow: false,\r\n      });\r\n  }\r\n\r\n  adminProfileShow() {\r\n    this.setState({\r\n        userListShow: false,\r\n        userProfileShow: false,\r\n        adminProfileShow: true,\r\n      });\r\n  }\r\n\r\n  handleChangeEmail(e) {\r\n    this.setState({email: e.target.value});\r\n  }\r\n\r\n  handleChangePassword(e) {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  handleChangeConfirmPassword(e) {\r\n    this.setState({confirmPassword: e.target.value});\r\n  }\r\n\r\n  enableUser() {\r\n    console.log(\"sdfsdf\", this.state.users);\r\n    fetch(RESTAPIUrl + '/api/admin/enable-user', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: this.state.selectedUser\r\n        }),\r\n      }).then(res =>res.json())\r\n        .then(json => {\r\n          if(json.success) {\r\n            NotificationManager.success(`${json.message}`);\r\n            let selectedUser = json.user;\r\n            this.setState({selectedUser});\r\n\r\n            this.state.users.map((user, i) => {\r\n                if(user._id === selectedUser._id) {\r\n                    let users = this.state.users;\r\n                    users[i] = selectedUser;\r\n                    this.setState({users});\r\n                    return true;\r\n                }\r\n                return false;\r\n            })\r\n\r\n          } else {\r\n              NotificationManager.error(\r\n                  `${json.message}`\r\n              );\r\n          }\r\n        })\r\n  }\r\n\r\n  handleSubmit() {\r\n    let { email, password, confirmPassword } = this.state;\r\n    fetch(RESTAPIUrl + '/api/admin/update-profile', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        }),\r\n      }).then(res =>res.json())\r\n        .then(json => {\r\n          if(json.success) {\r\n            NotificationManager.success(`${json.message}`);\r\n          } else {\r\n              NotificationManager.error(\r\n                  `${json.message}`\r\n              );\r\n          }\r\n        })\r\n  }\r\n\r\n  toggleWrapper () {\r\n      this.setState({toggleWrapper: !this.state.toggleWrapper})\r\n  }\r\n  render() {\r\n    return (\r\n        <div>\r\n            <NotificationContainer /> \r\n\r\n            <aside id=\"sidebar-wrapper\" className={!this.state.toggleWrapper ? 'expand-sidebar' : 'shrink-sidebar'}>\r\n                <div className=\"sidebar-brand\">\r\n                </div>\r\n                <ul className=\"sidebar-nav\">\r\n                <li>\r\n                    <a href=\"!#\"  onClick={this.userListShow.bind(this)}>\r\n                        <i className=\"fa fa-tasks\"></i>User Manage\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"!#\" onClick={this.adminProfileShow.bind(this)}>\r\n                        <i className=\"fa fa-user\"></i>Profile\r\n                    </a>\r\n                </li>\r\n                </ul>\r\n            </aside>\r\n\r\n            <div id=\"wrapper\" className={this.state.toggleWrapper ? 'expand-wrapper' : 'shrink-wrapper'}>              \r\n\r\n                <div id=\"navbar-wrapper\">\r\n                    <nav className=\"navbar navbar-inverse\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"navbar-header\">\r\n                        <a href=\"!#\" className=\"navbar-brand\" id=\"sidebar-toggle\">\r\n                            <i \r\n                                className=\"fa fa-bars\"\r\n                                onClick={this.toggleWrapper.bind(this)}    \r\n                            >\r\n                                \r\n                            </i>\r\n                        </a>\r\n                        </div>\r\n                    </div>\r\n                    </nav>\r\n                </div>\r\n\r\n                {this.state.userListShow? \r\n                    <section className=\"content-wrapper user-manage\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-10 offset-lg-1\">\r\n                            {\r\n                                this.state.users ? (\r\n                                    <div className=\"table-responsive\">\r\n                                        <table summary=\"This table shows how to create responsive tables using Bootstrap's default functionality\" className=\"table table-bordered table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Num</th>\r\n                                                <th>Avatar</th>\r\n                                                <th>User Name</th>\r\n                                                <th>Age</th>\r\n                                                <th>Location</th>\r\n                                                <th>Gender</th>\r\n                                                <th>Ip Address</th>\r\n                                                <th>Reported Number</th>\r\n                                                <th>Allowed</th>\r\n                                                <th>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {                                    \r\n                                            this.state.users.map((user, i) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{i+1}</td>\r\n                                                        <td><img src={`${RESTAPIUrl}/public/profile/${user.profile_image}`} alt=\"profile-img\"></img>   </td>\r\n                                                        <td>{user.userName}</td>\r\n                                                        <td>{user.age}</td>\r\n                                                        <td>{user.location}</td>\r\n                                                        <td>{user.gender}</td>\r\n                                                        <td>{user.ip_address}</td>\r\n                                                        <td>{user.report_number}</td>\r\n                                                        <td>{user.isDeleted? 'Disabled' : 'Enabled'}</td>\r\n                                                        <td>\r\n                                                            <MDBBtn \r\n                                                                type=\"button\" \r\n                                                                className=\"btn-block z-depth-1a\"\r\n                                                                size=\"sm\"\r\n                                                                color=\"primary\"\r\n                                                                onClick={()=>this.updateUserProfile(user)}\r\n                                                                >\r\n                                                                Update\r\n                                                            </MDBBtn>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })                                    \r\n                                        }\r\n                                        </tbody>\r\n                                        </table>\r\n                                        \r\n                                    </div>\r\n                                ) : \r\n                                (\r\n                                    <div className=\"loading-container\">\r\n                                        <div className=\"loading\"></div>\r\n                                        <div id=\"loading-text\">loading</div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            \r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </section>\r\n                : null\r\n                }\r\n                \r\n                {this.state.adminProfileShow? \r\n                    <section className=\"content-wrapper \">\r\n                        <MDBCol sm=\"10\" md=\"7\" lg=\"6\" xl=\"4\" className=\"mx-auto mt-3 admin-profile\">\r\n                            <form onSubmit={this.handleSubmit.bind(this)}>\r\n                            <MDBCard>\r\n                            <div className=\"text-center sign-title\">\r\n                                <h5 className=\"dark-grey-text mb-5\"><strong> Update Profile</strong></h5>\r\n                            </div>\r\n                            <MDBCardBody className=\"mx-4\">\r\n                                \r\n                                <MDBInput label=\"Your Email\" group type=\"email\" value= {this.state.email? this.state.email: ''} onChange={this.handleChangeEmail.bind(this)} validate error=\"wrong\" success=\"right\" required/>\r\n\r\n                                <MDBInput group type=\"password\" label=\"Password\" onChange={this.handleChangePassword.bind(this)} validate error=\"wrong\" success=\"right\" required/>\r\n\r\n                                <MDBInput group type=\"password\" label=\"Confirm Password\" onChange={this.handleChangeConfirmPassword.bind(this)} validate error=\"wrong\" success=\"right\" required/>\r\n\r\n                                <div className=\"text-center pt-3 mb-3\">\r\n                                <MDBBtn \r\n                                    type=\"submit\" \r\n                                    className=\"btn-block z-depth-1a\"\r\n                                    outline color=\"info\"\r\n                                    >\r\n                                    Update\r\n                                </MDBBtn>\r\n                                </div>\r\n\r\n                            </MDBCardBody>\r\n                            <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\r\n                                \r\n                            </MDBModalFooter>\r\n                            </MDBCard>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </section>\r\n                : null \r\n                }\r\n\r\n                {this.state.userProfileShow? \r\n                    <section className=\"content-wrapper \">\r\n                        <MDBCol sm=\"10\" md=\"10\" lg=\"8\" xl=\"6\" className=\"mx-auto mt-3 user-profile\">\r\n                            <form onSubmit={this.handleSubmit.bind(this)}>\r\n                            <MDBCard>\r\n                                <div className=\"avatar-container\">\r\n                                    <img src={`${RESTAPIUrl}/public/profile/${this.state.selectedUser.profile_image}`} alt=\"user-img\"></img>\r\n                                    <h2>{this.state.selectedUser.userName}</h2>\r\n                                </div> \r\n\r\n                                <div className=\"contact-information\">\r\n                                    <div className=\"contact-title\">\r\n                                        <span>PERSONAL & CONTACT INFORMATION</span>\r\n                                    </div>\r\n                                    <div className=\"contact-body\">\r\n                                        <div className=\"contact-sub-body\">\r\n                                            <div className=\"contact-sub-left\">\r\n                                                <i className=\"fa fa-transgender\" aria-hidden=\"true\"></i>\r\n                                                Gender\r\n                                            </div>\r\n                                            <div className=\"contact-sub-right\">\r\n                                                <span>{this.state.selectedUser.gender}</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"contact-sub-body\">\r\n                                            <div className=\"contact-sub-left\">\r\n                                                <i className=\"fa fa-user\"></i>\r\n                                                User Name\r\n                                            </div>\r\n                                            <div className=\"contact-sub-right\">\r\n                                                <span>{this.state.selectedUser.userName}</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"contact-sub-body\">\r\n                                            <div className=\"contact-sub-left\">\r\n                                                <i className=\"fa fa-birthday-cake\" aria-hidden=\"true\"></i>\r\n                                                Age\r\n                                            </div>\r\n                                            <div className=\"contact-sub-right\">\r\n                                                <span>{this.state.selectedUser.age}</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"contact-sub-body\">\r\n                                            <div className=\"contact-sub-left\">\r\n                                                <i className=\"fas fa-map-marker-alt\"></i>\r\n                                                Location\r\n                                            </div>\r\n                                            <div className=\"contact-sub-right\">\r\n                                                <span>{this.state.selectedUser.location}</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"contact-sub-body\">\r\n                                            <div className=\"contact-sub-left\">\r\n                                                <i className=\"fa fa-server\" aria-hidden=\"true\"></i>\r\n                                                Ip Address\r\n                                            </div>\r\n                                            <div className=\"contact-sub-right\">\r\n                                                <span>{this.state.selectedUser.ip_address}</span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"contact-sub-body\">\r\n                                            <div className=\"contact-sub-left\">\r\n                                                <i className=\"fa fa-ban\" aria-hidden=\"true\"></i>\r\n                                                Allowed\r\n                                            </div>\r\n                                            <div className=\"contact-sub-right\">\r\n                                                <div className=\"button-switch\">\r\n                                                    <input \r\n                                                        type=\"checkbox\" \r\n                                                        id=\"switch-blue\" \r\n                                                        className=\"switch\"\r\n                                                        onChange={this.enableUser.bind(this)}\r\n                                                        checked={!this.state.selectedUser.isDeleted} \r\n                                                    />\r\n                                                    <label for=\"switch-blue\" className=\"lbl-off\">No</label>\r\n                                                    <label for=\"switch-blue\" className=\"lbl-on\">Yes</label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"contact-sub-body\">\r\n                                            <div className=\"contact-sub-left\">\r\n                                                <i className=\"fa fa-file\" aria-hidden=\"true\"></i>\r\n                                                Report Number\r\n                                            </div>\r\n                                            <div className=\"contact-sub-right\">\r\n                                                <span>{this.state.selectedUser.report_number}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"report-title\">\r\n                                        <span>REPORT LIST</span>\r\n                                    </div>\r\n                                    <div className=\"report-body\">\r\n                                        {this.state.selectedUser.report_reason.map((object, i) => {\r\n                                            return(\r\n                                                <div className=\"report-sub-body\">                                            \r\n                                                        \r\n                                                    {this.state.users.map((user) => {\r\n                                                        if(user._id === object.reporter_id) {\r\n                                                            return (\r\n                                                                <div className=\"report-sub-left\">\r\n                                                                    <img src={`${RESTAPIUrl}/public/profile/${user.profile_image}`} alt=\"reporter_img\"></img><span>{user.userName}</span>\r\n                                                                </div>\r\n                                                            );\r\n                                                        }\r\n                                                        return null;\r\n                                                    })}\r\n                                                    \r\n                                                    <div className=\"contact-sub-right\">\r\n                                                        <span>{object.reason}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                        \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n\r\n                            </MDBCard>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </section>\r\n                : null \r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default AdminManage;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { getFromStorage } from '../utils/storage';\r\n\r\n// FREE\r\nimport HomePage from '../pages/HomePage/HomePage';\r\nimport UserSign from '../pages/UserSign/UserSign';\r\nimport GuestSign from '../pages/GuestSign/GuestSign';\r\nimport Chat from '../pages/Chat/Chat';\r\n\r\nimport AdminSign from '../pages/AdminSign/AdminSign';\r\nimport AdminManage from '../pages/AdminManage/AdminManage';\r\n\r\nconst fakeAuth = () => {\r\n  const obj = getFromStorage('guest_signin');\r\n  \r\n  if(obj && obj.token) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    fakeAuth()      \r\n      ? <Redirect to='/chat' /> \r\n      : <Component {...props} />\r\n  )} />\r\n)\r\n\r\nconst PrivateChatRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    fakeAuth()  \r\n      ? <Component {...props} />\r\n      : <Redirect to='/' /> \r\n  )} />\r\n)\r\n\r\nclass Routes extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <PrivateRoute exact path=\"/\" component={HomePage} />\r\n        <PrivateRoute path=\"/usersign\" component={ UserSign } />\r\n        <PrivateRoute path=\"/guest\" component={ GuestSign } />\r\n        <PrivateChatRoute path=\"/chat\" component={ Chat } />\r\n        <Route exact path=\"/admin\" component={ AdminSign } />\r\n        <Route path=\"/admin/manage\" component= { AdminManage } />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Routes />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}